{"id":"85f531cf3771440137d72b642f2b075f","_format":"hh-sol-build-info-1","solcVersion":"0.8.26","solcLongVersion":"0.8.26+commit.8a97fa7a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\";\nimport {AccessControlUpgradeable} from \"../AccessControlUpgradeable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerable, AccessControlUpgradeable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable\n    struct AccessControlEnumerableStorage {\n        mapping(bytes32 role => EnumerableSet.AddressSet) _roleMembers;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControlEnumerable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlEnumerableStorageLocation = 0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000;\n\n    function _getAccessControlEnumerableStorage() private pure returns (AccessControlEnumerableStorage storage $) {\n        assembly {\n            $.slot := AccessControlEnumerableStorageLocation\n        }\n    }\n\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            $._roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            $._roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\nimport {Arrays} from \"../Arrays.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n * - Set can be cleared (all elements removed) in O(n).\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function _clear(Set storage set) private {\n        uint256 len = _length(set);\n        for (uint256 i = 0; i < len; ++i) {\n            delete set._positions[set._values[i]];\n        }\n        Arrays.unsafeSetLength(set._values, 0);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(Bytes32Set storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(AddressSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(UintSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/EHMarketV1.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport {IERC20, SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {AccessControlEnumerableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\ncontract EHMarketV1 is AccessControlEnumerableUpgradeable {\n  using SafeERC20 for IERC20;\n  using ECDSA for bytes32;\n  using MessageHashUtils for bytes32;\n\n  error UnauthorizedSigner();\n\n  event UserBalanceChanged(address indexed account, int256 amount, uint256 requestId);\n  event DelegateUpdated(address indexed delegator, address indexed delegate, uint256 allowance);\n\n  bytes32 public constant MATCHER_ROLE = keccak256(\"MATCHER_ROLE\");\n  address public collateral;\n\n  /// @dev Storage gap for future upgrades.\n  uint256[10] internal __gap;\n\n  constructor() {\n    _disableInitializers();\n  }\n\n  function initialize(address[] memory _matchers, address _collateral) public initializer {\n    __AccessControlEnumerable_init();\n\n    _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    for (uint i = 0; i < _matchers.length; i++) {\n      _grantRole(MATCHER_ROLE, _matchers[i]);\n    }\n    collateral = _collateral;\n  }\n\n  //////////////////////////\n  //  User functions\n  //////////////////////////\n\n  function depositAssetTo(address to, uint256 amount) public {\n    emit UserBalanceChanged(to, int256(amount), 0);\n    IERC20(collateral).safeTransferFrom(_msgSender(), address(this), amount);\n  }\n\n  function depositAsset(uint256 amount) external {\n    depositAssetTo(_msgSender(), amount);\n  }\n\n  function withdrawAsset(address from, uint256 amount, uint256 requestId) external {\n    require(hasRole(MATCHER_ROLE, _msgSender()), UnauthorizedSigner());\n    emit UserBalanceChanged(from, -int256(amount), requestId);\n    IERC20(collateral).safeTransfer(from, amount);\n  }\n\n  function setDelegate(address delegate, uint256 allowance) external {\n    emit DelegateUpdated(_msgSender(), delegate, allowance);\n  }\n}\n"},"contracts/interfaces/IEventHorizonMarket.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ninterface IEventHorizonMarket {\n  event NewFundingRate(\n    uint256 indexed index,\n    int256 frLongPerSecond,\n    int256 frShortPerSecond,\n    int256 longFRStored,\n    int256 shortFRStored\n  );\n  event DepositBalanceChanged(address indexed account, int256 amount, uint256 finalBalance);\n  event InstrumentUpdate(uint256 indexed index, string[12] ticker, uint256 leverage);\n  event InstrumentDeleted(uint256 indexed index);\n  event BasicParamsUpdate(uint256 soLevel, uint256 withdrawMarginLevel, uint256 liquidationFeePercent);\n  event DelegateUpdated(address indexed delegator, address indexed delegate, uint256 allowance);\n  event BalancesMerkleRootUpdated(bytes32 merkleRoot);\n\n  error InstrumentDoesNotExist();\n  error WithdrawMoreThanBalance();\n  error UnauthorizedSigner();\n  error InvalidSignature();\n  error ExpiredSignature();\n  error MatcherIsOperational(uint256 validUntil);\n  error InvalidMerkleProof(bytes32 leaf);\n}\n"},"contracts/mock/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MockToken is ERC20, Ownable {\n  constructor(\n    string memory name,\n    string memory symbol,\n    address initialOwner\n  ) ERC20(name, symbol) Ownable(initialOwner) {}\n\n  function mint(address to, uint256 amount) public onlyOwner {\n    _mint(to, amount);\n  }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[900],"ERC165Upgradeable":[940],"IAccessControl":[1023],"Initializable":[854]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1024,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":901,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":941,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":855,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":900,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":940,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,940,5601,1023,900,854],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[939],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1023_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1023_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1023","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":939,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[990],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[998],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1006],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1014],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1022],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7978:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8017:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7988:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7988:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7988:20:0"},"referencedDeclaration":35,"src":"7988:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8021:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8069:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8075:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8061:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8239:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8253:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8057:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8085:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8099:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8099:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8108:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8099:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8099:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8175:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"8184:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8157:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8152:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8211:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7923:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7937:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7929:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:0"},"scope":362,"src":"7894:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6194:0","usedErrors":[603,606,950,953],"usedEvents":[611,962,971,980]}],"src":"108:8177:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[586],"AccessControlUpgradeable":[362],"EnumerableSet":[9828],"IAccessControlEnumerable":[1197],"Initializable":[854]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:1"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1198,"src":"155:112:1","symbolAliases":[{"foreign":{"id":365,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"163:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"../AccessControlUpgradeable.sol","id":368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":363,"src":"268:73:1","symbolAliases":[{"foreign":{"id":367,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"276:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":9829,"src":"342:86:1","symbolAliases":[{"foreign":{"id":369,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"350:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":855,"src":"429:66:1","symbolAliases":[{"foreign":{"id":371,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"437:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":374,"name":"Initializable","nameLocations":["648:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"648:13:1"},"id":375,"nodeType":"InheritanceSpecifier","src":"648:13:1"},{"baseName":{"id":376,"name":"IAccessControlEnumerable","nameLocations":["663:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":1197,"src":"663:24:1"},"id":377,"nodeType":"InheritanceSpecifier","src":"663:24:1"},{"baseName":{"id":378,"name":"AccessControlUpgradeable","nameLocations":["689:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"689:24:1"},"id":379,"nodeType":"InheritanceSpecifier","src":"689:24:1"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"497:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,362,940,5601,1197,1023,900,854],"name":"AccessControlEnumerableUpgradeable","nameLocation":"610:34:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":383,"libraryName":{"id":380,"name":"EnumerableSet","nameLocations":["726:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":9828,"src":"726:13:1"},"nodeType":"UsingForDirective","src":"720:49:1","typeName":{"id":382,"nodeType":"UserDefinedTypeName","pathNode":{"id":381,"name":"EnumerableSet.AddressSet","nameLocations":["744:13:1","758:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"744:24:1"},"referencedDeclaration":9515,"src":"744:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"775:81:1","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable"},"id":390,"members":[{"constant":false,"id":389,"mutability":"mutable","name":"_roleMembers","nameLocation":"959:12:1","nodeType":"VariableDeclaration","scope":390,"src":"909:62:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":388,"keyName":"role","keyNameLocation":"925:4:1","keyType":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"917:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"909:49:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"EnumerableSet.AddressSet","nameLocations":["933:13:1","947:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"933:24:1"},"referencedDeclaration":9515,"src":"933:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"}],"name":"AccessControlEnumerableStorage","nameLocation":"868:30:1","nodeType":"StructDefinition","scope":586,"src":"861:117:1","visibility":"public"},{"constant":true,"id":393,"mutability":"constant","name":"AccessControlEnumerableStorageLocation","nameLocation":"1136:38:1","nodeType":"VariableDeclaration","scope":586,"src":"1111:132:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1111:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863316636666532343632316365383165633538323763616630323533636164623734373039623036313633306536623535653832333731373035393332303030","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1177:66:1","typeDescriptions":{"typeIdentifier":"t_rational_87732778178968556439956192144688703237987636878447527990685272173340959907840_by_1","typeString":"int_const 8773...(69 digits omitted)...7840"},"value":"0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000"},"visibility":"private"},{"body":{"id":400,"nodeType":"Block","src":"1360:97:1","statements":[{"AST":{"nativeSrc":"1379:72:1","nodeType":"YulBlock","src":"1379:72:1","statements":[{"nativeSrc":"1393:48:1","nodeType":"YulAssignment","src":"1393:48:1","value":{"name":"AccessControlEnumerableStorageLocation","nativeSrc":"1403:38:1","nodeType":"YulIdentifier","src":"1403:38:1"},"variableNames":[{"name":"$.slot","nativeSrc":"1393:6:1","nodeType":"YulIdentifier","src":"1393:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":397,"isOffset":false,"isSlot":true,"src":"1393:6:1","suffix":"slot","valueSize":1},{"declaration":393,"isOffset":false,"isSlot":false,"src":"1403:38:1","valueSize":1}],"id":399,"nodeType":"InlineAssembly","src":"1370:81:1"}]},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlEnumerableStorage","nameLocation":"1259:34:1","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"1293:2:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"$","nameLocation":"1357:1:1","nodeType":"VariableDeclaration","scope":401,"src":"1318:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"AccessControlEnumerableStorage","nameLocations":["1318:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"1318:30:1"},"referencedDeclaration":390,"src":"1318:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"src":"1317:42:1"},"scope":586,"src":"1250:207:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1531:7:1","statements":[]},"id":407,"implemented":true,"kind":"function","modifiers":[{"id":404,"kind":"modifierInvocation","modifierName":{"id":403,"name":"onlyInitializing","nameLocations":["1514:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1514:16:1"},"nodeType":"ModifierInvocation","src":"1514:16:1"}],"name":"__AccessControlEnumerable_init","nameLocation":"1472:30:1","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"1502:2:1"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"1531:0:1"},"scope":586,"src":"1463:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"1622:7:1","statements":[]},"id":413,"implemented":true,"kind":"function","modifiers":[{"id":410,"kind":"modifierInvocation","modifierName":{"id":409,"name":"onlyInitializing","nameLocations":["1605:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1605:16:1"},"nodeType":"ModifierInvocation","src":"1605:16:1"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"1553:40:1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1593:2:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"1622:0:1"},"scope":586,"src":"1544:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[91],"body":{"id":434,"nodeType":"Block","src":"1786:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1803:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":424,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"1823:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1197_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1197_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1818:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1197","typeString":"type(contract IAccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1849:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1818:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1803:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":430,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1888:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":428,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1864:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1870:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"1864:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1803:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":433,"nodeType":"Return","src":"1796:104:1"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"1634:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1704:17:1","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[],"src":"1762:8:1"},"parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"interfaceId","nameLocation":"1729:11:1","nodeType":"VariableDeclaration","scope":435,"src":"1722:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":415,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1722:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1721:20:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1780:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1780:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1779:6:1"},"scope":586,"src":"1695:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1188],"body":{"id":459,"nodeType":"Block","src":"2582:143:1","statements":[{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"$","nameLocation":"2631:1:1","nodeType":"VariableDeclaration","scope":459,"src":"2592:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":446,"nodeType":"UserDefinedTypeName","pathNode":{"id":445,"name":"AccessControlEnumerableStorage","nameLocations":["2592:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2592:30:1"},"referencedDeclaration":390,"src":"2592:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":450,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":448,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2635:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2592:79:1"},{"expression":{"arguments":[{"id":456,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2712:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"expression":{"id":451,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2688:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2690:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"2688:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":454,"indexExpression":{"id":453,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2703:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2688:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2709:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":9651,"src":"2688:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9515_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$9515_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":444,"id":458,"nodeType":"Return","src":"2681:37:1"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1913:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"2501:13:1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"role","nameLocation":"2523:4:1","nodeType":"VariableDeclaration","scope":460,"src":"2515:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2515:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"index","nameLocation":"2537:5:1","nodeType":"VariableDeclaration","scope":460,"src":"2529:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:29:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"2573:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:9:1"},"scope":586,"src":"2492:233:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1196],"body":{"id":481,"nodeType":"Block","src":"2973:142:1","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"$","nameLocation":"3022:1:1","nodeType":"VariableDeclaration","scope":481,"src":"2983:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"AccessControlEnumerableStorage","nameLocations":["2983:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2983:30:1"},"referencedDeclaration":390,"src":"2983:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3026:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2983:79:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":474,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3079:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3079:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":477,"indexExpression":{"id":476,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3094:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3100:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":9624,"src":"3079:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9515_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$9515_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":480,"nodeType":"Return","src":"3072:36:1"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"2731:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2902:18:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"role","nameLocation":"2929:4:1","nodeType":"VariableDeclaration","scope":482,"src":"2921:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2920:14:1"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"2964:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2963:9:1"},"scope":586,"src":"2893:222:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"3743:142:1","statements":[{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"$","nameLocation":"3792:1:1","nodeType":"VariableDeclaration","scope":504,"src":"3753:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":492,"nodeType":"UserDefinedTypeName","pathNode":{"id":491,"name":"AccessControlEnumerableStorage","nameLocations":["3753:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"3753:30:1"},"referencedDeclaration":390,"src":"3753:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":496,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":494,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3796:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3796:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3753:79:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":497,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3849:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3851:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3849:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":500,"indexExpression":{"id":499,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3864:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3849:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:1","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":9681,"src":"3849:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9515_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$9515_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3849:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":490,"id":503,"nodeType":"Return","src":"3842:36:1"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3121:532:1","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"3667:14:1","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"role","nameLocation":"3690:4:1","nodeType":"VariableDeclaration","scope":505,"src":"3682:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3682:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3681:14:1"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":505,"src":"3725:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"nodeType":"ArrayTypeName","src":"3725:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3724:18:1"},"scope":586,"src":"3658:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[315],"body":{"id":544,"nodeType":"Block","src":"4079:256:1","statements":[{"assignments":[518],"declarations":[{"constant":false,"id":518,"mutability":"mutable","name":"$","nameLocation":"4128:1:1","nodeType":"VariableDeclaration","scope":544,"src":"4089:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":517,"nodeType":"UserDefinedTypeName","pathNode":{"id":516,"name":"AccessControlEnumerableStorage","nameLocations":["4089:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"4089:30:1"},"referencedDeclaration":390,"src":"4089:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":521,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4132:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4089:79:1"},{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"granted","nameLocation":"4183:7:1","nodeType":"VariableDeclaration","scope":544,"src":"4178:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":522,"name":"bool","nodeType":"ElementaryTypeName","src":"4178:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":529,"initialValue":{"arguments":[{"id":526,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4210:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4216:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":524,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4193:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4199:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":315,"src":"4193:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4193:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4178:46:1"},{"condition":{"id":530,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4238:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"4234:71:1","trueBody":{"id":540,"nodeType":"Block","src":"4247:58:1","statements":[{"expression":{"arguments":[{"id":537,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4286:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":531,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4261:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4263:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"4261:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":535,"indexExpression":{"id":533,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4276:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4261:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4282:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9542,"src":"4261:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$9515_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$9515_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4261:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"nodeType":"ExpressionStatement","src":"4261:33:1"}]}},{"expression":{"id":542,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4321:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":515,"id":543,"nodeType":"Return","src":"4314:14:1"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3891:91:1","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"3996:10:1","nodeType":"FunctionDefinition","overrides":{"id":512,"nodeType":"OverrideSpecifier","overrides":[],"src":"4055:8:1"},"parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"role","nameLocation":"4015:4:1","nodeType":"VariableDeclaration","scope":545,"src":"4007:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4007:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"account","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":545,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:31:1"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"4073:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":513,"name":"bool","nodeType":"ElementaryTypeName","src":"4073:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4072:6:1"},"scope":586,"src":"3987:348:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[361],"body":{"id":584,"nodeType":"Block","src":"4531:260:1","statements":[{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"$","nameLocation":"4580:1:1","nodeType":"VariableDeclaration","scope":584,"src":"4541:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":557,"nodeType":"UserDefinedTypeName","pathNode":{"id":556,"name":"AccessControlEnumerableStorage","nameLocations":["4541:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"4541:30:1"},"referencedDeclaration":390,"src":"4541:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4584:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4541:79:1"},{"assignments":[563],"declarations":[{"constant":false,"id":563,"mutability":"mutable","name":"revoked","nameLocation":"4635:7:1","nodeType":"VariableDeclaration","scope":584,"src":"4630:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[{"id":566,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"4663:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4669:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":564,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4645:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4651:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":361,"src":"4645:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4630:47:1"},{"condition":{"id":570,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4691:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":581,"nodeType":"IfStatement","src":"4687:74:1","trueBody":{"id":580,"nodeType":"Block","src":"4700:61:1","statements":[{"expression":{"arguments":[{"id":577,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4742:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":571,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4714:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4716:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"4714:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9515_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":575,"indexExpression":{"id":573,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"4729:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4714:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4735:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":9569,"src":"4714:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$9515_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$9515_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4714:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"ExpressionStatement","src":"4714:36:1"}]}},{"expression":{"id":582,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4777:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":555,"id":583,"nodeType":"Return","src":"4770:14:1"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"4341:92:1","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"4447:11:1","nodeType":"FunctionDefinition","overrides":{"id":552,"nodeType":"OverrideSpecifier","overrides":[],"src":"4507:8:1"},"parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"role","nameLocation":"4467:4:1","nodeType":"VariableDeclaration","scope":585,"src":"4459:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4459:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"account","nameLocation":"4481:7:1","nodeType":"VariableDeclaration","scope":585,"src":"4473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"4473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:31:1"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"4525:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"4525:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4524:6:1"},"scope":586,"src":"4438:353:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"592:4201:1","usedErrors":[603,606,950,953],"usedEvents":[611,962,971,980]}],"src":"129:4665:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":854,"linearizedBaseContracts":[854],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":597,"members":[{"constant":false,"id":593,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":597,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":592,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":597,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":595,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":854,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":600,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":854,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":603,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":606,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":611,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":611,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":608,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":693,"nodeType":"Block","src":"4092:1079:2","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":693,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"4158:20:2"},"referencedDeclaration":597,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":693,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":625,"initialValue":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":622,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":693,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":626,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":630,"initialValue":{"expression":{"id":628,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:2","nodeType":"VariableDeclaration","scope":693,"src":"4704:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":631,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":638,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4724:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":636,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4744:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"construction","nameLocation":"4773:12:2","nodeType":"VariableDeclaration","scope":693,"src":"4768:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":639,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":653,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4788:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":646,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$854","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$854","typeString":"contract Initializable"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:2","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:2","memberName":"code","nodeType":"MemberAccess","src":"4808:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:2","memberName":"length","nodeType":"MemberAccess","src":"4808:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:2","subExpression":{"id":654,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4854:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:2","subExpression":{"id":656,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4871:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"4849:91:2","trueBody":{"id":662,"nodeType":"Block","src":"4885:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"4906:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":661,"nodeType":"RevertStatement","src":"4899:30:2"}]}},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":664,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4949:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"4949:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":669,"nodeType":"ExpressionStatement","src":"4949:18:2"},{"condition":{"id":670,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4981:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"IfStatement","src":"4977:67:2","trueBody":{"id":677,"nodeType":"Block","src":"4997:47:2","statements":[{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":671,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5011:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"5011:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"ExpressionStatement","src":"5011:22:2"}]}},{"id":679,"nodeType":"PlaceholderStatement","src":"5053:1:2"},{"condition":{"id":680,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5068:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"nodeType":"IfStatement","src":"5064:101:2","trueBody":{"id":691,"nodeType":"Block","src":"5084:81:2","statements":[{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":681,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5098:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"5098:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"ExpressionStatement","src":"5098:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":687,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5140:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"EmitStatement","src":"5135:19:2"}]}}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":694,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1102:2","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"6289:392:2","statements":[{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"$","nameLocation":"6384:1:2","nodeType":"VariableDeclaration","scope":740,"src":"6355:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"InitializableStorage","nameLocations":["6355:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"6355:20:2"},"referencedDeclaration":597,"src":"6355:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":704,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"6388:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":705,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6429:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6429:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":707,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6448:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"6448:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":709,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6466:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"6425:105:2","trueBody":{"id":715,"nodeType":"Block","src":"6475:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":712,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"6489:30:2"}]}},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":717,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6539:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"6539:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":720,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6556:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":722,"nodeType":"ExpressionStatement","src":"6539:24:2"},{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":723,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6573:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6573:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"ExpressionStatement","src":"6573:22:2"},{"id":729,"nodeType":"PlaceholderStatement","src":"6605:1:2"},{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":730,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6616:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6616:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"ExpressionStatement","src":"6616:23:2"},{"eventCall":{"arguments":[{"id":737,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6666:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":736,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"6654:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"EmitStatement","src":"6649:25:2"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"5177:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":741,"name":"reinitializer","nameLocation":"6259:13:2","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"version","nameLocation":"6280:7:2","nodeType":"VariableDeclaration","scope":741,"src":"6273:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":696,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:2"},"src":"6250:431:2","virtual":false,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"6919:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":744,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6929:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"6929:20:2"},{"id":747,"nodeType":"PlaceholderStatement","src":"6959:1:2"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"6687:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":749,"name":"onlyInitializing","nameLocation":"6900:16:2","nodeType":"ModifierDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"6916:2:2"},"src":"6891:76:2","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7134:89:2","statements":[{"condition":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7149:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"7144:73:2","trueBody":{"id":759,"nodeType":"Block","src":"7168:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7189:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":758,"nodeType":"RevertStatement","src":"7182:24:2"}]}}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"6973:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:2","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"7109:2:2"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"7134:0:2"},"scope":854,"src":"7082:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"7758:373:2","statements":[{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"$","nameLocation":"7853:1:2","nodeType":"VariableDeclaration","scope":807,"src":"7824:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"InitializableStorage","nameLocations":["7824:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"7824:20:2"},"referencedDeclaration":597,"src":"7824:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7857:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:2"},{"condition":{"expression":{"id":772,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7898:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"7898:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"7894:76:2","trueBody":{"id":777,"nodeType":"Block","src":"7915:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":774,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7936:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":776,"nodeType":"RevertStatement","src":"7929:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7983:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"7983:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":782,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:2","memberName":"max","nodeType":"MemberAccess","src":"8001:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"7979:146:2","trueBody":{"id":805,"nodeType":"Block","src":"8019:106:2","statements":[{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":787,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8033:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"8033:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":791,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:2","memberName":"max","nodeType":"MemberAccess","src":"8050:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":796,"nodeType":"ExpressionStatement","src":"8033:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":799,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:2","memberName":"max","nodeType":"MemberAccess","src":"8097:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":797,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8085:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"8080:34:2"}]}}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"7229:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"7738:2:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7758:0:2"},"scope":854,"src":"7709:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"8306:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":814,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8323:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"8323:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":813,"id":817,"nodeType":"Return","src":"8316:46:2"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"8137:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:2","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"8272:2:2"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"8298:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":811,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:2"},"scope":854,"src":"8241:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"8541:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":825,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8558:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"8558:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":824,"id":828,"nodeType":"Return","src":"8551:47:2"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"8375:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:2","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"8509:2:2"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"8535:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":822,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:2"},"scope":854,"src":"8485:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":838,"nodeType":"Block","src":"8896:45:2","statements":[{"expression":{"id":836,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8913:21:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":835,"id":837,"nodeType":"Return","src":"8906:28:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"8611:203:2","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":839,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:2","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"8853:2:2"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"8887:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:2"},"scope":854,"src":"8819:122:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"9161:115:2","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"slot","nameLocation":"9179:4:2","nodeType":"VariableDeclaration","scope":852,"src":"9171:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":850,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9186:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:2"},{"AST":{"nativeSrc":"9232:38:2","nodeType":"YulBlock","src":"9232:38:2","statements":[{"nativeSrc":"9246:14:2","nodeType":"YulAssignment","src":"9246:14:2","value":{"name":"slot","nativeSrc":"9256:4:2","nodeType":"YulIdentifier","src":"9256:4:2"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:2","nodeType":"YulIdentifier","src":"9246:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":844,"isOffset":false,"isSlot":true,"src":"9246:6:2","suffix":"slot","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"9256:4:2","valueSize":1}],"id":851,"nodeType":"InlineAssembly","src":"9223:47:2"}]},"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"8947:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:2","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"9104:2:2"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"$","nameLocation":"9158:1:2","nodeType":"VariableDeclaration","scope":853,"src":"9129:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"InitializableStorage","nameLocations":["9129:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"9129:20:2"},"referencedDeclaration":597,"src":"9129:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:2"},"scope":854,"src":"9071:205:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":855,"src":"2349:6929:2","usedErrors":[603,606],"usedEvents":[611]}],"src":"113:9166:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[900],"Initializable":[854]},"id":901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":901,"sourceUnit":855,"src":"126:63:3","symbolAliases":[{"foreign":{"id":857,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":860,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"728:13:3"},"id":861,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":900,"linearizedBaseContracts":[900,854],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":866,"nodeType":"Block","src":"800:7:3","statements":[]},"id":867,"implemented":true,"kind":"function","modifiers":[{"id":864,"kind":"modifierInvocation","modifierName":{"id":863,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":900,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"875:7:3","statements":[]},"id":873,"implemented":true,"kind":"function","modifiers":[{"id":870,"kind":"modifierInvocation","modifierName":{"id":869,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":900,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":881,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":877,"id":880,"nodeType":"Return","src":"959:17:3"}]},"id":882,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":900,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":886,"id":889,"nodeType":"Return","src":"1066:15:3"}]},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":884,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":900,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":898,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":895,"id":897,"nodeType":"Return","src":"1176:8:3"}]},"id":899,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":900,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":901,"src":"688:505:3","usedErrors":[603,606],"usedEvents":[611]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[940],"IERC165":[5601],"Initializable":[854]},"id":941,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":941,"sourceUnit":5602,"src":"140:80:4","symbolAliases":[{"foreign":{"id":903,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"148:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":941,"sourceUnit":855,"src":"221:66:4","symbolAliases":[{"foreign":{"id":905,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"229:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":908,"name":"Initializable","nameLocations":["808:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"808:13:4"},"id":909,"nodeType":"InheritanceSpecifier","src":"808:13:4"},{"baseName":{"id":910,"name":"IERC165","nameLocations":["823:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":5601,"src":"823:7:4"},"id":911,"nodeType":"InheritanceSpecifier","src":"823:7:4"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"289:479:4","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":940,"linearizedBaseContracts":[940,5601,854],"name":"ERC165Upgradeable","nameLocation":"787:17:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":916,"nodeType":"Block","src":"888:7:4","statements":[]},"id":917,"implemented":true,"kind":"function","modifiers":[{"id":914,"kind":"modifierInvocation","modifierName":{"id":913,"name":"onlyInitializing","nameLocations":["871:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"871:16:4"},"nodeType":"ModifierInvocation","src":"871:16:4"}],"name":"__ERC165_init","nameLocation":"846:13:4","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"859:2:4"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"888:0:4"},"scope":940,"src":"837:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":922,"nodeType":"Block","src":"962:7:4","statements":[]},"id":923,"implemented":true,"kind":"function","modifiers":[{"id":920,"kind":"modifierInvocation","modifierName":{"id":919,"name":"onlyInitializing","nameLocations":["945:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"945:16:4"},"nodeType":"ModifierInvocation","src":"945:16:4"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:4","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"933:2:4"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"962:0:4"},"scope":940,"src":"901:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5600],"body":{"id":938,"nodeType":"Block","src":"1117:64:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"1134:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":933,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"1154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5601_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5601_$","typeString":"type(contract IERC165)"}],"id":932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5601","typeString":"type(contract IERC165)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":930,"id":937,"nodeType":"Return","src":"1127:47:4"}]},"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"974:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":939,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:4","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:4","nodeType":"VariableDeclaration","scope":939,"src":"1062:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":925,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"1111:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":928,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:4"},"scope":940,"src":"1035:146:4","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":941,"src":"769:414:4","usedErrors":[603,606],"usedEvents":[611]}],"src":"114:1070:4"},"id":4},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1023]},"id":1024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":942,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"135:90:5","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1023,"linearizedBaseContracts":[1023],"name":"IAccessControl","nameLocation":"236:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"257:56:5","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":950,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:5","nodeType":"ErrorDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"account","nameLocation":"365:7:5","nodeType":"VariableDeclaration","scope":950,"src":"357:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:5","nodeType":"VariableDeclaration","scope":950,"src":"374:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:5"},"src":"318:76:5"},{"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"400:148:5","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":953,"name":"AccessControlBadConfirmation","nameLocation":"559:28:5","nodeType":"ErrorDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"587:2:5"},"src":"553:37:5"},{"anonymous":false,"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"596:254:5","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":962,"name":"RoleAdminChanged","nameLocation":"861:16:5","nodeType":"EventDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:5","nodeType":"VariableDeclaration","scope":962,"src":"878:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":958,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:5","nodeType":"VariableDeclaration","scope":962,"src":"900:33:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":960,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:5","nodeType":"VariableDeclaration","scope":962,"src":"935:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:5"},"src":"855:110:5"},{"anonymous":false,"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"971:295:5","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":971,"name":"RoleGranted","nameLocation":"1277:11:5","nodeType":"EventDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:5","nodeType":"VariableDeclaration","scope":971,"src":"1289:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":967,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:5","nodeType":"VariableDeclaration","scope":971,"src":"1311:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:5","nodeType":"VariableDeclaration","scope":971,"src":"1336:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:5"},"src":"1271:89:5"},{"anonymous":false,"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"1366:275:5","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":980,"name":"RoleRevoked","nameLocation":"1652:11:5","nodeType":"EventDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:5","nodeType":"VariableDeclaration","scope":980,"src":"1664:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":976,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:5","nodeType":"VariableDeclaration","scope":980,"src":"1686:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:5","nodeType":"VariableDeclaration","scope":980,"src":"1711:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:5"},"src":"1646:89:5"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"1741:76:5","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":990,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:5","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"role","nameLocation":"1847:4:5","nodeType":"VariableDeclaration","scope":990,"src":"1839:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"account","nameLocation":"1861:7:5","nodeType":"VariableDeclaration","scope":990,"src":"1853:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:5"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"1893:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:5"},"scope":1023,"src":"1822:77:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"1905:184:5","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:5","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"role","nameLocation":"2124:4:5","nodeType":"VariableDeclaration","scope":998,"src":"2116:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:5"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"2153:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:5"},"scope":1023,"src":"2094:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"2168:239:5","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"role","nameLocation":"2439:4:5","nodeType":"VariableDeclaration","scope":1006,"src":"2431:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"account","nameLocation":"2453:7:5","nodeType":"VariableDeclaration","scope":1006,"src":"2445:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:5"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"2470:0:5"},"scope":1023,"src":"2412:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"2477:223:5","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1014,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:5","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"role","nameLocation":"2733:4:5","nodeType":"VariableDeclaration","scope":1014,"src":"2725:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"account","nameLocation":"2747:7:5","nodeType":"VariableDeclaration","scope":1014,"src":"2739:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:5"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"2764:0:5"},"scope":1023,"src":"2705:60:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"2771:491:5","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1022,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:5","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"role","nameLocation":"3297:4:5","nodeType":"VariableDeclaration","scope":1022,"src":"3289:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:5","nodeType":"VariableDeclaration","scope":1022,"src":"3303:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:5"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"3339:0:5"},"scope":1023,"src":"3267:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1024,"src":"226:3116:5","usedErrors":[950,953],"usedEvents":[962,971,980]}],"src":"109:3234:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3447],"Ownable":[1171]},"id":1172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1172,"sourceUnit":3448,"src":"128:45:6","symbolAliases":[{"foreign":{"id":1026,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"136:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1029,"name":"Context","nameLocations":["692:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"692:7:6"},"id":1030,"nodeType":"InheritanceSpecifier","src":"692:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"175:487:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1171,"linearizedBaseContracts":[1171,3447],"name":"Ownable","nameLocation":"681:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1032,"mutability":"mutable","name":"_owner","nameLocation":"722:6:6","nodeType":"VariableDeclaration","scope":1171,"src":"706:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"735:85:6","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1037,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:6","nodeType":"ErrorDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"account","nameLocation":"866:7:6","nodeType":"VariableDeclaration","scope":1037,"src":"858:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:6"},"src":"825:50:6"},{"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"881:82:6","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1042,"name":"OwnableInvalidOwner","nameLocation":"974:19:6","nodeType":"ErrorDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"owner","nameLocation":"1002:5:6","nodeType":"VariableDeclaration","scope":1042,"src":"994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:6"},"src":"968:41:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1048,"name":"OwnershipTransferred","nameLocation":"1021:20:6","nodeType":"EventDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:6","nodeType":"VariableDeclaration","scope":1048,"src":"1042:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:6","nodeType":"VariableDeclaration","scope":1048,"src":"1073:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:6"},"src":"1015:84:6"},{"body":{"id":1073,"nodeType":"Block","src":"1259:153:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1273:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"1269:95:6","trueBody":{"id":1067,"nodeType":"Block","src":"1301:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:6","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1322:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1066,"nodeType":"RevertStatement","src":"1315:38:6"}]}},{"expression":{"arguments":[{"id":1070,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1392:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1069,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1373:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"1373:32:6"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"1105:115:6","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1074,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:6","nodeType":"VariableDeclaration","scope":1074,"src":"1237:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:6"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"1259:0:6"},"scope":1171,"src":"1225:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"1521:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1531:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"1531:13:6"},{"id":1080,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"1418:77:6","text":" @dev Throws if called by any account other than the owner."},"id":1082,"name":"onlyOwner","nameLocation":"1509:9:6","nodeType":"ModifierDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"1518:2:6"},"src":"1500:62:6","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"1693:30:6","statements":[{"expression":{"id":1088,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1710:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1087,"id":1089,"nodeType":"Return","src":"1703:13:6"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"1568:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:6","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"1684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:6"},"scope":1171,"src":"1638:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1107,"nodeType":"Block","src":"1841:117:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1095,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1855:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1097,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"1866:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"1851:101:6","trueBody":{"id":1105,"nodeType":"Block","src":"1880:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1101,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"1928:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1100,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1901:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1104,"nodeType":"RevertStatement","src":"1894:47:6"}]}}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1729:62:6","text":" @dev Throws if the sender is not the owner."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"1816:2:6"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"1841:0:6"},"scope":1171,"src":"1796:162:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"2347:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:6","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1114,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"2357:30:6"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"1964:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1122,"implemented":true,"kind":"function","modifiers":[{"id":1112,"kind":"modifierInvocation","modifierName":{"id":1111,"name":"onlyOwner","nameLocations":["2337:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2337:9:6"},"nodeType":"ModifierInvocation","src":"2337:9:6"}],"name":"renounceOwnership","nameLocation":"2302:17:6","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"2319:2:6"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"2347:0:6"},"scope":1171,"src":"2293:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1149,"nodeType":"Block","src":"2613:145:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:6","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"2623:91:6","trueBody":{"id":1143,"nodeType":"Block","src":"2651:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:6","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1136,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2672:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1142,"nodeType":"RevertStatement","src":"2665:38:6"}]}},{"expression":{"arguments":[{"id":1146,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2742:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1145,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"ExpressionStatement","src":"2723:28:6"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"2400:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1150,"implemented":true,"kind":"function","modifiers":[{"id":1128,"kind":"modifierInvocation","modifierName":{"id":1127,"name":"onlyOwner","nameLocations":["2603:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2603:9:6"},"nodeType":"ModifierInvocation","src":"2603:9:6"}],"name":"transferOwnership","nameLocation":"2552:17:6","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:6","nodeType":"VariableDeclaration","scope":1150,"src":"2570:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:6"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"2613:0:6"},"scope":1171,"src":"2543:215:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1169,"nodeType":"Block","src":"2975:124:6","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:6","nodeType":"VariableDeclaration","scope":1169,"src":"2985:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1159,"initialValue":{"id":1158,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3004:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:6"},{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1160,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3020:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1161,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3029:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1163,"nodeType":"ExpressionStatement","src":"3020:17:6"},{"eventCall":{"arguments":[{"id":1165,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3083:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3052:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"EmitStatement","src":"3047:45:6"}]},"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"2764:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:6","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:6","nodeType":"VariableDeclaration","scope":1170,"src":"2940:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:6"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"2975:0:6"},"scope":1171,"src":"2912:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1172,"src":"663:2438:6","usedErrors":[1037,1042],"usedEvents":[1048]}],"src":"102:3000:6"},"id":6},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[1023],"IAccessControlEnumerable":[1197]},"id":1198,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1173,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:7"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":1175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1198,"sourceUnit":1024,"src":"156:53:7","symbolAliases":[{"foreign":{"id":1174,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"164:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1177,"name":"IAccessControl","nameLocations":["350:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"350:14:7"},"id":1178,"nodeType":"InheritanceSpecifier","src":"350:14:7"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"211:100:7","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":1197,"linearizedBaseContracts":[1197,1023],"name":"IAccessControlEnumerable","nameLocation":"322:24:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"371:574:7","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":1188,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"role","nameLocation":"981:4:7","nodeType":"VariableDeclaration","scope":1188,"src":"973:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"index","nameLocation":"995:5:7","nodeType":"VariableDeclaration","scope":1188,"src":"987:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"1025:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:7"},"scope":1197,"src":"950:84:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"1040:157:7","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":1196,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:7","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"role","nameLocation":"1238:4:7","nodeType":"VariableDeclaration","scope":1196,"src":"1230:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:7"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1196,"src":"1267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:7"},"scope":1197,"src":"1202:74:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1198,"src":"312:966:7","usedErrors":[950,953],"usedEvents":[962,971,980]}],"src":"130:1149:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1279],"IERC165":[5601],"IERC20":[2017]},"id":1280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1199,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":1288,"src":"133:36:8","symbolAliases":[{"foreign":{"id":1200,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"141:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":1284,"src":"170:38:8","symbolAliases":[{"foreign":{"id":1202,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"178:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1205,"name":"IERC20","nameLocations":["590:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"590:6:8"},"id":1206,"nodeType":"InheritanceSpecifier","src":"590:6:8"},{"baseName":{"id":1207,"name":"IERC165","nameLocations":["598:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5601,"src":"598:7:8"},"id":1208,"nodeType":"InheritanceSpecifier","src":"598:7:8"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"210:357:8","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1279,"linearizedBaseContracts":[1279,5601,2017],"name":"IERC1363","nameLocation":"578:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"1148:370:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1218,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:8","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"1556:2:8","nodeType":"VariableDeclaration","scope":1218,"src":"1548:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"value","nameLocation":"1568:5:8","nodeType":"VariableDeclaration","scope":1218,"src":"1560:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:8"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"1593:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1215,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:8"},"scope":1279,"src":"1523:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"1605:453:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1230,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:8","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"to","nameLocation":"2096:2:8","nodeType":"VariableDeclaration","scope":1230,"src":"2088:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"value","nameLocation":"2108:5:8","nodeType":"VariableDeclaration","scope":1230,"src":"2100:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"data","nameLocation":"2130:4:8","nodeType":"VariableDeclaration","scope":1230,"src":"2115:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:8"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"2154:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:8"},"scope":1279,"src":"2063:97:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"2166:453:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1242,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:8","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"from","nameLocation":"2661:4:8","nodeType":"VariableDeclaration","scope":1242,"src":"2653:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"to","nameLocation":"2675:2:8","nodeType":"VariableDeclaration","scope":1242,"src":"2667:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"value","nameLocation":"2687:5:8","nodeType":"VariableDeclaration","scope":1242,"src":"2679:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:8"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"2712:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:8"},"scope":1279,"src":"2624:94:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"2724:536:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"from","nameLocation":"3302:4:8","nodeType":"VariableDeclaration","scope":1256,"src":"3294:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"3316:2:8","nodeType":"VariableDeclaration","scope":1256,"src":"3308:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"3328:5:8","nodeType":"VariableDeclaration","scope":1256,"src":"3320:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"3350:4:8","nodeType":"VariableDeclaration","scope":1256,"src":"3335:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:8"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"3374:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1253,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:8"},"scope":1279,"src":"3265:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"3386:390:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1266,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:8","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"spender","nameLocation":"3813:7:8","nodeType":"VariableDeclaration","scope":1266,"src":"3805:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"value","nameLocation":"3830:5:8","nodeType":"VariableDeclaration","scope":1266,"src":"3822:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:8"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"3855:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1263,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:8"},"scope":1279,"src":"3781:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"3867:478:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1278,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:8","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"spender","nameLocation":"4382:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"4374:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"value","nameLocation":"4399:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"4391:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"data","nameLocation":"4421:4:8","nodeType":"VariableDeclaration","scope":1278,"src":"4406:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1272,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:8"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"4445:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:8"},"scope":1279,"src":"4350:101:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1280,"src":"568:3885:8","usedErrors":[],"usedEvents":[1951,1960]}],"src":"107:4347:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5601]},"id":1284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1281,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1284,"sourceUnit":5602,"src":"132:59:9","symbolAliases":[{"foreign":{"id":1282,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"140:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2017]},"id":1288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1285,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":2018,"src":"131:49:10","symbolAliases":[{"foreign":{"id":1286,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1424],"IERC20Errors":[1329],"IERC721Errors":[1377]},"id":1425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1289,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"138:141:11","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1329,"linearizedBaseContracts":[1329],"name":"IERC20Errors","nameLocation":"290:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"309:309:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1299,"name":"ERC20InsufficientBalance","nameLocation":"629:24:11","nodeType":"ErrorDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"sender","nameLocation":"662:6:11","nodeType":"VariableDeclaration","scope":1299,"src":"654:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"balance","nameLocation":"678:7:11","nodeType":"VariableDeclaration","scope":1299,"src":"670:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"needed","nameLocation":"695:6:11","nodeType":"VariableDeclaration","scope":1299,"src":"687:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:11"},"src":"623:80:11"},{"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"709:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1304,"name":"ERC20InvalidSender","nameLocation":"872:18:11","nodeType":"ErrorDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"sender","nameLocation":"899:6:11","nodeType":"VariableDeclaration","scope":1304,"src":"891:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:11"},"src":"866:41:11"},{"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"913:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1309,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:11","nodeType":"ErrorDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:11","nodeType":"VariableDeclaration","scope":1309,"src":"1104:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:11"},"src":"1077:45:11"},{"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"1128:345:11","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1318,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:11","nodeType":"ErrorDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"spender","nameLocation":"1519:7:11","nodeType":"VariableDeclaration","scope":1318,"src":"1511:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:11","nodeType":"VariableDeclaration","scope":1318,"src":"1528:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"needed","nameLocation":"1555:6:11","nodeType":"VariableDeclaration","scope":1318,"src":"1547:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:11"},"src":"1478:85:11"},{"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"1569:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1323,"name":"ERC20InvalidApprover","nameLocation":"1754:20:11","nodeType":"ErrorDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"approver","nameLocation":"1783:8:11","nodeType":"VariableDeclaration","scope":1323,"src":"1775:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:11"},"src":"1748:45:11"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1799:195:11","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1328,"name":"ERC20InvalidSpender","nameLocation":"2005:19:11","nodeType":"ErrorDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"spender","nameLocation":"2033:7:11","nodeType":"VariableDeclaration","scope":1328,"src":"2025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:11"},"src":"1999:43:11"}],"scope":1425,"src":"280:1764:11","usedErrors":[1299,1304,1309,1318,1323,1328],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"2046:143:11","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1377,"linearizedBaseContracts":[1377],"name":"IERC721Errors","nameLocation":"2200:13:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"2220:219:11","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1335,"name":"ERC721InvalidOwner","nameLocation":"2450:18:11","nodeType":"ErrorDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"owner","nameLocation":"2477:5:11","nodeType":"VariableDeclaration","scope":1335,"src":"2469:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:11"},"src":"2444:40:11"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"2490:132:11","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1340,"name":"ERC721NonexistentToken","nameLocation":"2633:22:11","nodeType":"ErrorDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:11","nodeType":"VariableDeclaration","scope":1340,"src":"2656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:11"},"src":"2627:46:11"},{"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"2679:289:11","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1349,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:11","nodeType":"ErrorDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"sender","nameLocation":"3008:6:11","nodeType":"VariableDeclaration","scope":1349,"src":"3000:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:11","nodeType":"VariableDeclaration","scope":1349,"src":"3016:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"owner","nameLocation":"3041:5:11","nodeType":"VariableDeclaration","scope":1349,"src":"3033:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:11"},"src":"2973:75:11"},{"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"3054:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1354,"name":"ERC721InvalidSender","nameLocation":"3217:19:11","nodeType":"ErrorDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"sender","nameLocation":"3245:6:11","nodeType":"VariableDeclaration","scope":1354,"src":"3237:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:11"},"src":"3211:42:11"},{"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"3259:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1359,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:11","nodeType":"ErrorDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:11","nodeType":"VariableDeclaration","scope":1359,"src":"3451:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:11"},"src":"3423:46:11"},{"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"3475:247:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1366,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:11","nodeType":"ErrorDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"operator","nameLocation":"3768:8:11","nodeType":"VariableDeclaration","scope":1366,"src":"3760:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:11","nodeType":"VariableDeclaration","scope":1366,"src":"3778:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:11"},"src":"3727:68:11"},{"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"3801:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1371,"name":"ERC721InvalidApprover","nameLocation":"3986:21:11","nodeType":"ErrorDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"approver","nameLocation":"4016:8:11","nodeType":"VariableDeclaration","scope":1371,"src":"4008:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:11"},"src":"3980:46:11"},{"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"4032:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1376,"name":"ERC721InvalidOperator","nameLocation":"4240:21:11","nodeType":"ErrorDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"operator","nameLocation":"4270:8:11","nodeType":"VariableDeclaration","scope":1376,"src":"4262:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:11"},"src":"4234:46:11"}],"scope":1425,"src":"2190:2092:11","usedErrors":[1335,1340,1349,1354,1359,1366,1371,1376],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"4284:145:11","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1424,"linearizedBaseContracts":[1424],"name":"IERC1155Errors","nameLocation":"4440:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"4461:361:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1389,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:11","nodeType":"ErrorDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"sender","nameLocation":"4868:6:11","nodeType":"VariableDeclaration","scope":1389,"src":"4860:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"balance","nameLocation":"4884:7:11","nodeType":"VariableDeclaration","scope":1389,"src":"4876:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"needed","nameLocation":"4901:6:11","nodeType":"VariableDeclaration","scope":1389,"src":"4893:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:11","nodeType":"VariableDeclaration","scope":1389,"src":"4909:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:11"},"src":"4827:99:11"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"4932:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1394,"name":"ERC1155InvalidSender","nameLocation":"5095:20:11","nodeType":"ErrorDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"sender","nameLocation":"5124:6:11","nodeType":"VariableDeclaration","scope":1394,"src":"5116:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:11"},"src":"5089:43:11"},{"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"5138:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1399,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:11","nodeType":"ErrorDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:11","nodeType":"VariableDeclaration","scope":1399,"src":"5331:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:11"},"src":"5302:47:11"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"5355:256:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1406,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:11","nodeType":"ErrorDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"operator","nameLocation":"5659:8:11","nodeType":"VariableDeclaration","scope":1406,"src":"5651:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"owner","nameLocation":"5677:5:11","nodeType":"VariableDeclaration","scope":1406,"src":"5669:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:11"},"src":"5616:68:11"},{"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"5690:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1411,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:11","nodeType":"ErrorDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"approver","nameLocation":"5906:8:11","nodeType":"VariableDeclaration","scope":1411,"src":"5898:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:11"},"src":"5869:47:11"},{"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"5922:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1416,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:11","nodeType":"ErrorDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"6161:8:11","nodeType":"VariableDeclaration","scope":1416,"src":"6153:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:11"},"src":"6124:47:11"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"6177:280:11","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1423,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:11","nodeType":"ErrorDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:11","nodeType":"VariableDeclaration","scope":1423,"src":"6494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:11","nodeType":"VariableDeclaration","scope":1423,"src":"6513:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:11"},"src":"6462:73:11"}],"scope":1425,"src":"4430:2107:11","usedErrors":[1389,1394,1399,1406,1411,1416,1423],"usedEvents":[]}],"src":"112:6426:11"},"id":11},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3447],"ERC20":[1939],"IERC20":[2017],"IERC20Errors":[1329],"IERC20Metadata":[2043]},"id":1940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1426,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1940,"sourceUnit":2018,"src":"131:36:12","symbolAliases":[{"foreign":{"id":1427,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"139:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1940,"sourceUnit":2044,"src":"168:63:12","symbolAliases":[{"foreign":{"id":1429,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"176:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1940,"sourceUnit":3448,"src":"232:48:12","symbolAliases":[{"foreign":{"id":1431,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"240:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1940,"sourceUnit":1425,"src":"281:65:12","symbolAliases":[{"foreign":{"id":1433,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"289:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1436,"name":"Context","nameLocations":["1133:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"1133:7:12"},"id":1437,"nodeType":"InheritanceSpecifier","src":"1133:7:12"},{"baseName":{"id":1438,"name":"IERC20","nameLocations":["1142:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"1142:6:12"},"id":1439,"nodeType":"InheritanceSpecifier","src":"1142:6:12"},{"baseName":{"id":1440,"name":"IERC20Metadata","nameLocations":["1150:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":2043,"src":"1150:14:12"},"id":1441,"nodeType":"InheritanceSpecifier","src":"1150:14:12"},{"baseName":{"id":1442,"name":"IERC20Errors","nameLocations":["1166:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1329,"src":"1166:12:12"},"id":1443,"nodeType":"InheritanceSpecifier","src":"1166:12:12"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"348:757:12","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1939,"linearizedBaseContracts":[1939,1329,2043,2017,3447],"name":"ERC20","nameLocation":"1124:5:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1447,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:12","nodeType":"VariableDeclaration","scope":1939,"src":"1185:53:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1446,"keyName":"account","keyNameLocation":"1201:7:12","keyType":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1453,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:12","nodeType":"VariableDeclaration","scope":1939,"src":"1245:83:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1452,"keyName":"account","keyNameLocation":"1261:7:12","keyType":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1451,"keyName":"spender","keyNameLocation":"1288:7:12","keyType":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1455,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:12","nodeType":"VariableDeclaration","scope":1939,"src":"1335:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1457,"mutability":"mutable","name":"_name","nameLocation":"1385:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"1370:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1456,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1459,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:12","nodeType":"VariableDeclaration","scope":1939,"src":"1396:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1475,"nodeType":"Block","src":"1638:57:12","statements":[{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1468,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1656:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1470,"nodeType":"ExpressionStatement","src":"1648:13:12"},{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1471,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1671:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1472,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1681:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1474,"nodeType":"ExpressionStatement","src":"1671:17:12"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"1425:152:12","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1476,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"name_","nameLocation":"1608:5:12","nodeType":"VariableDeclaration","scope":1476,"src":"1594:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1461,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:12","nodeType":"VariableDeclaration","scope":1476,"src":"1615:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1463,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:12"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[],"src":"1638:0:12"},"scope":1939,"src":"1582:113:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2030],"body":{"id":1484,"nodeType":"Block","src":"1820:29:12","statements":[{"expression":{"id":1482,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1837:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1481,"id":1483,"nodeType":"Return","src":"1830:12:12"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"1701:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:12","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"1773:2:12"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"1805:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1479,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:12"},"scope":1939,"src":"1760:89:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2036],"body":{"id":1493,"nodeType":"Block","src":"2024:31:12","statements":[{"expression":{"id":1491,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2041:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1490,"id":1492,"nodeType":"Return","src":"2034:14:12"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"1855:102:12","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:12","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"1977:2:12"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"2009:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:12"},"scope":1939,"src":"1962:93:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2042],"body":{"id":1502,"nodeType":"Block","src":"2744:26:12","statements":[{"expression":{"hexValue":"3138","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1499,"id":1501,"nodeType":"Return","src":"2754:9:12"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"2061:622:12","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:12","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"2705:2:12"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"2737:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1497,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:12"},"scope":1939,"src":"2688:82:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1966],"body":{"id":1511,"nodeType":"Block","src":"2891:36:12","statements":[{"expression":{"id":1509,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"2908:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1508,"id":1510,"nodeType":"Return","src":"2901:19:12"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"2776:49:12","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:12","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"2850:2:12"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"2882:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:12"},"scope":1939,"src":"2830:97:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1974],"body":{"id":1524,"nodeType":"Block","src":"3059:42:12","statements":[{"expression":{"baseExpression":{"id":1520,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3076:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1522,"indexExpression":{"id":1521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3086:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1519,"id":1523,"nodeType":"Return","src":"3069:25:12"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"2933:47:12","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:12","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"account","nameLocation":"3012:7:12","nodeType":"VariableDeclaration","scope":1525,"src":"3004:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:12"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"3050:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:12"},"scope":1939,"src":"2985:116:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1984],"body":{"id":1548,"nodeType":"Block","src":"3371:103:12","statements":[{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"owner","nameLocation":"3389:5:12","nodeType":"VariableDeclaration","scope":1548,"src":"3381:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1537,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"3397:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:12"},{"expression":{"arguments":[{"id":1541,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"3429:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"3436:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3440:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1540,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3419:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"3419:27:12"},{"expression":{"hexValue":"74727565","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1534,"id":1547,"nodeType":"Return","src":"3456:11:12"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"3107:184:12","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:12","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"to","nameLocation":"3322:2:12","nodeType":"VariableDeclaration","scope":1549,"src":"3314:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"value","nameLocation":"3334:5:12","nodeType":"VariableDeclaration","scope":1549,"src":"3326:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:12"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"3365:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1532,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:12"},"scope":1939,"src":"3296:178:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1994],"body":{"id":1565,"nodeType":"Block","src":"3621:51:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1559,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3638:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1561,"indexExpression":{"id":1560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3650:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1563,"indexExpression":{"id":1562,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1558,"id":1564,"nodeType":"Return","src":"3631:34:12"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"3480:47:12","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:12","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"owner","nameLocation":"3559:5:12","nodeType":"VariableDeclaration","scope":1566,"src":"3551:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"spender","nameLocation":"3574:7:12","nodeType":"VariableDeclaration","scope":1566,"src":"3566:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:12"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"3612:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:12"},"scope":1939,"src":"3532:140:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2004],"body":{"id":1589,"nodeType":"Block","src":"4058:107:12","statements":[{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"owner","nameLocation":"4076:5:12","nodeType":"VariableDeclaration","scope":1589,"src":"4068:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1580,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1578,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"4084:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:12"},{"expression":{"arguments":[{"id":1582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4115:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4122:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1830,1890],"referencedDeclaration":1830,"src":"4106:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"ExpressionStatement","src":"4106:31:12"},{"expression":{"hexValue":"74727565","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1575,"id":1588,"nodeType":"Return","src":"4147:11:12"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"3678:296:12","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:12","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"spender","nameLocation":"4004:7:12","nodeType":"VariableDeclaration","scope":1590,"src":"3996:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"value","nameLocation":"4021:5:12","nodeType":"VariableDeclaration","scope":1590,"src":"4013:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:12"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1590,"src":"4052:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1573,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:12"},"scope":1939,"src":"3979:186:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2016],"body":{"id":1621,"nodeType":"Block","src":"4850:151:12","statements":[{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"spender","nameLocation":"4868:7:12","nodeType":"VariableDeclaration","scope":1621,"src":"4860:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1606,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1604,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"4878:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:12"},{"expression":{"arguments":[{"id":1608,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4916:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"4922:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4931:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1607,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4900:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"4900:37:12"},{"expression":{"arguments":[{"id":1614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4957:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4963:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"4947:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"4947:26:12"},{"expression":{"hexValue":"74727565","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1601,"id":1620,"nodeType":"Return","src":"4983:11:12"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"4171:581:12","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:12","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"from","nameLocation":"4787:4:12","nodeType":"VariableDeclaration","scope":1622,"src":"4779:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"to","nameLocation":"4801:2:12","nodeType":"VariableDeclaration","scope":1622,"src":"4793:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"value","nameLocation":"4813:5:12","nodeType":"VariableDeclaration","scope":1622,"src":"4805:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:12"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"4844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1599,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:12"},"scope":1939,"src":"4757:244:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1668,"nodeType":"Block","src":"5443:231:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5457:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:12","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"5453:86:12","trueBody":{"id":1645,"nodeType":"Block","src":"5477:62:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:12","typeDescriptions":{}}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1638,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"5498:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1644,"nodeType":"RevertStatement","src":"5491:37:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5552:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:12","typeDescriptions":{}}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"5548:86:12","trueBody":{"id":1660,"nodeType":"Block","src":"5570:64:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:12","typeDescriptions":{}}},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1653,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5591:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1659,"nodeType":"RevertStatement","src":"5584:39:12"}]}},{"expression":{"arguments":[{"id":1663,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5651:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5657:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5661:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"5643:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"5643:24:12"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"5007:362:12","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:12","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"from","nameLocation":"5401:4:12","nodeType":"VariableDeclaration","scope":1669,"src":"5393:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"to","nameLocation":"5415:2:12","nodeType":"VariableDeclaration","scope":1669,"src":"5407:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"5427:5:12","nodeType":"VariableDeclaration","scope":1669,"src":"5419:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:12"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[],"src":"5443:0:12"},"scope":1939,"src":"5374:300:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"6064:1032:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6078:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:12","typeDescriptions":{}}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1716,"nodeType":"Block","src":"6252:362:12","statements":[{"assignments":[1691],"declarations":[{"constant":false,"id":1691,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:12","nodeType":"VariableDeclaration","scope":1716,"src":"6266:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1695,"initialValue":{"baseExpression":{"id":1692,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6288:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1694,"indexExpression":{"id":1693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6321:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6335:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1706,"nodeType":"IfStatement","src":"6317:115:12","trueBody":{"id":1705,"nodeType":"Block","src":"6342:90:12","statements":[{"errorCall":{"arguments":[{"id":1700,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6392:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1701,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6398:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6411:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6367:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1704,"nodeType":"RevertStatement","src":"6360:57:12"}]}},{"id":1715,"nodeType":"UncheckedBlock","src":"6445:159:12","statements":[{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1707,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6552:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1709,"indexExpression":{"id":1708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6562:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6570:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6584:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"nodeType":"ExpressionStatement","src":"6552:37:12"}]}]},"id":1717,"nodeType":"IfStatement","src":"6074:540:12","trueBody":{"id":1689,"nodeType":"Block","src":"6098:148:12","statements":[{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1685,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6214:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6230:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"6214:21:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6628:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:12","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1737,"nodeType":"Block","src":"6843:206:12","statements":[{"id":1736,"nodeType":"UncheckedBlock","src":"6857:182:12","statements":[{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1730,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"7002:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1732,"indexExpression":{"id":1731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"7012:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"7019:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"7002:22:12"}]}]},"id":1738,"nodeType":"IfStatement","src":"6624:425:12","trueBody":{"id":1729,"nodeType":"Block","src":"6646:191:12","statements":[{"id":1728,"nodeType":"UncheckedBlock","src":"6660:167:12","statements":[{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6791:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6807:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1727,"nodeType":"ExpressionStatement","src":"6791:21:12"}]}]}},{"eventCall":{"arguments":[{"id":1740,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"7073:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1741,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"7079:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"7083:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1739,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7064:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"EmitStatement","src":"7059:30:12"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"5680:304:12","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:12","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"from","nameLocation":"6014:4:12","nodeType":"VariableDeclaration","scope":1746,"src":"6006:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"to","nameLocation":"6028:2:12","nodeType":"VariableDeclaration","scope":1746,"src":"6020:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"value","nameLocation":"6040:5:12","nodeType":"VariableDeclaration","scope":1746,"src":"6032:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:12"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"6064:0:12"},"scope":1939,"src":"5989:1107:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"7495:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7509:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:12","typeDescriptions":{}}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1768,"nodeType":"IfStatement","src":"7505:91:12","trueBody":{"id":1767,"nodeType":"Block","src":"7532:64:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:12","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1760,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"7553:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1766,"nodeType":"RevertStatement","src":"7546:39:12"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:12","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1774,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7625:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"7634:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"7605:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"7605:35:12"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"7102:332:12","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:12","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"account","nameLocation":"7462:7:12","nodeType":"VariableDeclaration","scope":1779,"src":"7454:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"value","nameLocation":"7479:5:12","nodeType":"VariableDeclaration","scope":1779,"src":"7471:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:12"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"7495:0:12"},"scope":1939,"src":"7439:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"8021:150:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8035:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:12","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"nodeType":"IfStatement","src":"8031:89:12","trueBody":{"id":1800,"nodeType":"Block","src":"8058:62:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:12","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1793,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8079:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1799,"nodeType":"RevertStatement","src":"8072:37:12"}]}},{"expression":{"arguments":[{"id":1803,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8137:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:12","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"8158:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1802,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8129:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1810,"nodeType":"ExpressionStatement","src":"8129:35:12"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"7653:307:12","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:12","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"account","nameLocation":"7988:7:12","nodeType":"VariableDeclaration","scope":1812,"src":"7980:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"value","nameLocation":"8005:5:12","nodeType":"VariableDeclaration","scope":1812,"src":"7997:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:12"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"8021:0:12"},"scope":1939,"src":"7965:206:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"8781:54:12","statements":[{"expression":{"arguments":[{"id":1823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8800:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"8807:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"8816:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1822,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1830,1890],"referencedDeclaration":1890,"src":"8791:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1828,"nodeType":"ExpressionStatement","src":"8791:37:12"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"8177:525:12","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:12","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"owner","nameLocation":"8733:5:12","nodeType":"VariableDeclaration","scope":1830,"src":"8725:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"spender","nameLocation":"8748:7:12","nodeType":"VariableDeclaration","scope":1830,"src":"8740:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"value","nameLocation":"8765:5:12","nodeType":"VariableDeclaration","scope":1830,"src":"8757:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:12"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"8781:0:12"},"scope":1939,"src":"8707:128:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"9780:334:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"9794:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:12","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"9790:89:12","trueBody":{"id":1855,"nodeType":"Block","src":"9815:64:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:12","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"9836:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1854,"nodeType":"RevertStatement","src":"9829:39:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"9892:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:12","typeDescriptions":{}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1871,"nodeType":"IfStatement","src":"9888:90:12","trueBody":{"id":1870,"nodeType":"Block","src":"9915:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:12","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1863,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"9936:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1869,"nodeType":"RevertStatement","src":"9929:38:12"}]}},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1872,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9987:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1875,"indexExpression":{"id":1873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"9999:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1876,"indexExpression":{"id":1874,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"10006:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"10017:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"9987:35:12"},{"condition":{"id":1880,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"10036:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"10032:76:12","trueBody":{"id":1887,"nodeType":"Block","src":"10047:61:12","statements":[{"eventCall":{"arguments":[{"id":1882,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"10075:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1883,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"10082:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"10091:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"10066:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1886,"nodeType":"EmitStatement","src":"10061:36:12"}]}}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"8841:836:12","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:12","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"owner","nameLocation":"9708:5:12","nodeType":"VariableDeclaration","scope":1890,"src":"9700:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"spender","nameLocation":"9723:7:12","nodeType":"VariableDeclaration","scope":1890,"src":"9715:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"value","nameLocation":"9740:5:12","nodeType":"VariableDeclaration","scope":1890,"src":"9732:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:12","nodeType":"VariableDeclaration","scope":1890,"src":"9747:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1838,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:12"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"9780:0:12"},"scope":1939,"src":"9682:432:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"10485:387:12","statements":[{"assignments":[1901],"declarations":[{"constant":false,"id":1901,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:12","nodeType":"VariableDeclaration","scope":1937,"src":"10495:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1906,"initialValue":{"arguments":[{"id":1903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"10532:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"10539:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1902,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"10522:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"10561:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:12","memberName":"max","nodeType":"MemberAccess","src":"10580:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1936,"nodeType":"IfStatement","src":"10557:309:12","trueBody":{"id":1935,"nodeType":"Block","src":"10599:267:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"10617:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10636:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"nodeType":"IfStatement","src":"10613:130:12","trueBody":{"id":1923,"nodeType":"Block","src":"10643:100:12","statements":[{"errorCall":{"arguments":[{"id":1918,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"10695:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"10704:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10722:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10668:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1922,"nodeType":"RevertStatement","src":"10661:67:12"}]}},{"id":1934,"nodeType":"UncheckedBlock","src":"10756:100:12","statements":[{"expression":{"arguments":[{"id":1926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"10793:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1927,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"10800:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"10809:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10828:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1925,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1830,1890],"referencedDeclaration":1890,"src":"10784:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"10784:57:12"}]}]}}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"10120:271:12","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:12","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"owner","nameLocation":"10429:5:12","nodeType":"VariableDeclaration","scope":1938,"src":"10421:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"spender","nameLocation":"10444:7:12","nodeType":"VariableDeclaration","scope":1938,"src":"10436:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"value","nameLocation":"10461:5:12","nodeType":"VariableDeclaration","scope":1938,"src":"10453:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:12"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"10485:0:12"},"scope":1939,"src":"10396:476:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1940,"src":"1106:9768:12","usedErrors":[1299,1304,1309,1318,1323,1328],"usedEvents":[1951,1960]}],"src":"105:10770:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2017]},"id":2018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1941,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"132:71:13","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2017,"linearizedBaseContracts":[2017],"name":"IERC20","nameLocation":"214:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"227:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1951,"name":"Transfer","nameLocation":"396:8:13","nodeType":"EventDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:13","nodeType":"VariableDeclaration","scope":1951,"src":"405:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:13","nodeType":"VariableDeclaration","scope":1951,"src":"427:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:13","nodeType":"VariableDeclaration","scope":1951,"src":"447:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:13"},"src":"390:72:13"},{"anonymous":false,"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"468:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1960,"name":"Approval","nameLocation":"627:8:13","nodeType":"EventDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:13","nodeType":"VariableDeclaration","scope":1960,"src":"636:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:13","nodeType":"VariableDeclaration","scope":1960,"src":"659:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:13","nodeType":"VariableDeclaration","scope":1960,"src":"684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:13"},"src":"621:78:13"},{"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"705:65:13","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1966,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:13","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"795:2:13"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"821:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:13"},"scope":2017,"src":"775:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"836:71:13","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1974,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:13","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"account","nameLocation":"939:7:13","nodeType":"VariableDeclaration","scope":1974,"src":"931:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:13"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1974,"src":"971:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:13"},"scope":2017,"src":"912:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"986:213:13","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1984,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:13","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"to","nameLocation":"1230:2:13","nodeType":"VariableDeclaration","scope":1984,"src":"1222:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"value","nameLocation":"1242:5:13","nodeType":"VariableDeclaration","scope":1984,"src":"1234:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:13"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"1267:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1981,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:13"},"scope":2017,"src":"1204:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"1279:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1994,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:13","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"owner","nameLocation":"1575:5:13","nodeType":"VariableDeclaration","scope":1994,"src":"1567:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"spender","nameLocation":"1590:7:13","nodeType":"VariableDeclaration","scope":1994,"src":"1582:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:13"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"1622:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:13"},"scope":2017,"src":"1548:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"1637:667:13","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2004,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:13","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"spender","nameLocation":"2334:7:13","nodeType":"VariableDeclaration","scope":2004,"src":"2326:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"value","nameLocation":"2351:5:13","nodeType":"VariableDeclaration","scope":2004,"src":"2343:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:13"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"2376:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2001,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:13"},"scope":2017,"src":"2309:73:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"2388:297:13","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2016,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:13","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"from","nameLocation":"2720:4:13","nodeType":"VariableDeclaration","scope":2016,"src":"2712:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"to","nameLocation":"2734:2:13","nodeType":"VariableDeclaration","scope":2016,"src":"2726:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2008,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"2746:5:13","nodeType":"VariableDeclaration","scope":2016,"src":"2738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:13"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"2771:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:13"},"scope":2017,"src":"2690:87:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2018,"src":"204:2575:13","usedErrors":[],"usedEvents":[1951,1960]}],"src":"106:2674:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2017],"IERC20Metadata":[2043]},"id":2044,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2019,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2021,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":2018,"src":"151:37:14","symbolAliases":[{"foreign":{"id":2020,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"159:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2023,"name":"IERC20","nameLocations":["306:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"306:6:14"},"id":2024,"nodeType":"InheritanceSpecifier","src":"306:6:14"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"190:87:14","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2043,"linearizedBaseContracts":[2043,2017],"name":"IERC20Metadata","nameLocation":"288:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"319:54:14","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2030,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:14","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[],"src":"391:2:14"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"417:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:14"},"scope":2043,"src":"378:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"438:56:14","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2036,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:14","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[],"src":"514:2:14"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"540:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2033,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:14"},"scope":2043,"src":"499:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"561:65:14","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2042,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:14","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[],"src":"648:2:14"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"674:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2039,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:14"},"scope":2043,"src":"631:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2044,"src":"278:405:14","usedErrors":[],"usedEvents":[1951,1960]}],"src":"125:559:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1279],"IERC20":[2017],"SafeERC20":[2507]},"id":2508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2045,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2508,"sourceUnit":2018,"src":"141:37:15","symbolAliases":[{"foreign":{"id":2046,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"149:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2508,"sourceUnit":1280,"src":"179:58:15","symbolAliases":[{"foreign":{"id":2048,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"187:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"239:458:15","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2507,"linearizedBaseContracts":[2507],"name":"SafeERC20","nameLocation":"706:9:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"722:65:15","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2055,"name":"SafeERC20FailedOperation","nameLocation":"798:24:15","nodeType":"ErrorDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"token","nameLocation":"831:5:15","nodeType":"VariableDeclaration","scope":2055,"src":"823:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:15"},"src":"792:46:15"},{"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"844:71:15","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2064,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:15","nodeType":"ErrorDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"spender","nameLocation":"967:7:15","nodeType":"VariableDeclaration","scope":2064,"src":"959:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:15","nodeType":"VariableDeclaration","scope":2064,"src":"976:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:15","nodeType":"VariableDeclaration","scope":2064,"src":"1002:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:15"},"src":"920:109:15"},{"body":{"id":2087,"nodeType":"Block","src":"1291:88:15","statements":[{"expression":{"arguments":[{"id":2076,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1321:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1343:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"1343:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2081,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1360:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"1364:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2077,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2075,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"1301:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"1301:71:15"}]},"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"1035:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:15","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"token","nameLocation":"1248:5:15","nodeType":"VariableDeclaration","scope":2088,"src":"1241:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"IERC20","nameLocations":["1241:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"1241:6:15"},"referencedDeclaration":2017,"src":"1241:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"to","nameLocation":"1263:2:15","nodeType":"VariableDeclaration","scope":2088,"src":"1255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"value","nameLocation":"1275:5:15","nodeType":"VariableDeclaration","scope":2088,"src":"1267:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:15"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"1291:0:15"},"scope":2507,"src":"1219:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"1708:98:15","statements":[{"expression":{"arguments":[{"id":2102,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1738:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2105,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1760:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"1760:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2107,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"1781:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1787:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1791:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2103,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2101,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"1718:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2113,"nodeType":"ExpressionStatement","src":"1718:81:15"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"1385:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:15","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"token","nameLocation":"1651:5:15","nodeType":"VariableDeclaration","scope":2115,"src":"1644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"IERC20","nameLocations":["1644:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"1644:6:15"},"referencedDeclaration":2017,"src":"1644:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"from","nameLocation":"1666:4:15","nodeType":"VariableDeclaration","scope":2115,"src":"1658:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"to","nameLocation":"1680:2:15","nodeType":"VariableDeclaration","scope":2115,"src":"1672:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"1692:5:15","nodeType":"VariableDeclaration","scope":2115,"src":"1684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:15"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"1708:0:15"},"scope":2507,"src":"1618:188:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2140,"nodeType":"Block","src":"2033:99:15","statements":[{"expression":{"arguments":[{"id":2129,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"2074:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"2096:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"2096:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2134,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2113:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2117:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2130,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2128,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2050:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2127,"id":2139,"nodeType":"Return","src":"2043:82:15"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"1812:126:15","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:15","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"token","nameLocation":"1975:5:15","nodeType":"VariableDeclaration","scope":2141,"src":"1968:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2118,"nodeType":"UserDefinedTypeName","pathNode":{"id":2117,"name":"IERC20","nameLocations":["1968:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"1968:6:15"},"referencedDeclaration":2017,"src":"1968:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"to","nameLocation":"1990:2:15","nodeType":"VariableDeclaration","scope":2141,"src":"1982:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"value","nameLocation":"2002:5:15","nodeType":"VariableDeclaration","scope":2141,"src":"1994:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:15"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2141,"src":"2027:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:15"},"scope":2507,"src":"1943:189:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2169,"nodeType":"Block","src":"2381:109:15","statements":[{"expression":{"arguments":[{"id":2157,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2422:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2160,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2444:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"2444:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2162,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2465:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2471:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2475:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2158,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2156,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2398:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2155,"id":2168,"nodeType":"Return","src":"2391:92:15"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"2138:130:15","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:15","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"token","nameLocation":"2309:5:15","nodeType":"VariableDeclaration","scope":2170,"src":"2302:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"IERC20","nameLocations":["2302:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"2302:6:15"},"referencedDeclaration":2017,"src":"2302:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"from","nameLocation":"2324:4:15","nodeType":"VariableDeclaration","scope":2170,"src":"2316:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"to","nameLocation":"2338:2:15","nodeType":"VariableDeclaration","scope":2170,"src":"2330:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"value","nameLocation":"2350:5:15","nodeType":"VariableDeclaration","scope":2170,"src":"2342:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:15"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"2375:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2153,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:15"},"scope":2507,"src":"2273:217:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"3232:139:15","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:15","nodeType":"VariableDeclaration","scope":2200,"src":"3242:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"arguments":[{"arguments":[{"id":2187,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2507","typeString":"library SafeERC20"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:15","typeDescriptions":{}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2189,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"3296:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2183,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"3265:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"3265:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:15"},{"expression":{"arguments":[{"id":2193,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"3327:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"id":2194,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"3334:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"3343:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3358:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3314:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"ExpressionStatement","src":"3314:50:15"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"2496:645:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:15","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"token","nameLocation":"3184:5:15","nodeType":"VariableDeclaration","scope":2201,"src":"3177:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2173,"nodeType":"UserDefinedTypeName","pathNode":{"id":2172,"name":"IERC20","nameLocations":["3177:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"3177:6:15"},"referencedDeclaration":2017,"src":"3177:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"spender","nameLocation":"3199:7:15","nodeType":"VariableDeclaration","scope":2201,"src":"3191:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"value","nameLocation":"3216:5:15","nodeType":"VariableDeclaration","scope":2201,"src":"3208:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:15"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"3232:0:15"},"scope":2507,"src":"3146:225:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"4137:370:15","statements":[{"id":2242,"nodeType":"UncheckedBlock","src":"4147:354:15","statements":[{"assignments":[2213],"declarations":[{"constant":false,"id":2213,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:15","nodeType":"VariableDeclaration","scope":2242,"src":"4171:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2222,"initialValue":{"arguments":[{"arguments":[{"id":2218,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2507","typeString":"library SafeERC20"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:15","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2220,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4229:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2214,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4198:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"4198:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4255:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2224,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4274:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2233,"nodeType":"IfStatement","src":"4251:160:15","trueBody":{"id":2232,"nodeType":"Block","src":"4293:118:15","statements":[{"errorCall":{"arguments":[{"id":2227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4351:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4360:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2229,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4378:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2226,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"4318:32:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2231,"nodeType":"RevertStatement","src":"4311:85:15"}]}},{"expression":{"arguments":[{"id":2235,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4437:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"id":2236,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4444:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4453:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2238,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4472:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2234,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"4424:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"4424:66:15"}]}]},"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"3377:657:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:15","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"token","nameLocation":"4077:5:15","nodeType":"VariableDeclaration","scope":2244,"src":"4070:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2204,"nodeType":"UserDefinedTypeName","pathNode":{"id":2203,"name":"IERC20","nameLocations":["4070:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"4070:6:15"},"referencedDeclaration":2017,"src":"4070:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"spender","nameLocation":"4092:7:15","nodeType":"VariableDeclaration","scope":2244,"src":"4084:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:15","nodeType":"VariableDeclaration","scope":2244,"src":"4101:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:15"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[],"src":"4137:0:15"},"scope":2507,"src":"4039:468:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2290,"nodeType":"Block","src":"5161:303:15","statements":[{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:15","nodeType":"VariableDeclaration","scope":2290,"src":"5171:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2255,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"expression":{"id":2259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5214:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"5214:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2261,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"5239:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2257,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:15"},{"condition":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:15","subExpression":{"arguments":[{"id":2267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5286:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"id":2268,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5293:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2266,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"5262:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2289,"nodeType":"IfStatement","src":"5257:201:15","trueBody":{"id":2288,"nodeType":"Block","src":"5308:150:15","statements":[{"expression":{"arguments":[{"id":2272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5342:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2275,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5364:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"5364:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2277,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5380:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2273,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2271,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"5322:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2282,"nodeType":"ExpressionStatement","src":"5322:71:15"},{"expression":{"arguments":[{"id":2284,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5427:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},{"id":2285,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5434:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2283,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"5407:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"ExpressionStatement","src":"5407:40:15"}]}}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"4513:566:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:15","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"token","nameLocation":"5113:5:15","nodeType":"VariableDeclaration","scope":2291,"src":"5106:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"IERC20","nameLocations":["5106:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"5106:6:15"},"referencedDeclaration":2017,"src":"5106:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"spender","nameLocation":"5128:7:15","nodeType":"VariableDeclaration","scope":2291,"src":"5120:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"value","nameLocation":"5145:5:15","nodeType":"VariableDeclaration","scope":2291,"src":"5137:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:15"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[],"src":"5161:0:15"},"scope":2507,"src":"5084:380:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"5911:219:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2304,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"5925:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:15","memberName":"code","nodeType":"MemberAccess","src":"5925:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:15","memberName":"length","nodeType":"MemberAccess","src":"5925:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:15","subExpression":{"arguments":[{"id":2318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"6034:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6038:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2320,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"6045:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"6012:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:15","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1230,"src":"6012:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2331,"nodeType":"IfStatement","src":"6007:117:15","trueBody":{"id":2330,"nodeType":"Block","src":"6052:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2326,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"6106:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:15","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2323,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6073:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2329,"nodeType":"RevertStatement","src":"6066:47:15"}]}},"id":2332,"nodeType":"IfStatement","src":"5921:203:15","trueBody":{"id":2315,"nodeType":"Block","src":"5946:55:15","statements":[{"expression":{"arguments":[{"id":2310,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"5973:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},{"id":2311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"5980:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"5984:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5960:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2314,"nodeType":"ExpressionStatement","src":"5960:30:15"}]}}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"5470:333:15","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:15","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"token","nameLocation":"5849:5:15","nodeType":"VariableDeclaration","scope":2334,"src":"5840:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},"typeName":{"id":2294,"nodeType":"UserDefinedTypeName","pathNode":{"id":2293,"name":"IERC1363","nameLocations":["5840:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"5840:8:15"},"referencedDeclaration":1279,"src":"5840:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"to","nameLocation":"5864:2:15","nodeType":"VariableDeclaration","scope":2334,"src":"5856:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"value","nameLocation":"5876:5:15","nodeType":"VariableDeclaration","scope":2334,"src":"5868:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"data","nameLocation":"5896:4:15","nodeType":"VariableDeclaration","scope":2334,"src":"5883:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2300,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:15"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"5911:0:15"},"scope":2507,"src":"5808:322:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"6649:239:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2349,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"6663:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:15","memberName":"code","nodeType":"MemberAccess","src":"6663:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:15","memberName":"length","nodeType":"MemberAccess","src":"6663:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:15","subExpression":{"arguments":[{"id":2364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6786:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"6792:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"6796:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2367,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"6803:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2362,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6760:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:15","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"6760:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2378,"nodeType":"IfStatement","src":"6755:127:15","trueBody":{"id":2377,"nodeType":"Block","src":"6810:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2373,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6864:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}],"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:15","typeDescriptions":{}}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2370,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6831:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2376,"nodeType":"RevertStatement","src":"6824:47:15"}]}},"id":2379,"nodeType":"IfStatement","src":"6659:223:15","trueBody":{"id":2361,"nodeType":"Block","src":"6684:65:15","statements":[{"expression":{"arguments":[{"id":2355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6715:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},{"id":2356,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6722:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"6728:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"6732:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"6698:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"6698:40:15"}]}}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"6136:341:15","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:15","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"token","nameLocation":"6536:5:15","nodeType":"VariableDeclaration","scope":2381,"src":"6527:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},"typeName":{"id":2337,"nodeType":"UserDefinedTypeName","pathNode":{"id":2336,"name":"IERC1363","nameLocations":["6527:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"6527:8:15"},"referencedDeclaration":1279,"src":"6527:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"from","nameLocation":"6559:4:15","nodeType":"VariableDeclaration","scope":2381,"src":"6551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"to","nameLocation":"6581:2:15","nodeType":"VariableDeclaration","scope":2381,"src":"6573:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"value","nameLocation":"6601:5:15","nodeType":"VariableDeclaration","scope":2381,"src":"6593:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"data","nameLocation":"6629:4:15","nodeType":"VariableDeclaration","scope":2381,"src":"6616:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2345,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:15"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"6649:0:15"},"scope":2507,"src":"6482:406:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"7655:218:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2394,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"7669:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:15","memberName":"code","nodeType":"MemberAccess","src":"7669:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:15","memberName":"length","nodeType":"MemberAccess","src":"7669:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:15","subExpression":{"arguments":[{"id":2408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"7777:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"7781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2410,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"7788:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7756:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:15","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1278,"src":"7756:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2421,"nodeType":"IfStatement","src":"7751:116:15","trueBody":{"id":2420,"nodeType":"Block","src":"7795:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2416,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7849:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}],"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:15","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2413,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"7816:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2419,"nodeType":"RevertStatement","src":"7809:47:15"}]}},"id":2422,"nodeType":"IfStatement","src":"7665:202:15","trueBody":{"id":2405,"nodeType":"Block","src":"7690:55:15","statements":[{"expression":{"arguments":[{"id":2400,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7717:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},{"id":2401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"7724:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"7728:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"7704:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"7704:30:15"}]}}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"6894:654:15","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:15","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"token","nameLocation":"7593:5:15","nodeType":"VariableDeclaration","scope":2424,"src":"7584:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"},"typeName":{"id":2384,"nodeType":"UserDefinedTypeName","pathNode":{"id":2383,"name":"IERC1363","nameLocations":["7584:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"7584:8:15"},"referencedDeclaration":1279,"src":"7584:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1279","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"to","nameLocation":"7608:2:15","nodeType":"VariableDeclaration","scope":2424,"src":"7600:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"value","nameLocation":"7620:5:15","nodeType":"VariableDeclaration","scope":2424,"src":"7612:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"data","nameLocation":"7640:4:15","nodeType":"VariableDeclaration","scope":2424,"src":"7627:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:15"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[],"src":"7655:0:15"},"scope":2507,"src":"7553:320:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2464,"nodeType":"Block","src":"8440:650:15","statements":[{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:15","nodeType":"VariableDeclaration","scope":2464,"src":"8450:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2435,"nodeType":"VariableDeclarationStatement","src":"8450:18:15"},{"assignments":[2437],"declarations":[{"constant":false,"id":2437,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:15","nodeType":"VariableDeclaration","scope":2464,"src":"8478:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2438,"nodeType":"VariableDeclarationStatement","src":"8478:19:15"},{"AST":{"nativeSrc":"8532:396:15","nodeType":"YulBlock","src":"8532:396:15","statements":[{"nativeSrc":"8546:75:15","nodeType":"YulVariableDeclaration","src":"8546:75:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:15","nodeType":"YulIdentifier","src":"8566:3:15"},"nativeSrc":"8566:5:15","nodeType":"YulFunctionCall","src":"8566:5:15"},{"name":"token","nativeSrc":"8573:5:15","nodeType":"YulIdentifier","src":"8573:5:15"},{"kind":"number","nativeSrc":"8580:1:15","nodeType":"YulLiteral","src":"8580:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:15","nodeType":"YulIdentifier","src":"8587:4:15"},{"kind":"number","nativeSrc":"8593:4:15","nodeType":"YulLiteral","src":"8593:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:15","nodeType":"YulIdentifier","src":"8583:3:15"},"nativeSrc":"8583:15:15","nodeType":"YulFunctionCall","src":"8583:15:15"},{"arguments":[{"name":"data","nativeSrc":"8606:4:15","nodeType":"YulIdentifier","src":"8606:4:15"}],"functionName":{"name":"mload","nativeSrc":"8600:5:15","nodeType":"YulIdentifier","src":"8600:5:15"},"nativeSrc":"8600:11:15","nodeType":"YulFunctionCall","src":"8600:11:15"},{"kind":"number","nativeSrc":"8613:1:15","nodeType":"YulLiteral","src":"8613:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:15","nodeType":"YulLiteral","src":"8616:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:15","nodeType":"YulIdentifier","src":"8561:4:15"},"nativeSrc":"8561:60:15","nodeType":"YulFunctionCall","src":"8561:60:15"},"variables":[{"name":"success","nativeSrc":"8550:7:15","nodeType":"YulTypedName","src":"8550:7:15","type":""}]},{"body":{"nativeSrc":"8682:157:15","nodeType":"YulBlock","src":"8682:157:15","statements":[{"nativeSrc":"8700:22:15","nodeType":"YulVariableDeclaration","src":"8700:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:15","nodeType":"YulLiteral","src":"8717:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:15","nodeType":"YulIdentifier","src":"8711:5:15"},"nativeSrc":"8711:11:15","nodeType":"YulFunctionCall","src":"8711:11:15"},"variables":[{"name":"ptr","nativeSrc":"8704:3:15","nodeType":"YulTypedName","src":"8704:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:15","nodeType":"YulIdentifier","src":"8754:3:15"},{"kind":"number","nativeSrc":"8759:1:15","nodeType":"YulLiteral","src":"8759:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:15","nodeType":"YulIdentifier","src":"8762:14:15"},"nativeSrc":"8762:16:15","nodeType":"YulFunctionCall","src":"8762:16:15"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:15","nodeType":"YulIdentifier","src":"8739:14:15"},"nativeSrc":"8739:40:15","nodeType":"YulFunctionCall","src":"8739:40:15"},"nativeSrc":"8739:40:15","nodeType":"YulExpressionStatement","src":"8739:40:15"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:15","nodeType":"YulIdentifier","src":"8803:3:15"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:15","nodeType":"YulIdentifier","src":"8808:14:15"},"nativeSrc":"8808:16:15","nodeType":"YulFunctionCall","src":"8808:16:15"}],"functionName":{"name":"revert","nativeSrc":"8796:6:15","nodeType":"YulIdentifier","src":"8796:6:15"},"nativeSrc":"8796:29:15","nodeType":"YulFunctionCall","src":"8796:29:15"},"nativeSrc":"8796:29:15","nodeType":"YulExpressionStatement","src":"8796:29:15"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:15","nodeType":"YulIdentifier","src":"8673:7:15"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:15","nodeType":"YulIdentifier","src":"8666:6:15"},"nativeSrc":"8666:15:15","nodeType":"YulFunctionCall","src":"8666:15:15"},"nativeSrc":"8663:176:15","nodeType":"YulIf","src":"8663:176:15"},{"nativeSrc":"8852:30:15","nodeType":"YulAssignment","src":"8852:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:15","nodeType":"YulIdentifier","src":"8866:14:15"},"nativeSrc":"8866:16:15","nodeType":"YulFunctionCall","src":"8866:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:15","nodeType":"YulIdentifier","src":"8852:10:15"}]},{"nativeSrc":"8895:23:15","nodeType":"YulAssignment","src":"8895:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:15","nodeType":"YulLiteral","src":"8916:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:15","nodeType":"YulIdentifier","src":"8910:5:15"},"nativeSrc":"8910:8:15","nodeType":"YulFunctionCall","src":"8910:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:15","nodeType":"YulIdentifier","src":"8895:11:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2430,"isOffset":false,"isSlot":false,"src":"8587:4:15","valueSize":1},{"declaration":2430,"isOffset":false,"isSlot":false,"src":"8606:4:15","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"8852:10:15","valueSize":1},{"declaration":2437,"isOffset":false,"isSlot":false,"src":"8895:11:15","valueSize":1},{"declaration":2428,"isOffset":false,"isSlot":false,"src":"8573:5:15","valueSize":1}],"flags":["memory-safe"],"id":2439,"nodeType":"InlineAssembly","src":"8507:421:15"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"8942:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8994:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2445,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"8968:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:15","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:15","memberName":"code","nodeType":"MemberAccess","src":"8960:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:15","memberName":"length","nodeType":"MemberAccess","src":"8960:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2463,"nodeType":"IfStatement","src":"8938:146:15","trueBody":{"id":2462,"nodeType":"Block","src":"9012:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"9066:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:15","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2455,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"9033:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2461,"nodeType":"RevertStatement","src":"9026:47:15"}]}}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"7879:486:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2465,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:15","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"token","nameLocation":"8406:5:15","nodeType":"VariableDeclaration","scope":2465,"src":"8399:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2427,"nodeType":"UserDefinedTypeName","pathNode":{"id":2426,"name":"IERC20","nameLocations":["8399:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"8399:6:15"},"referencedDeclaration":2017,"src":"8399:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"data","nameLocation":"8426:4:15","nodeType":"VariableDeclaration","scope":2465,"src":"8413:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2429,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:15"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"8440:0:15"},"scope":2507,"src":"8370:720:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2505,"nodeType":"Block","src":"9681:391:15","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"success","nameLocation":"9696:7:15","nodeType":"VariableDeclaration","scope":2505,"src":"9691:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2476,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2478,"nodeType":"VariableDeclarationStatement","src":"9691:12:15"},{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:15","nodeType":"VariableDeclaration","scope":2505,"src":"9713:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2481,"nodeType":"VariableDeclarationStatement","src":"9713:18:15"},{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:15","nodeType":"VariableDeclaration","scope":2505,"src":"9741:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2484,"nodeType":"VariableDeclarationStatement","src":"9741:19:15"},{"AST":{"nativeSrc":"9795:174:15","nodeType":"YulBlock","src":"9795:174:15","statements":[{"nativeSrc":"9809:71:15","nodeType":"YulAssignment","src":"9809:71:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:15","nodeType":"YulIdentifier","src":"9825:3:15"},"nativeSrc":"9825:5:15","nodeType":"YulFunctionCall","src":"9825:5:15"},{"name":"token","nativeSrc":"9832:5:15","nodeType":"YulIdentifier","src":"9832:5:15"},{"kind":"number","nativeSrc":"9839:1:15","nodeType":"YulLiteral","src":"9839:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:15","nodeType":"YulIdentifier","src":"9846:4:15"},{"kind":"number","nativeSrc":"9852:4:15","nodeType":"YulLiteral","src":"9852:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:15","nodeType":"YulIdentifier","src":"9842:3:15"},"nativeSrc":"9842:15:15","nodeType":"YulFunctionCall","src":"9842:15:15"},{"arguments":[{"name":"data","nativeSrc":"9865:4:15","nodeType":"YulIdentifier","src":"9865:4:15"}],"functionName":{"name":"mload","nativeSrc":"9859:5:15","nodeType":"YulIdentifier","src":"9859:5:15"},"nativeSrc":"9859:11:15","nodeType":"YulFunctionCall","src":"9859:11:15"},{"kind":"number","nativeSrc":"9872:1:15","nodeType":"YulLiteral","src":"9872:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:15","nodeType":"YulLiteral","src":"9875:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:15","nodeType":"YulIdentifier","src":"9820:4:15"},"nativeSrc":"9820:60:15","nodeType":"YulFunctionCall","src":"9820:60:15"},"variableNames":[{"name":"success","nativeSrc":"9809:7:15","nodeType":"YulIdentifier","src":"9809:7:15"}]},{"nativeSrc":"9893:30:15","nodeType":"YulAssignment","src":"9893:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:15","nodeType":"YulIdentifier","src":"9907:14:15"},"nativeSrc":"9907:16:15","nodeType":"YulFunctionCall","src":"9907:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:15","nodeType":"YulIdentifier","src":"9893:10:15"}]},{"nativeSrc":"9936:23:15","nodeType":"YulAssignment","src":"9936:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:15","nodeType":"YulLiteral","src":"9957:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:15","nodeType":"YulIdentifier","src":"9951:5:15"},"nativeSrc":"9951:8:15","nodeType":"YulFunctionCall","src":"9951:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:15","nodeType":"YulIdentifier","src":"9936:11:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2471,"isOffset":false,"isSlot":false,"src":"9846:4:15","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"9865:4:15","valueSize":1},{"declaration":2480,"isOffset":false,"isSlot":false,"src":"9893:10:15","valueSize":1},{"declaration":2483,"isOffset":false,"isSlot":false,"src":"9936:11:15","valueSize":1},{"declaration":2477,"isOffset":false,"isSlot":false,"src":"9809:7:15","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"9832:5:15","valueSize":1}],"flags":["memory-safe"],"id":2485,"nodeType":"InlineAssembly","src":"9770:199:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"9985:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"9997:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10048:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"10023:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:15","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:15","memberName":"code","nodeType":"MemberAccess","src":"10015:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:15","memberName":"length","nodeType":"MemberAccess","src":"10015:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2475,"id":2504,"nodeType":"Return","src":"9978:87:15"}]},"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"9096:491:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:15","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"token","nameLocation":"9632:5:15","nodeType":"VariableDeclaration","scope":2506,"src":"9625:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"},"typeName":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"IERC20","nameLocations":["9625:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"9625:6:15"},"referencedDeclaration":2017,"src":"9625:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"data","nameLocation":"9652:4:15","nodeType":"VariableDeclaration","scope":2506,"src":"9639:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2470,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:15"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"9675:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2473,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:15"},"scope":2507,"src":"9592:480:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2508,"src":"698:9376:15","usedErrors":[2055,2064],"usedEvents":[]}],"src":"115:9960:15"},"id":15},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3385],"Comparators":[3417],"Math":[7222],"SlotDerivation":[3629],"StorageSlot":[3753]},"id":3386,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2509,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3386,"sourceUnit":3418,"src":"209:46:16","symbolAliases":[{"foreign":{"id":2510,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"217:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3386,"sourceUnit":3630,"src":"256:52:16","symbolAliases":[{"foreign":{"id":2512,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"264:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3386,"sourceUnit":3754,"src":"309:46:16","symbolAliases":[{"foreign":{"id":2514,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"317:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3386,"sourceUnit":7223,"src":"356:37:16","symbolAliases":[{"foreign":{"id":2516,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"364:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"395:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3385,"linearizedBaseContracts":[3385],"name":"Arrays","nameLocation":"467:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2521,"libraryName":{"id":2519,"name":"SlotDerivation","nameLocations":["486:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"486:14:16"},"nodeType":"UsingForDirective","src":"480:33:16","typeName":{"id":2520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2524,"libraryName":{"id":2522,"name":"StorageSlot","nameLocations":["524:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"524:11:16"},"nodeType":"UsingForDirective","src":"518:30:16","typeName":{"id":2523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2556,"nodeType":"Block","src":"1628:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2546,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1656:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2545,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2549,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2548,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"1664:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2551,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"1677:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2544,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1638:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"ExpressionStatement","src":"1638:44:16"},{"expression":{"id":2554,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1699:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2543,"id":2555,"nodeType":"Return","src":"1692:12:16"}]},"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"554:915:16","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:16","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"array","nameLocation":"1514:5:16","nodeType":"VariableDeclaration","scope":2557,"src":"1497:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2527,"nodeType":"ArrayTypeName","src":"1497:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"comp","nameLocation":"1576:4:16","nodeType":"VariableDeclaration","scope":2557,"src":"1529:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2537,"nodeType":"FunctionTypeName","parameterTypes":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"1538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"1547:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:16"},"returnParameterTypes":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"1570:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2534,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:16"},"src":"1529:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:16"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"1610:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ArrayTypeName","src":"1610:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:16"},"scope":3385,"src":"1474:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2575,"nodeType":"Block","src":"1894:66:16","statements":[{"expression":{"arguments":[{"id":2568,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"1909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2569,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1916:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3417_$","typeString":"type(library Comparators)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"1916:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2567,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2557,2576,2608,2629,2661,2682],"referencedDeclaration":2557,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2572,"nodeType":"ExpressionStatement","src":"1904:27:16"},{"expression":{"id":2573,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"1948:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2566,"id":2574,"nodeType":"Return","src":"1941:12:16"}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"1717:93:16","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:16","nodeType":"FunctionDefinition","parameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"array","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":2576,"src":"1829:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"nodeType":"ArrayTypeName","src":"1829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:16"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1876:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ArrayTypeName","src":"1876:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:16"},"scope":3385,"src":"1815:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"3040:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2598,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2597,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2833,2845],"referencedDeclaration":2833,"src":"3055:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2601,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"3102:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2600,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2871,2897],"referencedDeclaration":2871,"src":"3083:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2596,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2557,2576,2608,2629,2661,2682],"referencedDeclaration":2557,"src":"3050:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2604,"nodeType":"ExpressionStatement","src":"3050:58:16"},{"expression":{"id":2605,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3125:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2595,"id":2606,"nodeType":"Return","src":"3118:12:16"}]},"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"1966:915:16","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"array","nameLocation":"2926:5:16","nodeType":"VariableDeclaration","scope":2608,"src":"2909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2579,"nodeType":"ArrayTypeName","src":"2909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"comp","nameLocation":"2988:4:16","nodeType":"VariableDeclaration","scope":2608,"src":"2941:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2589,"nodeType":"FunctionTypeName","parameterTypes":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"2959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:16"},"returnParameterTypes":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"2982:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2586,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:16"},"src":"2941:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:16"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"3022:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2593,"nodeType":"ArrayTypeName","src":"3022:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:16"},"scope":3385,"src":"2886:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"3320:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2620,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"3355:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2619,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2833,2845],"referencedDeclaration":2833,"src":"3335:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2622,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3363:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3417_$","typeString":"type(library Comparators)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"3363:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2618,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2557,2576,2608,2629,2661,2682],"referencedDeclaration":2557,"src":"3330:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2625,"nodeType":"ExpressionStatement","src":"3330:48:16"},{"expression":{"id":2626,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"3395:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2617,"id":2627,"nodeType":"Return","src":"3388:12:16"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"3143:93:16","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:16","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"array","nameLocation":"3272:5:16","nodeType":"VariableDeclaration","scope":2629,"src":"3255:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2611,"nodeType":"ArrayTypeName","src":"3255:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:16"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"3302:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2615,"nodeType":"ArrayTypeName","src":"3302:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:16"},"scope":3385,"src":"3241:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"4487:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2651,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2650,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2833,2845],"referencedDeclaration":2845,"src":"4502:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2654,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"4549:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2653,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2871,2897],"referencedDeclaration":2897,"src":"4530:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2649,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2557,2576,2608,2629,2661,2682],"referencedDeclaration":2557,"src":"4497:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2657,"nodeType":"ExpressionStatement","src":"4497:58:16"},{"expression":{"id":2658,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"4572:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2648,"id":2659,"nodeType":"Return","src":"4565:12:16"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"3413:915:16","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:16","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"array","nameLocation":"4373:5:16","nodeType":"VariableDeclaration","scope":2661,"src":"4356:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2632,"nodeType":"ArrayTypeName","src":"4356:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"comp","nameLocation":"4435:4:16","nodeType":"VariableDeclaration","scope":2661,"src":"4388:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2642,"nodeType":"FunctionTypeName","parameterTypes":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"4397:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"4406:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:16"},"returnParameterTypes":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"4429:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:16"},"src":"4388:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:16"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"4469:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2646,"nodeType":"ArrayTypeName","src":"4469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:16"},"scope":3385,"src":"4333:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"4767:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2673,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2672,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2833,2845],"referencedDeclaration":2845,"src":"4782:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2675,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"4810:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3417_$","typeString":"type(library Comparators)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2671,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2557,2576,2608,2629,2661,2682],"referencedDeclaration":2557,"src":"4777:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2678,"nodeType":"ExpressionStatement","src":"4777:48:16"},{"expression":{"id":2679,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"4842:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2670,"id":2680,"nodeType":"Return","src":"4835:12:16"}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"4590:93:16","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:16","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"array","nameLocation":"4719:5:16","nodeType":"VariableDeclaration","scope":2682,"src":"4702:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2664,"nodeType":"ArrayTypeName","src":"4702:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:16"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"4749:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2668,"nodeType":"ArrayTypeName","src":"4749:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:16"},"scope":3385,"src":"4688:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2769,"nodeType":"Block","src":"5470:889:16","statements":[{"id":2768,"nodeType":"UncheckedBlock","src":"5480:873:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5508:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"5504:31:16","trueBody":{"functionReturnParameters":2699,"id":2705,"nodeType":"Return","src":"5528:7:16"}},{"assignments":[2708],"declarations":[{"constant":false,"id":2708,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:16","nodeType":"VariableDeclaration","scope":2768,"src":"5591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"arguments":[{"id":2710,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5614:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"5607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:16"},{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"pos","nameLocation":"5715:3:16","nodeType":"VariableDeclaration","scope":2768,"src":"5707:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2716,"initialValue":{"id":2715,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:16"},{"body":{"id":2747,"nodeType":"Block","src":"5795:331:16","statements":[{"condition":{"arguments":[{"arguments":[{"id":2732,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"5822:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2734,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2730,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5817:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2746,"nodeType":"IfStatement","src":"5813:299:16","trueBody":{"id":2745,"nodeType":"Block","src":"5842:270:16","statements":[{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6046:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"nodeType":"ExpressionStatement","src":"6046:11:16"},{"expression":{"arguments":[{"id":2741,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6085:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2742,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"6090:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2740,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"6079:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2744,"nodeType":"ExpressionStatement","src":"6079:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5773:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5778:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"initializationExpression":{"assignments":[2718],"declarations":[{"constant":false,"id":2718,"mutability":"mutable","name":"it","nameLocation":"5754:2:16","nodeType":"VariableDeclaration","scope":2748,"src":"5746:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2722,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5759:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2729,"nodeType":"ExpressionStatement","src":"5783:10:16"},"nodeType":"ForStatement","src":"5741:385:16"},{"expression":{"arguments":[{"id":2750,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6146:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2751,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6153:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"6140:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"6140:17:16"},{"expression":{"arguments":[{"id":2755,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6207:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2756,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6214:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2757,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6219:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2754,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"6196:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2759,"nodeType":"ExpressionStatement","src":"6196:28:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6284:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2764,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"6296:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2765,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6301:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2760,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"6273:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"6273:33:16"}]}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"4860:491:16","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:16","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"begin","nameLocation":"5384:5:16","nodeType":"VariableDeclaration","scope":2770,"src":"5376:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"end","nameLocation":"5399:3:16","nodeType":"VariableDeclaration","scope":2770,"src":"5391:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"comp","nameLocation":"5451:4:16","nodeType":"VariableDeclaration","scope":2770,"src":"5404:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2696,"nodeType":"FunctionTypeName","parameterTypes":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"5413:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"5422:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:16"},"returnParameterTypes":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"5445:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2693,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:16"},"src":"5404:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:16"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"5470:0:16"},"scope":3385,"src":"5356:1003:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2780,"nodeType":"Block","src":"6532:88:16","statements":[{"AST":{"nativeSrc":"6567:47:16","nodeType":"YulBlock","src":"6567:47:16","statements":[{"nativeSrc":"6581:23:16","nodeType":"YulAssignment","src":"6581:23:16","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:16","nodeType":"YulIdentifier","src":"6592:5:16"},{"kind":"number","nativeSrc":"6599:4:16","nodeType":"YulLiteral","src":"6599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:16","nodeType":"YulIdentifier","src":"6588:3:16"},"nativeSrc":"6588:16:16","nodeType":"YulFunctionCall","src":"6588:16:16"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:16","nodeType":"YulIdentifier","src":"6581:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2774,"isOffset":false,"isSlot":false,"src":"6592:5:16","valueSize":1},{"declaration":2777,"isOffset":false,"isSlot":false,"src":"6581:3:16","valueSize":1}],"flags":["memory-safe"],"id":2779,"nodeType":"InlineAssembly","src":"6542:72:16"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"6365:87:16","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:16","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"array","nameLocation":"6490:5:16","nodeType":"VariableDeclaration","scope":2781,"src":"6473:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ArrayTypeName","src":"6473:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:16"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:16","nodeType":"VariableDeclaration","scope":2781,"src":"6519:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:16"},"scope":3385,"src":"6457:163:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2800,"nodeType":"Block","src":"6892:93:16","statements":[{"id":2799,"nodeType":"UncheckedBlock","src":"6902:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2791,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6940:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2790,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6933:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2793,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6949:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:16","memberName":"length","nodeType":"MemberAccess","src":"6949:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2789,"id":2798,"nodeType":"Return","src":"6926:42:16"}]}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"6626:188:16","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:16","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"array","nameLocation":"6850:5:16","nodeType":"VariableDeclaration","scope":2801,"src":"6833:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2784,"nodeType":"ArrayTypeName","src":"6833:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:16"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:16","nodeType":"VariableDeclaration","scope":2801,"src":"6879:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:16"},"scope":3385,"src":"6819:166:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2810,"nodeType":"Block","src":"7136:68:16","statements":[{"AST":{"nativeSrc":"7155:43:16","nodeType":"YulBlock","src":"7155:43:16","statements":[{"nativeSrc":"7169:19:16","nodeType":"YulAssignment","src":"7169:19:16","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:16","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"mload","nativeSrc":"7178:5:16","nodeType":"YulIdentifier","src":"7178:5:16"},"nativeSrc":"7178:10:16","nodeType":"YulFunctionCall","src":"7178:10:16"},"variableNames":[{"name":"value","nativeSrc":"7169:5:16","nodeType":"YulIdentifier","src":"7169:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2804,"isOffset":false,"isSlot":false,"src":"7184:3:16","valueSize":1},{"declaration":2807,"isOffset":false,"isSlot":false,"src":"7169:5:16","valueSize":1}],"id":2809,"nodeType":"InlineAssembly","src":"7146:52:16"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"6991:74:16","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:16","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:16","nodeType":"VariableDeclaration","scope":2811,"src":"7086:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:16"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"value","nameLocation":"7129:5:16","nodeType":"VariableDeclaration","scope":2811,"src":"7121:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:16"},"scope":3385,"src":"7070:134:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2820,"nodeType":"Block","src":"7348:178:16","statements":[{"AST":{"nativeSrc":"7367:153:16","nodeType":"YulBlock","src":"7367:153:16","statements":[{"nativeSrc":"7381:25:16","nodeType":"YulVariableDeclaration","src":"7381:25:16","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:16","nodeType":"YulIdentifier","src":"7401:4:16"}],"functionName":{"name":"mload","nativeSrc":"7395:5:16","nodeType":"YulIdentifier","src":"7395:5:16"},"nativeSrc":"7395:11:16","nodeType":"YulFunctionCall","src":"7395:11:16"},"variables":[{"name":"value1","nativeSrc":"7385:6:16","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nativeSrc":"7419:25:16","nodeType":"YulVariableDeclaration","src":"7419:25:16","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:16","nodeType":"YulIdentifier","src":"7439:4:16"}],"functionName":{"name":"mload","nativeSrc":"7433:5:16","nodeType":"YulIdentifier","src":"7433:5:16"},"nativeSrc":"7433:11:16","nodeType":"YulFunctionCall","src":"7433:11:16"},"variables":[{"name":"value2","nativeSrc":"7423:6:16","nodeType":"YulTypedName","src":"7423:6:16","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:16","nodeType":"YulIdentifier","src":"7464:4:16"},{"name":"value2","nativeSrc":"7470:6:16","nodeType":"YulIdentifier","src":"7470:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:16","nodeType":"YulIdentifier","src":"7457:6:16"},"nativeSrc":"7457:20:16","nodeType":"YulFunctionCall","src":"7457:20:16"},"nativeSrc":"7457:20:16","nodeType":"YulExpressionStatement","src":"7457:20:16"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:16","nodeType":"YulIdentifier","src":"7497:4:16"},{"name":"value1","nativeSrc":"7503:6:16","nodeType":"YulIdentifier","src":"7503:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:16","nodeType":"YulIdentifier","src":"7490:6:16"},"nativeSrc":"7490:20:16","nodeType":"YulFunctionCall","src":"7490:20:16"},"nativeSrc":"7490:20:16","nodeType":"YulExpressionStatement","src":"7490:20:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2814,"isOffset":false,"isSlot":false,"src":"7401:4:16","valueSize":1},{"declaration":2814,"isOffset":false,"isSlot":false,"src":"7464:4:16","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"7439:4:16","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"7497:4:16","valueSize":1}],"id":2819,"nodeType":"InlineAssembly","src":"7358:162:16"}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"7210:77:16","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:16","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:16","nodeType":"VariableDeclaration","scope":2821,"src":"7307:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:16","nodeType":"VariableDeclaration","scope":2821,"src":"7321:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:16"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"7348:0:16"},"scope":3385,"src":"7292:234:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2832,"nodeType":"Block","src":"7713:64:16","statements":[{"AST":{"nativeSrc":"7732:39:16","nodeType":"YulBlock","src":"7732:39:16","statements":[{"nativeSrc":"7746:15:16","nodeType":"YulAssignment","src":"7746:15:16","value":{"name":"input","nativeSrc":"7756:5:16","nodeType":"YulIdentifier","src":"7756:5:16"},"variableNames":[{"name":"output","nativeSrc":"7746:6:16","nodeType":"YulIdentifier","src":"7746:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2825,"isOffset":false,"isSlot":false,"src":"7756:5:16","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":false,"src":"7746:6:16","valueSize":1}],"id":2831,"nodeType":"InlineAssembly","src":"7723:48:16"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"7532:76:16","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:16","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"input","nameLocation":"7659:5:16","nodeType":"VariableDeclaration","scope":2833,"src":"7642:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2824,"nodeType":"ArrayTypeName","src":"7642:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:16"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"output","nameLocation":"7705:6:16","nodeType":"VariableDeclaration","scope":2833,"src":"7688:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2828,"nodeType":"ArrayTypeName","src":"7688:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:16"},"scope":3385,"src":"7613:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2844,"nodeType":"Block","src":"7964:64:16","statements":[{"AST":{"nativeSrc":"7983:39:16","nodeType":"YulBlock","src":"7983:39:16","statements":[{"nativeSrc":"7997:15:16","nodeType":"YulAssignment","src":"7997:15:16","value":{"name":"input","nativeSrc":"8007:5:16","nodeType":"YulIdentifier","src":"8007:5:16"},"variableNames":[{"name":"output","nativeSrc":"7997:6:16","nodeType":"YulIdentifier","src":"7997:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2837,"isOffset":false,"isSlot":false,"src":"8007:5:16","valueSize":1},{"declaration":2841,"isOffset":false,"isSlot":false,"src":"7997:6:16","valueSize":1}],"id":2843,"nodeType":"InlineAssembly","src":"7974:48:16"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"7783:76:16","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2845,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:16","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"input","nameLocation":"7910:5:16","nodeType":"VariableDeclaration","scope":2845,"src":"7893:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2836,"nodeType":"ArrayTypeName","src":"7893:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:16"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"output","nameLocation":"7956:6:16","nodeType":"VariableDeclaration","scope":2845,"src":"7939:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ArrayTypeName","src":"7939:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:16"},"scope":3385,"src":"7864:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2870,"nodeType":"Block","src":"8290:64:16","statements":[{"AST":{"nativeSrc":"8309:39:16","nodeType":"YulBlock","src":"8309:39:16","statements":[{"nativeSrc":"8323:15:16","nodeType":"YulAssignment","src":"8323:15:16","value":{"name":"input","nativeSrc":"8333:5:16","nodeType":"YulIdentifier","src":"8333:5:16"},"variableNames":[{"name":"output","nativeSrc":"8323:6:16","nodeType":"YulIdentifier","src":"8323:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2856,"isOffset":false,"isSlot":false,"src":"8333:5:16","valueSize":1},{"declaration":2867,"isOffset":false,"isSlot":false,"src":"8323:6:16","valueSize":1}],"id":2869,"nodeType":"InlineAssembly","src":"8300:48:16"}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"8034:78:16","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:16","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"input","nameLocation":"8201:5:16","nodeType":"VariableDeclaration","scope":2871,"src":"8154:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2855,"nodeType":"FunctionTypeName","parameterTypes":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"8163:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"8172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:16"},"returnParameterTypes":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"8195:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2852,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:16"},"src":"8154:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:16"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"output","nameLocation":"8282:6:16","nodeType":"VariableDeclaration","scope":2871,"src":"8235:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2866,"nodeType":"FunctionTypeName","parameterTypes":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"8244:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"8253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:16"},"returnParameterTypes":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"8276:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:16"},"src":"8235:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:16"},"scope":3385,"src":"8117:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2896,"nodeType":"Block","src":"8616:64:16","statements":[{"AST":{"nativeSrc":"8635:39:16","nodeType":"YulBlock","src":"8635:39:16","statements":[{"nativeSrc":"8649:15:16","nodeType":"YulAssignment","src":"8649:15:16","value":{"name":"input","nativeSrc":"8659:5:16","nodeType":"YulIdentifier","src":"8659:5:16"},"variableNames":[{"name":"output","nativeSrc":"8649:6:16","nodeType":"YulIdentifier","src":"8649:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2882,"isOffset":false,"isSlot":false,"src":"8659:5:16","valueSize":1},{"declaration":2893,"isOffset":false,"isSlot":false,"src":"8649:6:16","valueSize":1}],"id":2895,"nodeType":"InlineAssembly","src":"8626:48:16"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"8360:78:16","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:16","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"input","nameLocation":"8527:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"8480:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2881,"nodeType":"FunctionTypeName","parameterTypes":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"8489:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"8498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:16"},"returnParameterTypes":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"8521:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:16"},"src":"8480:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:16"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"output","nameLocation":"8608:6:16","nodeType":"VariableDeclaration","scope":2897,"src":"8561:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2892,"nodeType":"FunctionTypeName","parameterTypes":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"8570:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"8579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:16"},"returnParameterTypes":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"8602:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2889,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:16"},"src":"8561:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:16"},"scope":3385,"src":"8443:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2979,"nodeType":"Block","src":"9405:834:16","statements":[{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"low","nameLocation":"9423:3:16","nodeType":"VariableDeclaration","scope":2979,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2911,"initialValue":{"hexValue":"30","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:16"},{"assignments":[2913],"declarations":[{"constant":false,"id":2913,"mutability":"mutable","name":"high","nameLocation":"9448:4:16","nodeType":"VariableDeclaration","scope":2979,"src":"9440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2916,"initialValue":{"expression":{"id":2914,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9455:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:16","memberName":"length","nodeType":"MemberAccess","src":"9455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"9482:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"9478:48:16","trueBody":{"id":2922,"nodeType":"Block","src":"9493:33:16","statements":[{"expression":{"hexValue":"30","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2907,"id":2921,"nodeType":"Return","src":"9507:8:16"}]}},{"body":{"id":2955,"nodeType":"Block","src":"9555:423:16","statements":[{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"mid","nameLocation":"9577:3:16","nodeType":"VariableDeclaration","scope":2955,"src":"9569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2934,"initialValue":{"arguments":[{"id":2931,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"9596:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2932,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"9601:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2929,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"9583:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"9583:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2936,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9844:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2937,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3260,3286,3312],"referencedDeclaration":3312,"src":"9831:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3644_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3643,"src":"9831:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2940,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"9864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2953,"nodeType":"Block","src":"9922:46:16","statements":[{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2947,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"9940:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9946:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"9940:13:16"}]},"id":2954,"nodeType":"IfStatement","src":"9827:141:16","trueBody":{"id":2946,"nodeType":"Block","src":"9873:43:16","statements":[{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2942,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"9891:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2943,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"nodeType":"ExpressionStatement","src":"9891:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"9543:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2925,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"9549:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"nodeType":"WhileStatement","src":"9536:442:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2961,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10119:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10126:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2960,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3260,3286,3312],"referencedDeclaration":3312,"src":"10106:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3644_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3643,"src":"10106:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2967,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2977,"nodeType":"Block","src":"10198:35:16","statements":[{"expression":{"id":2975,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10219:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2907,"id":2976,"nodeType":"Return","src":"10212:10:16"}]},"id":2978,"nodeType":"IfStatement","src":"10091:142:16","trueBody":{"id":2974,"nodeType":"Block","src":"10153:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10174:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2907,"id":2973,"nodeType":"Return","src":"10167:14:16"}]}}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"8686:616:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:16","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"array","nameLocation":"9349:5:16","nodeType":"VariableDeclaration","scope":2980,"src":"9331:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2900,"nodeType":"ArrayTypeName","src":"9331:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"element","nameLocation":"9364:7:16","nodeType":"VariableDeclaration","scope":2980,"src":"9356:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:16"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"9396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:16"},"scope":3385,"src":"9307:932:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3043,"nodeType":"Block","src":"10756:709:16","statements":[{"assignments":[2992],"declarations":[{"constant":false,"id":2992,"mutability":"mutable","name":"low","nameLocation":"10774:3:16","nodeType":"VariableDeclaration","scope":3043,"src":"10766:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2994,"initialValue":{"hexValue":"30","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:16"},{"assignments":[2996],"declarations":[{"constant":false,"id":2996,"mutability":"mutable","name":"high","nameLocation":"10799:4:16","nodeType":"VariableDeclaration","scope":3043,"src":"10791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2999,"initialValue":{"expression":{"id":2997,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"10806:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:16","memberName":"length","nodeType":"MemberAccess","src":"10806:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10833:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"10829:48:16","trueBody":{"id":3005,"nodeType":"Block","src":"10844:33:16","statements":[{"expression":{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2990,"id":3004,"nodeType":"Return","src":"10858:8:16"}]}},{"body":{"id":3039,"nodeType":"Block","src":"10906:532:16","statements":[{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"mid","nameLocation":"10928:3:16","nodeType":"VariableDeclaration","scope":3039,"src":"10920:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"arguments":[{"id":3014,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"10947:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3015,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3012,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"10934:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"10934:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3019,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"11195:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3020,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"11202:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3260,3286,3312],"referencedDeclaration":3312,"src":"11182:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3644_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3643,"src":"11182:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3023,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"11215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3037,"nodeType":"Block","src":"11385:43:16","statements":[{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3033,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"11403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3034,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"11410:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ExpressionStatement","src":"11403:10:16"}]},"id":3038,"nodeType":"IfStatement","src":"11178:250:16","trueBody":{"id":3032,"nodeType":"Block","src":"11224:155:16","statements":[{"id":3031,"nodeType":"UncheckedBlock","src":"11301:64:16","statements":[{"expression":{"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"11339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"nodeType":"ExpressionStatement","src":"11333:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"10894:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3008,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10900:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3040,"nodeType":"WhileStatement","src":"10887:551:16"},{"expression":{"id":3041,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11455:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2990,"id":3042,"nodeType":"Return","src":"11448:10:16"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"10245:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3044,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:16","nodeType":"FunctionDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"array","nameLocation":"10700:5:16","nodeType":"VariableDeclaration","scope":3044,"src":"10682:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ArrayTypeName","src":"10682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"element","nameLocation":"10715:7:16","nodeType":"VariableDeclaration","scope":3044,"src":"10707:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:16"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3044,"src":"10747:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:16"},"scope":3385,"src":"10662:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3107,"nodeType":"Block","src":"11982:709:16","statements":[{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"low","nameLocation":"12000:3:16","nodeType":"VariableDeclaration","scope":3107,"src":"11992:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"hexValue":"30","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:16"},{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"high","nameLocation":"12025:4:16","nodeType":"VariableDeclaration","scope":3107,"src":"12017:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"expression":{"id":3061,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"12032:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:16","memberName":"length","nodeType":"MemberAccess","src":"12032:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12059:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"nodeType":"IfStatement","src":"12055:48:16","trueBody":{"id":3069,"nodeType":"Block","src":"12070:33:16","statements":[{"expression":{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3054,"id":3068,"nodeType":"Return","src":"12084:8:16"}]}},{"body":{"id":3103,"nodeType":"Block","src":"12132:532:16","statements":[{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"mid","nameLocation":"12154:3:16","nodeType":"VariableDeclaration","scope":3103,"src":"12146:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"arguments":[{"id":3078,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12173:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3079,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12178:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3076,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"12160:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"12160:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3083,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"12421:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3084,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12428:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3082,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3260,3286,3312],"referencedDeclaration":3312,"src":"12408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3644_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3643,"src":"12408:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3087,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"12441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3101,"nodeType":"Block","src":"12499:155:16","statements":[{"id":3100,"nodeType":"UncheckedBlock","src":"12576:64:16","statements":[{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12608:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12614:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"12608:13:16"}]}]},"id":3102,"nodeType":"IfStatement","src":"12404:250:16","trueBody":{"id":3093,"nodeType":"Block","src":"12450:43:16","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12468:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3090,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12475:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"12468:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12120:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3072,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3104,"nodeType":"WhileStatement","src":"12113:551:16"},{"expression":{"id":3105,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3054,"id":3106,"nodeType":"Return","src":"12674:10:16"}]},"documentation":{"id":3045,"nodeType":"StructuredDocumentation","src":"11471:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3108,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:16","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"array","nameLocation":"11926:5:16","nodeType":"VariableDeclaration","scope":3108,"src":"11908:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ArrayTypeName","src":"11908:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"element","nameLocation":"11941:7:16","nodeType":"VariableDeclaration","scope":3108,"src":"11933:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:16"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3108,"src":"11973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:16"},"scope":3385,"src":"11888:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"12875:709:16","statements":[{"assignments":[3120],"declarations":[{"constant":false,"id":3120,"mutability":"mutable","name":"low","nameLocation":"12893:3:16","nodeType":"VariableDeclaration","scope":3170,"src":"12885:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3122,"initialValue":{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:16"},{"assignments":[3124],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"high","nameLocation":"12918:4:16","nodeType":"VariableDeclaration","scope":3170,"src":"12910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3127,"initialValue":{"expression":{"id":3125,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"12925:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:16","memberName":"length","nodeType":"MemberAccess","src":"12925:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"12952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3134,"nodeType":"IfStatement","src":"12948:48:16","trueBody":{"id":3133,"nodeType":"Block","src":"12963:33:16","statements":[{"expression":{"hexValue":"30","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3118,"id":3132,"nodeType":"Return","src":"12977:8:16"}]}},{"body":{"id":3166,"nodeType":"Block","src":"13025:532:16","statements":[{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"mid","nameLocation":"13047:3:16","nodeType":"VariableDeclaration","scope":3166,"src":"13039:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3145,"initialValue":{"arguments":[{"id":3142,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"13066:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"13071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3140,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"13053:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"13053:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3147,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"13320:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3148,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13327:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3146,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3325,3338,3351],"referencedDeclaration":3351,"src":"13301:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3150,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"13334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3164,"nodeType":"Block","src":"13504:43:16","statements":[{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"13522:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3161,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13529:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"13522:10:16"}]},"id":3165,"nodeType":"IfStatement","src":"13297:250:16","trueBody":{"id":3159,"nodeType":"Block","src":"13343:155:16","statements":[{"id":3158,"nodeType":"UncheckedBlock","src":"13420:64:16","statements":[{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3152,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"13452:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"13452:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"13013:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3136,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"13019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3167,"nodeType":"WhileStatement","src":"13006:551:16"},{"expression":{"id":3168,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"13574:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3118,"id":3169,"nodeType":"Return","src":"13567:10:16"}]},"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"12697:74:16","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:16","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"array","nameLocation":"12819:5:16","nodeType":"VariableDeclaration","scope":3171,"src":"12802:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ArrayTypeName","src":"12802:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"element","nameLocation":"12834:7:16","nodeType":"VariableDeclaration","scope":3171,"src":"12826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:16"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"12866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:16"},"scope":3385,"src":"12776:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"13768:709:16","statements":[{"assignments":[3183],"declarations":[{"constant":false,"id":3183,"mutability":"mutable","name":"low","nameLocation":"13786:3:16","nodeType":"VariableDeclaration","scope":3233,"src":"13778:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3185,"initialValue":{"hexValue":"30","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:16"},{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"high","nameLocation":"13811:4:16","nodeType":"VariableDeclaration","scope":3233,"src":"13803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3190,"initialValue":{"expression":{"id":3188,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"13818:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13845:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3197,"nodeType":"IfStatement","src":"13841:48:16","trueBody":{"id":3196,"nodeType":"Block","src":"13856:33:16","statements":[{"expression":{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3181,"id":3195,"nodeType":"Return","src":"13870:8:16"}]}},{"body":{"id":3229,"nodeType":"Block","src":"13918:532:16","statements":[{"assignments":[3202],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"mid","nameLocation":"13940:3:16","nodeType":"VariableDeclaration","scope":3229,"src":"13932:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3208,"initialValue":{"arguments":[{"id":3205,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"13959:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3206,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13964:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3203,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"13946:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"13946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3210,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"14213:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3211,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14220:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3209,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3325,3338,3351],"referencedDeclaration":3351,"src":"14194:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3213,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"14227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3227,"nodeType":"Block","src":"14285:155:16","statements":[{"id":3226,"nodeType":"UncheckedBlock","src":"14362:64:16","statements":[{"expression":{"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"14394:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14400:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3225,"nodeType":"ExpressionStatement","src":"14394:13:16"}]}]},"id":3228,"nodeType":"IfStatement","src":"14190:250:16","trueBody":{"id":3219,"nodeType":"Block","src":"14236:43:16","statements":[{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"14254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14261:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"14254:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"13906:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3199,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13912:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"WhileStatement","src":"13899:551:16"},{"expression":{"id":3231,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"14467:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3181,"id":3232,"nodeType":"Return","src":"14460:10:16"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"13590:74:16","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:16","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"array","nameLocation":"13712:5:16","nodeType":"VariableDeclaration","scope":3234,"src":"13695:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ArrayTypeName","src":"13695:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"element","nameLocation":"13727:7:16","nodeType":"VariableDeclaration","scope":3234,"src":"13719:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:16"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"13759:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:16"},"scope":3385,"src":"13669:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"14793:167:16","statements":[{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"slot","nameLocation":"14811:4:16","nodeType":"VariableDeclaration","scope":3259,"src":"14803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3248,"nodeType":"VariableDeclarationStatement","src":"14803:12:16"},{"AST":{"nativeSrc":"14850:40:16","nodeType":"YulBlock","src":"14850:40:16","statements":[{"nativeSrc":"14864:16:16","nodeType":"YulAssignment","src":"14864:16:16","value":{"name":"arr.slot","nativeSrc":"14872:8:16","nodeType":"YulIdentifier","src":"14872:8:16"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:16","nodeType":"YulIdentifier","src":"14864:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3238,"isOffset":false,"isSlot":true,"src":"14872:8:16","suffix":"slot","valueSize":1},{"declaration":3247,"isOffset":false,"isSlot":false,"src":"14864:4:16","valueSize":1}],"flags":["memory-safe"],"id":3249,"nodeType":"InlineAssembly","src":"14825:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3254,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"14932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3250,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"14906:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"14906:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"14906:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:16","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3664,"src":"14906:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3635_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3635_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3245,"id":3258,"nodeType":"Return","src":"14899:54:16"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"14483:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:16","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"arr","nameLocation":"14719:3:16","nodeType":"VariableDeclaration","scope":3260,"src":"14701:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3237,"nodeType":"ArrayTypeName","src":"14701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"pos","nameLocation":"14732:3:16","nodeType":"VariableDeclaration","scope":3260,"src":"14724:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:16"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"14760:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3635_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:16","14772:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3635,"src":"14760:23:16"},"referencedDeclaration":3635,"src":"14760:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3635_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:16"},"scope":3385,"src":"14679:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3285,"nodeType":"Block","src":"15276:167:16","statements":[{"assignments":[3273],"declarations":[{"constant":false,"id":3273,"mutability":"mutable","name":"slot","nameLocation":"15294:4:16","nodeType":"VariableDeclaration","scope":3285,"src":"15286:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3274,"nodeType":"VariableDeclarationStatement","src":"15286:12:16"},{"AST":{"nativeSrc":"15333:40:16","nodeType":"YulBlock","src":"15333:40:16","statements":[{"nativeSrc":"15347:16:16","nodeType":"YulAssignment","src":"15347:16:16","value":{"name":"arr.slot","nativeSrc":"15355:8:16","nodeType":"YulIdentifier","src":"15355:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:16","nodeType":"YulIdentifier","src":"15347:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3264,"isOffset":false,"isSlot":true,"src":"15355:8:16","suffix":"slot","valueSize":1},{"declaration":3273,"isOffset":false,"isSlot":false,"src":"15347:4:16","valueSize":1}],"flags":["memory-safe"],"id":3275,"nodeType":"InlineAssembly","src":"15308:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3280,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"15415:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3276,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"15389:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"15389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"15389:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:16","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3686,"src":"15389:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3641_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3641_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3271,"id":3284,"nodeType":"Return","src":"15382:54:16"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"14966:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3286,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:16","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"arr","nameLocation":"15202:3:16","nodeType":"VariableDeclaration","scope":3286,"src":"15184:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3263,"nodeType":"ArrayTypeName","src":"15184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"pos","nameLocation":"15215:3:16","nodeType":"VariableDeclaration","scope":3286,"src":"15207:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:16"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3286,"src":"15243:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3641_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:16","15255:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"15243:23:16"},"referencedDeclaration":3641,"src":"15243:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3641_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:16"},"scope":3385,"src":"15162:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"15759:167:16","statements":[{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"slot","nameLocation":"15777:4:16","nodeType":"VariableDeclaration","scope":3311,"src":"15769:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3300,"nodeType":"VariableDeclarationStatement","src":"15769:12:16"},{"AST":{"nativeSrc":"15816:40:16","nodeType":"YulBlock","src":"15816:40:16","statements":[{"nativeSrc":"15830:16:16","nodeType":"YulAssignment","src":"15830:16:16","value":{"name":"arr.slot","nativeSrc":"15838:8:16","nodeType":"YulIdentifier","src":"15838:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:16","nodeType":"YulIdentifier","src":"15830:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3290,"isOffset":false,"isSlot":true,"src":"15838:8:16","suffix":"slot","valueSize":1},{"declaration":3299,"isOffset":false,"isSlot":false,"src":"15830:4:16","valueSize":1}],"flags":["memory-safe"],"id":3301,"nodeType":"InlineAssembly","src":"15791:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3306,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"15898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3302,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"15872:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"15872:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"15872:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:16","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3697,"src":"15872:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3644_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3297,"id":3310,"nodeType":"Return","src":"15865:54:16"}]},"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"15449:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:16","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"arr","nameLocation":"15685:3:16","nodeType":"VariableDeclaration","scope":3312,"src":"15667:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"nodeType":"ArrayTypeName","src":"15667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"pos","nameLocation":"15698:3:16","nodeType":"VariableDeclaration","scope":3312,"src":"15690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:16"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3312,"src":"15726:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3295,"nodeType":"UserDefinedTypeName","pathNode":{"id":3294,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:16","15738:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"15726:23:16"},"referencedDeclaration":3644,"src":"15726:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:16"},"scope":3385,"src":"15645:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"16227:98:16","statements":[{"AST":{"nativeSrc":"16246:73:16","nodeType":"YulBlock","src":"16246:73:16","statements":[{"nativeSrc":"16260:49:16","nodeType":"YulAssignment","src":"16260:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:16","nodeType":"YulIdentifier","src":"16281:3:16"},{"kind":"number","nativeSrc":"16286:4:16","nodeType":"YulLiteral","src":"16286:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:16","nodeType":"YulIdentifier","src":"16277:3:16"},"nativeSrc":"16277:14:16","nodeType":"YulFunctionCall","src":"16277:14:16"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:16","nodeType":"YulIdentifier","src":"16297:3:16"},{"kind":"number","nativeSrc":"16302:4:16","nodeType":"YulLiteral","src":"16302:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:16","nodeType":"YulIdentifier","src":"16293:3:16"},"nativeSrc":"16293:14:16","nodeType":"YulFunctionCall","src":"16293:14:16"}],"functionName":{"name":"add","nativeSrc":"16273:3:16","nodeType":"YulIdentifier","src":"16273:3:16"},"nativeSrc":"16273:35:16","nodeType":"YulFunctionCall","src":"16273:35:16"}],"functionName":{"name":"mload","nativeSrc":"16267:5:16","nodeType":"YulIdentifier","src":"16267:5:16"},"nativeSrc":"16267:42:16","nodeType":"YulFunctionCall","src":"16267:42:16"},"variableNames":[{"name":"res","nativeSrc":"16260:3:16","nodeType":"YulIdentifier","src":"16260:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3316,"isOffset":false,"isSlot":false,"src":"16281:3:16","valueSize":1},{"declaration":3318,"isOffset":false,"isSlot":false,"src":"16297:3:16","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"16260:3:16","valueSize":1}],"id":3323,"nodeType":"InlineAssembly","src":"16237:82:16"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"15932:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:16","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"arr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":3325,"src":"16156:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3315,"nodeType":"ArrayTypeName","src":"16156:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"pos","nameLocation":"16186:3:16","nodeType":"VariableDeclaration","scope":3325,"src":"16178:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:16"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"res","nameLocation":"16222:3:16","nodeType":"VariableDeclaration","scope":3325,"src":"16214:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:16"},"scope":3385,"src":"16128:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3337,"nodeType":"Block","src":"16626:98:16","statements":[{"AST":{"nativeSrc":"16645:73:16","nodeType":"YulBlock","src":"16645:73:16","statements":[{"nativeSrc":"16659:49:16","nodeType":"YulAssignment","src":"16659:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:16","nodeType":"YulIdentifier","src":"16680:3:16"},{"kind":"number","nativeSrc":"16685:4:16","nodeType":"YulLiteral","src":"16685:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:16","nodeType":"YulIdentifier","src":"16676:3:16"},"nativeSrc":"16676:14:16","nodeType":"YulFunctionCall","src":"16676:14:16"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:16","nodeType":"YulIdentifier","src":"16696:3:16"},{"kind":"number","nativeSrc":"16701:4:16","nodeType":"YulLiteral","src":"16701:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:16","nodeType":"YulIdentifier","src":"16692:3:16"},"nativeSrc":"16692:14:16","nodeType":"YulFunctionCall","src":"16692:14:16"}],"functionName":{"name":"add","nativeSrc":"16672:3:16","nodeType":"YulIdentifier","src":"16672:3:16"},"nativeSrc":"16672:35:16","nodeType":"YulFunctionCall","src":"16672:35:16"}],"functionName":{"name":"mload","nativeSrc":"16666:5:16","nodeType":"YulIdentifier","src":"16666:5:16"},"nativeSrc":"16666:42:16","nodeType":"YulFunctionCall","src":"16666:42:16"},"variableNames":[{"name":"res","nativeSrc":"16659:3:16","nodeType":"YulIdentifier","src":"16659:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"16680:3:16","valueSize":1},{"declaration":3331,"isOffset":false,"isSlot":false,"src":"16696:3:16","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"16659:3:16","valueSize":1}],"id":3336,"nodeType":"InlineAssembly","src":"16636:82:16"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"16331:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:16","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"arr","nameLocation":"16572:3:16","nodeType":"VariableDeclaration","scope":3338,"src":"16555:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3328,"nodeType":"ArrayTypeName","src":"16555:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"pos","nameLocation":"16585:3:16","nodeType":"VariableDeclaration","scope":3338,"src":"16577:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:16"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"res","nameLocation":"16621:3:16","nodeType":"VariableDeclaration","scope":3338,"src":"16613:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:16"},"scope":3385,"src":"16527:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3350,"nodeType":"Block","src":"17025:98:16","statements":[{"AST":{"nativeSrc":"17044:73:16","nodeType":"YulBlock","src":"17044:73:16","statements":[{"nativeSrc":"17058:49:16","nodeType":"YulAssignment","src":"17058:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:16","nodeType":"YulIdentifier","src":"17079:3:16"},{"kind":"number","nativeSrc":"17084:4:16","nodeType":"YulLiteral","src":"17084:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:16","nodeType":"YulIdentifier","src":"17075:3:16"},"nativeSrc":"17075:14:16","nodeType":"YulFunctionCall","src":"17075:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:16","nodeType":"YulIdentifier","src":"17095:3:16"},{"kind":"number","nativeSrc":"17100:4:16","nodeType":"YulLiteral","src":"17100:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:16","nodeType":"YulIdentifier","src":"17091:3:16"},"nativeSrc":"17091:14:16","nodeType":"YulFunctionCall","src":"17091:14:16"}],"functionName":{"name":"add","nativeSrc":"17071:3:16","nodeType":"YulIdentifier","src":"17071:3:16"},"nativeSrc":"17071:35:16","nodeType":"YulFunctionCall","src":"17071:35:16"}],"functionName":{"name":"mload","nativeSrc":"17065:5:16","nodeType":"YulIdentifier","src":"17065:5:16"},"nativeSrc":"17065:42:16","nodeType":"YulFunctionCall","src":"17065:42:16"},"variableNames":[{"name":"res","nativeSrc":"17058:3:16","nodeType":"YulIdentifier","src":"17058:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3342,"isOffset":false,"isSlot":false,"src":"17079:3:16","valueSize":1},{"declaration":3344,"isOffset":false,"isSlot":false,"src":"17095:3:16","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"17058:3:16","valueSize":1}],"id":3349,"nodeType":"InlineAssembly","src":"17035:82:16"}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"16730:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:16","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"arr","nameLocation":"16971:3:16","nodeType":"VariableDeclaration","scope":3351,"src":"16954:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3341,"nodeType":"ArrayTypeName","src":"16954:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"pos","nameLocation":"16984:3:16","nodeType":"VariableDeclaration","scope":3351,"src":"16976:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:16"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"res","nameLocation":"17020:3:16","nodeType":"VariableDeclaration","scope":3351,"src":"17012:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:16"},"scope":3385,"src":"16926:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"17439:88:16","statements":[{"AST":{"nativeSrc":"17474:47:16","nodeType":"YulBlock","src":"17474:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:16","nodeType":"YulIdentifier","src":"17495:10:16"},{"name":"len","nativeSrc":"17507:3:16","nodeType":"YulIdentifier","src":"17507:3:16"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:16","nodeType":"YulIdentifier","src":"17488:6:16"},"nativeSrc":"17488:23:16","nodeType":"YulFunctionCall","src":"17488:23:16"},"nativeSrc":"17488:23:16","nodeType":"YulExpressionStatement","src":"17488:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3355,"isOffset":false,"isSlot":true,"src":"17495:10:16","suffix":"slot","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"17507:3:16","valueSize":1}],"flags":["memory-safe"],"id":3360,"nodeType":"InlineAssembly","src":"17449:72:16"}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"17129:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:16","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"array","nameLocation":"17410:5:16","nodeType":"VariableDeclaration","scope":3362,"src":"17392:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3354,"nodeType":"ArrayTypeName","src":"17392:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"len","nameLocation":"17425:3:16","nodeType":"VariableDeclaration","scope":3362,"src":"17417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:16"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"17439:0:16"},"scope":3385,"src":"17367:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"17843:88:16","statements":[{"AST":{"nativeSrc":"17878:47:16","nodeType":"YulBlock","src":"17878:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:16","nodeType":"YulIdentifier","src":"17899:10:16"},{"name":"len","nativeSrc":"17911:3:16","nodeType":"YulIdentifier","src":"17911:3:16"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:16","nodeType":"YulIdentifier","src":"17892:6:16"},"nativeSrc":"17892:23:16","nodeType":"YulFunctionCall","src":"17892:23:16"},"nativeSrc":"17892:23:16","nodeType":"YulExpressionStatement","src":"17892:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3366,"isOffset":false,"isSlot":true,"src":"17899:10:16","suffix":"slot","valueSize":1},{"declaration":3368,"isOffset":false,"isSlot":false,"src":"17911:3:16","valueSize":1}],"flags":["memory-safe"],"id":3371,"nodeType":"InlineAssembly","src":"17853:72:16"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"17533:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:16","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"array","nameLocation":"17814:5:16","nodeType":"VariableDeclaration","scope":3373,"src":"17796:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3365,"nodeType":"ArrayTypeName","src":"17796:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"len","nameLocation":"17829:3:16","nodeType":"VariableDeclaration","scope":3373,"src":"17821:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:16"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[],"src":"17843:0:16"},"scope":3385,"src":"17771:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3383,"nodeType":"Block","src":"18247:88:16","statements":[{"AST":{"nativeSrc":"18282:47:16","nodeType":"YulBlock","src":"18282:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:16","nodeType":"YulIdentifier","src":"18303:10:16"},{"name":"len","nativeSrc":"18315:3:16","nodeType":"YulIdentifier","src":"18315:3:16"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:16","nodeType":"YulIdentifier","src":"18296:6:16"},"nativeSrc":"18296:23:16","nodeType":"YulFunctionCall","src":"18296:23:16"},"nativeSrc":"18296:23:16","nodeType":"YulExpressionStatement","src":"18296:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3377,"isOffset":false,"isSlot":true,"src":"18303:10:16","suffix":"slot","valueSize":1},{"declaration":3379,"isOffset":false,"isSlot":false,"src":"18315:3:16","valueSize":1}],"flags":["memory-safe"],"id":3382,"nodeType":"InlineAssembly","src":"18257:72:16"}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"17937:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:16","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"array","nameLocation":"18218:5:16","nodeType":"VariableDeclaration","scope":3384,"src":"18200:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ArrayTypeName","src":"18200:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"len","nameLocation":"18233:3:16","nodeType":"VariableDeclaration","scope":3384,"src":"18225:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:16"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[],"src":"18247:0:16"},"scope":3385,"src":"18175:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3386,"src":"459:17878:16","usedErrors":[],"usedEvents":[]}],"src":"183:18155:16"},"id":16},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3417]},"id":3418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3387,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"131:92:17","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3417,"linearizedBaseContracts":[3417],"name":"Comparators","nameLocation":"232:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3401,"nodeType":"Block","src":"313:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"334:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3396,"id":3400,"nodeType":"Return","src":"323:12:17"}]},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:17","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"a","nameLocation":"270:1:17","nodeType":"VariableDeclaration","scope":3402,"src":"262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"b","nameLocation":"281:1:17","nodeType":"VariableDeclaration","scope":3402,"src":"273:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:17"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"307:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3394,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:17"},"scope":3417,"src":"250:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3415,"nodeType":"Block","src":"411:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"432:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3410,"id":3414,"nodeType":"Return","src":"421:12:17"}]},"id":3416,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:17","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"a","nameLocation":"368:1:17","nodeType":"VariableDeclaration","scope":3416,"src":"360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"b","nameLocation":"379:1:17","nodeType":"VariableDeclaration","scope":3416,"src":"371:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:17"},"returnParameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3416,"src":"405:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3408,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:17"},"scope":3417,"src":"348:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3418,"src":"224:218:17","usedErrors":[],"usedEvents":[]}],"src":"105:338:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3447]},"id":3448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3419,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"127:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3447,"linearizedBaseContracts":[3447],"name":"Context","nameLocation":"642:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3428,"nodeType":"Block","src":"718:34:18","statements":[{"expression":{"expression":{"id":3425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:18","memberName":"sender","nodeType":"MemberAccess","src":"735:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3424,"id":3427,"nodeType":"Return","src":"728:17:18"}]},"id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:18","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[],"src":"675:2:18"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"709:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3422,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:18"},"scope":3447,"src":"656:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"825:32:18","statements":[{"expression":{"expression":{"id":3434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:18","memberName":"data","nodeType":"MemberAccess","src":"842:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3433,"id":3436,"nodeType":"Return","src":"835:15:18"}]},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:18","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[],"src":"775:2:18"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3438,"src":"809:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3431,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:18"},"scope":3447,"src":"758:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"935:25:18","statements":[{"expression":{"hexValue":"30","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3442,"id":3444,"nodeType":"Return","src":"945:8:18"}]},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:18","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[],"src":"892:2:18"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3446,"src":"926:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:18"},"scope":3447,"src":"863:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3448,"src":"624:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:862:18"},"id":18},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3499]},"id":3500,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"125:489:19","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3499,"linearizedBaseContracts":[3499],"name":"Panic","nameLocation":"665:5:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"677:36:19","text":"@dev generic / unspecified error"},"id":3454,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:19","nodeType":"VariableDeclaration","scope":3499,"src":"718:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"764:37:19","text":"@dev used by the assert() builtin"},"id":3458,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:19","nodeType":"VariableDeclaration","scope":3499,"src":"806:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"851:41:19","text":"@dev arithmetic underflow or overflow"},"id":3462,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:19","nodeType":"VariableDeclaration","scope":3499,"src":"897:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:19","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"950:35:19","text":"@dev division or modulo by zero"},"id":3466,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:19","nodeType":"VariableDeclaration","scope":3499,"src":"990:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"1045:30:19","text":"@dev enum conversion error"},"id":3470,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:19","nodeType":"VariableDeclaration","scope":3499,"src":"1080:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:19","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"1140:36:19","text":"@dev invalid encoding in storage"},"id":3474,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:19","nodeType":"VariableDeclaration","scope":3499,"src":"1181:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"1242:24:19","text":"@dev empty array pop"},"id":3478,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:19","nodeType":"VariableDeclaration","scope":3499,"src":"1271:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:19","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"1325:35:19","text":"@dev array out of bounds access"},"id":3482,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:19","nodeType":"VariableDeclaration","scope":3499,"src":"1365:52:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:19","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"1423:65:19","text":"@dev resource error (too large allocation or too large array)"},"id":3486,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:19","nodeType":"VariableDeclaration","scope":3499,"src":"1493:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"1546:42:19","text":"@dev calling invalid internal function"},"id":3490,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:19","nodeType":"VariableDeclaration","scope":3499,"src":"1593:58:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:19","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"1819:151:19","statements":[{"AST":{"nativeSrc":"1854:110:19","nodeType":"YulBlock","src":"1854:110:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:19","nodeType":"YulLiteral","src":"1875:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:19","nodeType":"YulLiteral","src":"1881:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:19","nodeType":"YulIdentifier","src":"1868:6:19"},"nativeSrc":"1868:24:19","nodeType":"YulFunctionCall","src":"1868:24:19"},"nativeSrc":"1868:24:19","nodeType":"YulExpressionStatement","src":"1868:24:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:19","nodeType":"YulLiteral","src":"1912:4:19","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:19","nodeType":"YulIdentifier","src":"1918:4:19"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:19","nodeType":"YulIdentifier","src":"1905:6:19"},"nativeSrc":"1905:18:19","nodeType":"YulFunctionCall","src":"1905:18:19"},"nativeSrc":"1905:18:19","nodeType":"YulExpressionStatement","src":"1905:18:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:19","nodeType":"YulLiteral","src":"1943:4:19","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:19","nodeType":"YulLiteral","src":"1949:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:19","nodeType":"YulIdentifier","src":"1936:6:19"},"nativeSrc":"1936:18:19","nodeType":"YulFunctionCall","src":"1936:18:19"},"nativeSrc":"1936:18:19","nodeType":"YulExpressionStatement","src":"1936:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3493,"isOffset":false,"isSlot":false,"src":"1918:4:19","valueSize":1}],"flags":["memory-safe"],"id":3496,"nodeType":"InlineAssembly","src":"1829:135:19"}]},"documentation":{"id":3491,"nodeType":"StructuredDocumentation","src":"1658:113:19","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:19","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"code","nameLocation":"1799:4:19","nodeType":"VariableDeclaration","scope":3498,"src":"1791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:19"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"1819:0:19"},"scope":3499,"src":"1776:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3500,"src":"657:1315:19","usedErrors":[],"usedEvents":[]}],"src":"99:1874:19"},"id":19},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3629]},"id":3630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3501,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"225:1373:20","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3629,"linearizedBaseContracts":[3629],"name":"SlotDerivation","nameLocation":"1607:14:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3511,"nodeType":"Block","src":"1790:194:20","statements":[{"AST":{"nativeSrc":"1825:153:20","nodeType":"YulBlock","src":"1825:153:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:20","nodeType":"YulLiteral","src":"1846:4:20","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:20","nodeType":"YulIdentifier","src":"1870:9:20"},{"kind":"number","nativeSrc":"1881:4:20","nodeType":"YulLiteral","src":"1881:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:20","nodeType":"YulIdentifier","src":"1866:3:20"},"nativeSrc":"1866:20:20","nodeType":"YulFunctionCall","src":"1866:20:20"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:20","nodeType":"YulIdentifier","src":"1894:9:20"}],"functionName":{"name":"mload","nativeSrc":"1888:5:20","nodeType":"YulIdentifier","src":"1888:5:20"},"nativeSrc":"1888:16:20","nodeType":"YulFunctionCall","src":"1888:16:20"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:20","nodeType":"YulIdentifier","src":"1856:9:20"},"nativeSrc":"1856:49:20","nodeType":"YulFunctionCall","src":"1856:49:20"},{"kind":"number","nativeSrc":"1907:1:20","nodeType":"YulLiteral","src":"1907:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:20","nodeType":"YulIdentifier","src":"1852:3:20"},"nativeSrc":"1852:57:20","nodeType":"YulFunctionCall","src":"1852:57:20"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:20","nodeType":"YulIdentifier","src":"1839:6:20"},"nativeSrc":"1839:71:20","nodeType":"YulFunctionCall","src":"1839:71:20"},"nativeSrc":"1839:71:20","nodeType":"YulExpressionStatement","src":"1839:71:20"},{"nativeSrc":"1923:45:20","nodeType":"YulAssignment","src":"1923:45:20","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:20","nodeType":"YulLiteral","src":"1945:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:20","nodeType":"YulLiteral","src":"1951:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:20","nodeType":"YulIdentifier","src":"1935:9:20"},"nativeSrc":"1935:21:20","nodeType":"YulFunctionCall","src":"1935:21:20"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:20","nodeType":"YulLiteral","src":"1962:4:20","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:20","nodeType":"YulIdentifier","src":"1958:3:20"},"nativeSrc":"1958:9:20","nodeType":"YulFunctionCall","src":"1958:9:20"}],"functionName":{"name":"and","nativeSrc":"1931:3:20","nodeType":"YulIdentifier","src":"1931:3:20"},"nativeSrc":"1931:37:20","nodeType":"YulFunctionCall","src":"1931:37:20"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:20","nodeType":"YulIdentifier","src":"1923:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3505,"isOffset":false,"isSlot":false,"src":"1870:9:20","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"1894:9:20","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"1923:4:20","valueSize":1}],"flags":["memory-safe"],"id":3510,"nodeType":"InlineAssembly","src":"1800:178:20"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"1628:74:20","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:20","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:20","nodeType":"VariableDeclaration","scope":3512,"src":"1728:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3504,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:20"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"slot","nameLocation":"1784:4:20","nodeType":"VariableDeclaration","scope":3512,"src":"1776:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:20"},"scope":3629,"src":"1707:277:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"2176:86:20","statements":[{"id":3532,"nodeType":"UncheckedBlock","src":"2186:70:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3526,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"2233:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3528,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"2241:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:20","typeDescriptions":{}}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3521,"id":3531,"nodeType":"Return","src":"2210:35:20"}]}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"1990:99:20","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3534,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:20","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"slot","nameLocation":"2118:4:20","nodeType":"VariableDeclaration","scope":3534,"src":"2110:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"pos","nameLocation":"2132:3:20","nodeType":"VariableDeclaration","scope":3534,"src":"2124:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:20"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"result","nameLocation":"2168:6:20","nodeType":"VariableDeclaration","scope":3534,"src":"2160:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:20"},"scope":3629,"src":"2094:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"2465:127:20","statements":[{"AST":{"nativeSrc":"2500:86:20","nodeType":"YulBlock","src":"2500:86:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:20","nodeType":"YulLiteral","src":"2521:4:20","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:20","nodeType":"YulIdentifier","src":"2527:4:20"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:20","nodeType":"YulIdentifier","src":"2514:6:20"},"nativeSrc":"2514:18:20","nodeType":"YulFunctionCall","src":"2514:18:20"},"nativeSrc":"2514:18:20","nodeType":"YulExpressionStatement","src":"2514:18:20"},{"nativeSrc":"2545:31:20","nodeType":"YulAssignment","src":"2545:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:20","nodeType":"YulLiteral","src":"2565:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:20","nodeType":"YulLiteral","src":"2571:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:20","nodeType":"YulIdentifier","src":"2555:9:20"},"nativeSrc":"2555:21:20","nodeType":"YulFunctionCall","src":"2555:21:20"},"variableNames":[{"name":"result","nativeSrc":"2545:6:20","nodeType":"YulIdentifier","src":"2545:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3540,"isOffset":false,"isSlot":false,"src":"2545:6:20","valueSize":1},{"declaration":3537,"isOffset":false,"isSlot":false,"src":"2527:4:20","valueSize":1}],"flags":["memory-safe"],"id":3542,"nodeType":"InlineAssembly","src":"2475:111:20"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"2268:118:20","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:20","nodeType":"FunctionDefinition","parameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"slot","nameLocation":"2420:4:20","nodeType":"VariableDeclaration","scope":3544,"src":"2412:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:20"},"returnParameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"result","nameLocation":"2457:6:20","nodeType":"VariableDeclaration","scope":3544,"src":"2449:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:20"},"scope":3629,"src":"2391:201:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3555,"nodeType":"Block","src":"2770:179:20","statements":[{"AST":{"nativeSrc":"2805:138:20","nodeType":"YulBlock","src":"2805:138:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:20","nodeType":"YulLiteral","src":"2826:4:20","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:20","nodeType":"YulIdentifier","src":"2836:3:20"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:20","nodeType":"YulLiteral","src":"2845:2:20","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:20","nodeType":"YulLiteral","src":"2853:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:20","nodeType":"YulIdentifier","src":"2849:3:20"},"nativeSrc":"2849:6:20","nodeType":"YulFunctionCall","src":"2849:6:20"}],"functionName":{"name":"shr","nativeSrc":"2841:3:20","nodeType":"YulIdentifier","src":"2841:3:20"},"nativeSrc":"2841:15:20","nodeType":"YulFunctionCall","src":"2841:15:20"}],"functionName":{"name":"and","nativeSrc":"2832:3:20","nodeType":"YulIdentifier","src":"2832:3:20"},"nativeSrc":"2832:25:20","nodeType":"YulFunctionCall","src":"2832:25:20"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:20","nodeType":"YulIdentifier","src":"2819:6:20"},"nativeSrc":"2819:39:20","nodeType":"YulFunctionCall","src":"2819:39:20"},"nativeSrc":"2819:39:20","nodeType":"YulExpressionStatement","src":"2819:39:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:20","nodeType":"YulLiteral","src":"2878:4:20","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:20","nodeType":"YulIdentifier","src":"2884:4:20"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:20","nodeType":"YulIdentifier","src":"2871:6:20"},"nativeSrc":"2871:18:20","nodeType":"YulFunctionCall","src":"2871:18:20"},"nativeSrc":"2871:18:20","nodeType":"YulExpressionStatement","src":"2871:18:20"},{"nativeSrc":"2902:31:20","nodeType":"YulAssignment","src":"2902:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:20","nodeType":"YulLiteral","src":"2922:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:20","nodeType":"YulLiteral","src":"2928:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:20","nodeType":"YulIdentifier","src":"2912:9:20"},"nativeSrc":"2912:21:20","nodeType":"YulFunctionCall","src":"2912:21:20"},"variableNames":[{"name":"result","nativeSrc":"2902:6:20","nodeType":"YulIdentifier","src":"2902:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3549,"isOffset":false,"isSlot":false,"src":"2836:3:20","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"2902:6:20","valueSize":1},{"declaration":3547,"isOffset":false,"isSlot":false,"src":"2884:4:20","valueSize":1}],"flags":["memory-safe"],"id":3554,"nodeType":"InlineAssembly","src":"2780:163:20"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"2598:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:20","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"slot","nameLocation":"2712:4:20","nodeType":"VariableDeclaration","scope":3556,"src":"2704:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"key","nameLocation":"2726:3:20","nodeType":"VariableDeclaration","scope":3556,"src":"2718:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:20"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"result","nameLocation":"2762:6:20","nodeType":"VariableDeclaration","scope":3556,"src":"2754:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:20"},"scope":3629,"src":"2681:268:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"3124:173:20","statements":[{"AST":{"nativeSrc":"3159:132:20","nodeType":"YulBlock","src":"3159:132:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:20","nodeType":"YulLiteral","src":"3180:4:20","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:20","nodeType":"YulIdentifier","src":"3200:3:20"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:20","nodeType":"YulIdentifier","src":"3193:6:20"},"nativeSrc":"3193:11:20","nodeType":"YulFunctionCall","src":"3193:11:20"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:20","nodeType":"YulIdentifier","src":"3186:6:20"},"nativeSrc":"3186:19:20","nodeType":"YulFunctionCall","src":"3186:19:20"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:20","nodeType":"YulIdentifier","src":"3173:6:20"},"nativeSrc":"3173:33:20","nodeType":"YulFunctionCall","src":"3173:33:20"},"nativeSrc":"3173:33:20","nodeType":"YulExpressionStatement","src":"3173:33:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:20","nodeType":"YulLiteral","src":"3226:4:20","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:20","nodeType":"YulIdentifier","src":"3232:4:20"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:20","nodeType":"YulIdentifier","src":"3219:6:20"},"nativeSrc":"3219:18:20","nodeType":"YulFunctionCall","src":"3219:18:20"},"nativeSrc":"3219:18:20","nodeType":"YulExpressionStatement","src":"3219:18:20"},{"nativeSrc":"3250:31:20","nodeType":"YulAssignment","src":"3250:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:20","nodeType":"YulLiteral","src":"3270:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:20","nodeType":"YulLiteral","src":"3276:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:20","nodeType":"YulIdentifier","src":"3260:9:20"},"nativeSrc":"3260:21:20","nodeType":"YulFunctionCall","src":"3260:21:20"},"variableNames":[{"name":"result","nativeSrc":"3250:6:20","nodeType":"YulIdentifier","src":"3250:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3561,"isOffset":false,"isSlot":false,"src":"3200:3:20","valueSize":1},{"declaration":3564,"isOffset":false,"isSlot":false,"src":"3250:6:20","valueSize":1},{"declaration":3559,"isOffset":false,"isSlot":false,"src":"3232:4:20","valueSize":1}],"flags":["memory-safe"],"id":3566,"nodeType":"InlineAssembly","src":"3134:157:20"}]},"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"2955:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:20","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"slot","nameLocation":"3069:4:20","nodeType":"VariableDeclaration","scope":3568,"src":"3061:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"key","nameLocation":"3080:3:20","nodeType":"VariableDeclaration","scope":3568,"src":"3075:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3560,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:20"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"result","nameLocation":"3116:6:20","nodeType":"VariableDeclaration","scope":3568,"src":"3108:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:20"},"scope":3629,"src":"3038:259:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"3475:157:20","statements":[{"AST":{"nativeSrc":"3510:116:20","nodeType":"YulBlock","src":"3510:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:20","nodeType":"YulLiteral","src":"3531:4:20","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:20","nodeType":"YulIdentifier","src":"3537:3:20"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:20","nodeType":"YulIdentifier","src":"3524:6:20"},"nativeSrc":"3524:17:20","nodeType":"YulFunctionCall","src":"3524:17:20"},"nativeSrc":"3524:17:20","nodeType":"YulExpressionStatement","src":"3524:17:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:20","nodeType":"YulLiteral","src":"3561:4:20","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:20","nodeType":"YulIdentifier","src":"3567:4:20"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:20","nodeType":"YulIdentifier","src":"3554:6:20"},"nativeSrc":"3554:18:20","nodeType":"YulFunctionCall","src":"3554:18:20"},"nativeSrc":"3554:18:20","nodeType":"YulExpressionStatement","src":"3554:18:20"},{"nativeSrc":"3585:31:20","nodeType":"YulAssignment","src":"3585:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:20","nodeType":"YulLiteral","src":"3605:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:20","nodeType":"YulLiteral","src":"3611:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:20","nodeType":"YulIdentifier","src":"3595:9:20"},"nativeSrc":"3595:21:20","nodeType":"YulFunctionCall","src":"3595:21:20"},"variableNames":[{"name":"result","nativeSrc":"3585:6:20","nodeType":"YulIdentifier","src":"3585:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3573,"isOffset":false,"isSlot":false,"src":"3537:3:20","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"3585:6:20","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"3567:4:20","valueSize":1}],"flags":["memory-safe"],"id":3578,"nodeType":"InlineAssembly","src":"3485:141:20"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"3303:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:20","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"slot","nameLocation":"3417:4:20","nodeType":"VariableDeclaration","scope":3580,"src":"3409:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"key","nameLocation":"3431:3:20","nodeType":"VariableDeclaration","scope":3580,"src":"3423:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:20"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"result","nameLocation":"3467:6:20","nodeType":"VariableDeclaration","scope":3580,"src":"3459:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:20"},"scope":3629,"src":"3386:246:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"3810:157:20","statements":[{"AST":{"nativeSrc":"3845:116:20","nodeType":"YulBlock","src":"3845:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:20","nodeType":"YulLiteral","src":"3866:4:20","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:20","nodeType":"YulIdentifier","src":"3872:3:20"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:20","nodeType":"YulIdentifier","src":"3859:6:20"},"nativeSrc":"3859:17:20","nodeType":"YulFunctionCall","src":"3859:17:20"},"nativeSrc":"3859:17:20","nodeType":"YulExpressionStatement","src":"3859:17:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:20","nodeType":"YulLiteral","src":"3896:4:20","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:20","nodeType":"YulIdentifier","src":"3902:4:20"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:20","nodeType":"YulIdentifier","src":"3889:6:20"},"nativeSrc":"3889:18:20","nodeType":"YulFunctionCall","src":"3889:18:20"},"nativeSrc":"3889:18:20","nodeType":"YulExpressionStatement","src":"3889:18:20"},{"nativeSrc":"3920:31:20","nodeType":"YulAssignment","src":"3920:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:20","nodeType":"YulLiteral","src":"3940:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:20","nodeType":"YulLiteral","src":"3946:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:20","nodeType":"YulIdentifier","src":"3930:9:20"},"nativeSrc":"3930:21:20","nodeType":"YulFunctionCall","src":"3930:21:20"},"variableNames":[{"name":"result","nativeSrc":"3920:6:20","nodeType":"YulIdentifier","src":"3920:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3585,"isOffset":false,"isSlot":false,"src":"3872:3:20","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"3920:6:20","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"3902:4:20","valueSize":1}],"flags":["memory-safe"],"id":3590,"nodeType":"InlineAssembly","src":"3820:141:20"}]},"documentation":{"id":3581,"nodeType":"StructuredDocumentation","src":"3638:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:20","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"slot","nameLocation":"3752:4:20","nodeType":"VariableDeclaration","scope":3592,"src":"3744:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"key","nameLocation":"3766:3:20","nodeType":"VariableDeclaration","scope":3592,"src":"3758:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:20"},"returnParameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"result","nameLocation":"3802:6:20","nodeType":"VariableDeclaration","scope":3592,"src":"3794:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:20"},"scope":3629,"src":"3721:246:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"4144:157:20","statements":[{"AST":{"nativeSrc":"4179:116:20","nodeType":"YulBlock","src":"4179:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:20","nodeType":"YulLiteral","src":"4200:4:20","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:20","nodeType":"YulIdentifier","src":"4206:3:20"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:20","nodeType":"YulIdentifier","src":"4193:6:20"},"nativeSrc":"4193:17:20","nodeType":"YulFunctionCall","src":"4193:17:20"},"nativeSrc":"4193:17:20","nodeType":"YulExpressionStatement","src":"4193:17:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:20","nodeType":"YulLiteral","src":"4230:4:20","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:20","nodeType":"YulIdentifier","src":"4236:4:20"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:20","nodeType":"YulIdentifier","src":"4223:6:20"},"nativeSrc":"4223:18:20","nodeType":"YulFunctionCall","src":"4223:18:20"},"nativeSrc":"4223:18:20","nodeType":"YulExpressionStatement","src":"4223:18:20"},{"nativeSrc":"4254:31:20","nodeType":"YulAssignment","src":"4254:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:20","nodeType":"YulLiteral","src":"4274:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:20","nodeType":"YulLiteral","src":"4280:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:20","nodeType":"YulIdentifier","src":"4264:9:20"},"nativeSrc":"4264:21:20","nodeType":"YulFunctionCall","src":"4264:21:20"},"variableNames":[{"name":"result","nativeSrc":"4254:6:20","nodeType":"YulIdentifier","src":"4254:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3597,"isOffset":false,"isSlot":false,"src":"4206:3:20","valueSize":1},{"declaration":3600,"isOffset":false,"isSlot":false,"src":"4254:6:20","valueSize":1},{"declaration":3595,"isOffset":false,"isSlot":false,"src":"4236:4:20","valueSize":1}],"flags":["memory-safe"],"id":3602,"nodeType":"InlineAssembly","src":"4154:141:20"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"3973:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:20","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"slot","nameLocation":"4087:4:20","nodeType":"VariableDeclaration","scope":3604,"src":"4079:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"key","nameLocation":"4100:3:20","nodeType":"VariableDeclaration","scope":3604,"src":"4093:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3596,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:20"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"result","nameLocation":"4136:6:20","nodeType":"VariableDeclaration","scope":3604,"src":"4128:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:20"},"scope":3629,"src":"4056:245:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3615,"nodeType":"Block","src":"4485:326:20","statements":[{"AST":{"nativeSrc":"4520:285:20","nodeType":"YulBlock","src":"4520:285:20","statements":[{"nativeSrc":"4534:24:20","nodeType":"YulVariableDeclaration","src":"4534:24:20","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:20","nodeType":"YulIdentifier","src":"4554:3:20"}],"functionName":{"name":"mload","nativeSrc":"4548:5:20","nodeType":"YulIdentifier","src":"4548:5:20"},"nativeSrc":"4548:10:20","nodeType":"YulFunctionCall","src":"4548:10:20"},"variables":[{"name":"length","nativeSrc":"4538:6:20","nodeType":"YulTypedName","src":"4538:6:20","type":""}]},{"nativeSrc":"4571:27:20","nodeType":"YulVariableDeclaration","src":"4571:27:20","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:20","nodeType":"YulIdentifier","src":"4588:3:20"},{"kind":"number","nativeSrc":"4593:4:20","nodeType":"YulLiteral","src":"4593:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:20","nodeType":"YulIdentifier","src":"4584:3:20"},"nativeSrc":"4584:14:20","nodeType":"YulFunctionCall","src":"4584:14:20"},"variables":[{"name":"begin","nativeSrc":"4575:5:20","nodeType":"YulTypedName","src":"4575:5:20","type":""}]},{"nativeSrc":"4611:29:20","nodeType":"YulVariableDeclaration","src":"4611:29:20","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:20","nodeType":"YulIdentifier","src":"4626:5:20"},{"name":"length","nativeSrc":"4633:6:20","nodeType":"YulIdentifier","src":"4633:6:20"}],"functionName":{"name":"add","nativeSrc":"4622:3:20","nodeType":"YulIdentifier","src":"4622:3:20"},"nativeSrc":"4622:18:20","nodeType":"YulFunctionCall","src":"4622:18:20"},"variables":[{"name":"end","nativeSrc":"4615:3:20","nodeType":"YulTypedName","src":"4615:3:20","type":""}]},{"nativeSrc":"4653:23:20","nodeType":"YulVariableDeclaration","src":"4653:23:20","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:20","nodeType":"YulIdentifier","src":"4672:3:20"}],"functionName":{"name":"mload","nativeSrc":"4666:5:20","nodeType":"YulIdentifier","src":"4666:5:20"},"nativeSrc":"4666:10:20","nodeType":"YulFunctionCall","src":"4666:10:20"},"variables":[{"name":"cache","nativeSrc":"4657:5:20","nodeType":"YulTypedName","src":"4657:5:20","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:20","nodeType":"YulIdentifier","src":"4696:3:20"},{"name":"slot","nativeSrc":"4701:4:20","nodeType":"YulIdentifier","src":"4701:4:20"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:20","nodeType":"YulIdentifier","src":"4689:6:20"},"nativeSrc":"4689:17:20","nodeType":"YulFunctionCall","src":"4689:17:20"},"nativeSrc":"4689:17:20","nodeType":"YulExpressionStatement","src":"4689:17:20"},{"nativeSrc":"4719:45:20","nodeType":"YulAssignment","src":"4719:45:20","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:20","nodeType":"YulIdentifier","src":"4739:5:20"},{"arguments":[{"name":"length","nativeSrc":"4750:6:20","nodeType":"YulIdentifier","src":"4750:6:20"},{"kind":"number","nativeSrc":"4758:4:20","nodeType":"YulLiteral","src":"4758:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:20","nodeType":"YulIdentifier","src":"4746:3:20"},"nativeSrc":"4746:17:20","nodeType":"YulFunctionCall","src":"4746:17:20"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:20","nodeType":"YulIdentifier","src":"4729:9:20"},"nativeSrc":"4729:35:20","nodeType":"YulFunctionCall","src":"4729:35:20"},"variableNames":[{"name":"result","nativeSrc":"4719:6:20","nodeType":"YulIdentifier","src":"4719:6:20"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:20","nodeType":"YulIdentifier","src":"4784:3:20"},{"name":"cache","nativeSrc":"4789:5:20","nodeType":"YulIdentifier","src":"4789:5:20"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:20","nodeType":"YulIdentifier","src":"4777:6:20"},"nativeSrc":"4777:18:20","nodeType":"YulFunctionCall","src":"4777:18:20"},"nativeSrc":"4777:18:20","nodeType":"YulExpressionStatement","src":"4777:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3609,"isOffset":false,"isSlot":false,"src":"4554:3:20","valueSize":1},{"declaration":3609,"isOffset":false,"isSlot":false,"src":"4588:3:20","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"4719:6:20","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"4701:4:20","valueSize":1}],"flags":["memory-safe"],"id":3614,"nodeType":"InlineAssembly","src":"4495:310:20"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"4307:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:20","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"slot","nameLocation":"4421:4:20","nodeType":"VariableDeclaration","scope":3616,"src":"4413:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"key","nameLocation":"4441:3:20","nodeType":"VariableDeclaration","scope":3616,"src":"4427:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3608,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:20"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"result","nameLocation":"4477:6:20","nodeType":"VariableDeclaration","scope":3616,"src":"4469:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:20"},"scope":3629,"src":"4390:421:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"4994:326:20","statements":[{"AST":{"nativeSrc":"5029:285:20","nodeType":"YulBlock","src":"5029:285:20","statements":[{"nativeSrc":"5043:24:20","nodeType":"YulVariableDeclaration","src":"5043:24:20","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:20","nodeType":"YulIdentifier","src":"5063:3:20"}],"functionName":{"name":"mload","nativeSrc":"5057:5:20","nodeType":"YulIdentifier","src":"5057:5:20"},"nativeSrc":"5057:10:20","nodeType":"YulFunctionCall","src":"5057:10:20"},"variables":[{"name":"length","nativeSrc":"5047:6:20","nodeType":"YulTypedName","src":"5047:6:20","type":""}]},{"nativeSrc":"5080:27:20","nodeType":"YulVariableDeclaration","src":"5080:27:20","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:20","nodeType":"YulIdentifier","src":"5097:3:20"},{"kind":"number","nativeSrc":"5102:4:20","nodeType":"YulLiteral","src":"5102:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:20","nodeType":"YulIdentifier","src":"5093:3:20"},"nativeSrc":"5093:14:20","nodeType":"YulFunctionCall","src":"5093:14:20"},"variables":[{"name":"begin","nativeSrc":"5084:5:20","nodeType":"YulTypedName","src":"5084:5:20","type":""}]},{"nativeSrc":"5120:29:20","nodeType":"YulVariableDeclaration","src":"5120:29:20","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:20","nodeType":"YulIdentifier","src":"5135:5:20"},{"name":"length","nativeSrc":"5142:6:20","nodeType":"YulIdentifier","src":"5142:6:20"}],"functionName":{"name":"add","nativeSrc":"5131:3:20","nodeType":"YulIdentifier","src":"5131:3:20"},"nativeSrc":"5131:18:20","nodeType":"YulFunctionCall","src":"5131:18:20"},"variables":[{"name":"end","nativeSrc":"5124:3:20","nodeType":"YulTypedName","src":"5124:3:20","type":""}]},{"nativeSrc":"5162:23:20","nodeType":"YulVariableDeclaration","src":"5162:23:20","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:20","nodeType":"YulIdentifier","src":"5181:3:20"}],"functionName":{"name":"mload","nativeSrc":"5175:5:20","nodeType":"YulIdentifier","src":"5175:5:20"},"nativeSrc":"5175:10:20","nodeType":"YulFunctionCall","src":"5175:10:20"},"variables":[{"name":"cache","nativeSrc":"5166:5:20","nodeType":"YulTypedName","src":"5166:5:20","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:20","nodeType":"YulIdentifier","src":"5205:3:20"},{"name":"slot","nativeSrc":"5210:4:20","nodeType":"YulIdentifier","src":"5210:4:20"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:20","nodeType":"YulIdentifier","src":"5198:6:20"},"nativeSrc":"5198:17:20","nodeType":"YulFunctionCall","src":"5198:17:20"},"nativeSrc":"5198:17:20","nodeType":"YulExpressionStatement","src":"5198:17:20"},{"nativeSrc":"5228:45:20","nodeType":"YulAssignment","src":"5228:45:20","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:20","nodeType":"YulIdentifier","src":"5248:5:20"},{"arguments":[{"name":"length","nativeSrc":"5259:6:20","nodeType":"YulIdentifier","src":"5259:6:20"},{"kind":"number","nativeSrc":"5267:4:20","nodeType":"YulLiteral","src":"5267:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:20","nodeType":"YulIdentifier","src":"5255:3:20"},"nativeSrc":"5255:17:20","nodeType":"YulFunctionCall","src":"5255:17:20"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:20","nodeType":"YulIdentifier","src":"5238:9:20"},"nativeSrc":"5238:35:20","nodeType":"YulFunctionCall","src":"5238:35:20"},"variableNames":[{"name":"result","nativeSrc":"5228:6:20","nodeType":"YulIdentifier","src":"5228:6:20"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:20","nodeType":"YulIdentifier","src":"5293:3:20"},{"name":"cache","nativeSrc":"5298:5:20","nodeType":"YulIdentifier","src":"5298:5:20"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:20","nodeType":"YulIdentifier","src":"5286:6:20"},"nativeSrc":"5286:18:20","nodeType":"YulFunctionCall","src":"5286:18:20"},"nativeSrc":"5286:18:20","nodeType":"YulExpressionStatement","src":"5286:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3621,"isOffset":false,"isSlot":false,"src":"5063:3:20","valueSize":1},{"declaration":3621,"isOffset":false,"isSlot":false,"src":"5097:3:20","valueSize":1},{"declaration":3624,"isOffset":false,"isSlot":false,"src":"5228:6:20","valueSize":1},{"declaration":3619,"isOffset":false,"isSlot":false,"src":"5210:4:20","valueSize":1}],"flags":["memory-safe"],"id":3626,"nodeType":"InlineAssembly","src":"5004:310:20"}]},"documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"4817:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:20","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"slot","nameLocation":"4931:4:20","nodeType":"VariableDeclaration","scope":3628,"src":"4923:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"key","nameLocation":"4950:3:20","nodeType":"VariableDeclaration","scope":3628,"src":"4937:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3620,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:20"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"result","nameLocation":"4986:6:20","nodeType":"VariableDeclaration","scope":3628,"src":"4978:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:20"},"scope":3629,"src":"4900:420:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3630,"src":"1599:3723:20","usedErrors":[],"usedEvents":[]}],"src":"199:5124:20"},"id":20},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3753]},"id":3754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3631,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"219:1187:21","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3753,"linearizedBaseContracts":[3753],"name":"StorageSlot","nameLocation":"1415:11:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3635,"members":[{"constant":false,"id":3634,"mutability":"mutable","name":"value","nameLocation":"1470:5:21","nodeType":"VariableDeclaration","scope":3635,"src":"1462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3633,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:21","nodeType":"StructDefinition","scope":3753,"src":"1433:49:21","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3638,"members":[{"constant":false,"id":3637,"mutability":"mutable","name":"value","nameLocation":"1522:5:21","nodeType":"VariableDeclaration","scope":3638,"src":"1517:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3636,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:21","nodeType":"StructDefinition","scope":3753,"src":"1488:46:21","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3641,"members":[{"constant":false,"id":3640,"mutability":"mutable","name":"value","nameLocation":"1577:5:21","nodeType":"VariableDeclaration","scope":3641,"src":"1569:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:21","nodeType":"StructDefinition","scope":3753,"src":"1540:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3644,"members":[{"constant":false,"id":3643,"mutability":"mutable","name":"value","nameLocation":"1632:5:21","nodeType":"VariableDeclaration","scope":3644,"src":"1624:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:21","nodeType":"StructDefinition","scope":3753,"src":"1595:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3647,"members":[{"constant":false,"id":3646,"mutability":"mutable","name":"value","nameLocation":"1685:5:21","nodeType":"VariableDeclaration","scope":3647,"src":"1678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3645,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:21","nodeType":"StructDefinition","scope":3753,"src":"1650:47:21","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3650,"members":[{"constant":false,"id":3649,"mutability":"mutable","name":"value","nameLocation":"1738:5:21","nodeType":"VariableDeclaration","scope":3650,"src":"1731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3648,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:21","nodeType":"StructDefinition","scope":3753,"src":"1703:47:21","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3653,"members":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"1789:5:21","nodeType":"VariableDeclaration","scope":3653,"src":"1783:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3651,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:21","nodeType":"StructDefinition","scope":3753,"src":"1756:45:21","visibility":"public"},{"body":{"id":3663,"nodeType":"Block","src":"1983:79:21","statements":[{"AST":{"nativeSrc":"2018:38:21","nodeType":"YulBlock","src":"2018:38:21","statements":[{"nativeSrc":"2032:14:21","nodeType":"YulAssignment","src":"2032:14:21","value":{"name":"slot","nativeSrc":"2042:4:21","nodeType":"YulIdentifier","src":"2042:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:21","nodeType":"YulIdentifier","src":"2032:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3660,"isOffset":false,"isSlot":true,"src":"2032:6:21","suffix":"slot","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"2042:4:21","valueSize":1}],"flags":["memory-safe"],"id":3662,"nodeType":"InlineAssembly","src":"1993:63:21"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"1807:87:21","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:21","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"slot","nameLocation":"1931:4:21","nodeType":"VariableDeclaration","scope":3664,"src":"1923:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:21"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"r","nameLocation":"1980:1:21","nodeType":"VariableDeclaration","scope":3664,"src":"1960:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3635_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3659,"nodeType":"UserDefinedTypeName","pathNode":{"id":3658,"name":"AddressSlot","nameLocations":["1960:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3635,"src":"1960:11:21"},"referencedDeclaration":3635,"src":"1960:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3635_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:21"},"scope":3753,"src":"1899:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"2243:79:21","statements":[{"AST":{"nativeSrc":"2278:38:21","nodeType":"YulBlock","src":"2278:38:21","statements":[{"nativeSrc":"2292:14:21","nodeType":"YulAssignment","src":"2292:14:21","value":{"name":"slot","nativeSrc":"2302:4:21","nodeType":"YulIdentifier","src":"2302:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:21","nodeType":"YulIdentifier","src":"2292:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3671,"isOffset":false,"isSlot":true,"src":"2292:6:21","suffix":"slot","valueSize":1},{"declaration":3667,"isOffset":false,"isSlot":false,"src":"2302:4:21","valueSize":1}],"flags":["memory-safe"],"id":3673,"nodeType":"InlineAssembly","src":"2253:63:21"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"2068:86:21","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:21","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"slot","nameLocation":"2191:4:21","nodeType":"VariableDeclaration","scope":3675,"src":"2183:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:21"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"r","nameLocation":"2240:1:21","nodeType":"VariableDeclaration","scope":3675,"src":"2220:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3638_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3670,"nodeType":"UserDefinedTypeName","pathNode":{"id":3669,"name":"BooleanSlot","nameLocations":["2220:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3638,"src":"2220:11:21"},"referencedDeclaration":3638,"src":"2220:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3638_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:21"},"scope":3753,"src":"2159:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"2503:79:21","statements":[{"AST":{"nativeSrc":"2538:38:21","nodeType":"YulBlock","src":"2538:38:21","statements":[{"nativeSrc":"2552:14:21","nodeType":"YulAssignment","src":"2552:14:21","value":{"name":"slot","nativeSrc":"2562:4:21","nodeType":"YulIdentifier","src":"2562:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:21","nodeType":"YulIdentifier","src":"2552:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3682,"isOffset":false,"isSlot":true,"src":"2552:6:21","suffix":"slot","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"2562:4:21","valueSize":1}],"flags":["memory-safe"],"id":3684,"nodeType":"InlineAssembly","src":"2513:63:21"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"2328:86:21","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:21","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"slot","nameLocation":"2451:4:21","nodeType":"VariableDeclaration","scope":3686,"src":"2443:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:21"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"r","nameLocation":"2500:1:21","nodeType":"VariableDeclaration","scope":3686,"src":"2480:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3641_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3681,"nodeType":"UserDefinedTypeName","pathNode":{"id":3680,"name":"Bytes32Slot","nameLocations":["2480:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"2480:11:21"},"referencedDeclaration":3641,"src":"2480:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3641_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:21"},"scope":3753,"src":"2419:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"2763:79:21","statements":[{"AST":{"nativeSrc":"2798:38:21","nodeType":"YulBlock","src":"2798:38:21","statements":[{"nativeSrc":"2812:14:21","nodeType":"YulAssignment","src":"2812:14:21","value":{"name":"slot","nativeSrc":"2822:4:21","nodeType":"YulIdentifier","src":"2822:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:21","nodeType":"YulIdentifier","src":"2812:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3693,"isOffset":false,"isSlot":true,"src":"2812:6:21","suffix":"slot","valueSize":1},{"declaration":3689,"isOffset":false,"isSlot":false,"src":"2822:4:21","valueSize":1}],"flags":["memory-safe"],"id":3695,"nodeType":"InlineAssembly","src":"2773:63:21"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"2588:86:21","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:21","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"slot","nameLocation":"2711:4:21","nodeType":"VariableDeclaration","scope":3697,"src":"2703:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:21"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"r","nameLocation":"2760:1:21","nodeType":"VariableDeclaration","scope":3697,"src":"2740:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3692,"nodeType":"UserDefinedTypeName","pathNode":{"id":3691,"name":"Uint256Slot","nameLocations":["2740:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"2740:11:21"},"referencedDeclaration":3644,"src":"2740:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3644_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:21"},"scope":3753,"src":"2679:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3707,"nodeType":"Block","src":"3020:79:21","statements":[{"AST":{"nativeSrc":"3055:38:21","nodeType":"YulBlock","src":"3055:38:21","statements":[{"nativeSrc":"3069:14:21","nodeType":"YulAssignment","src":"3069:14:21","value":{"name":"slot","nativeSrc":"3079:4:21","nodeType":"YulIdentifier","src":"3079:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:21","nodeType":"YulIdentifier","src":"3069:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3704,"isOffset":false,"isSlot":true,"src":"3069:6:21","suffix":"slot","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"3079:4:21","valueSize":1}],"flags":["memory-safe"],"id":3706,"nodeType":"InlineAssembly","src":"3030:63:21"}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"2848:85:21","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3708,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:21","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"slot","nameLocation":"2969:4:21","nodeType":"VariableDeclaration","scope":3708,"src":"2961:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:21"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"r","nameLocation":"3017:1:21","nodeType":"VariableDeclaration","scope":3708,"src":"2998:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3647_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3703,"nodeType":"UserDefinedTypeName","pathNode":{"id":3702,"name":"Int256Slot","nameLocations":["2998:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3647,"src":"2998:10:21"},"referencedDeclaration":3647,"src":"2998:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3647_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:21"},"scope":3753,"src":"2938:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3718,"nodeType":"Block","src":"3277:79:21","statements":[{"AST":{"nativeSrc":"3312:38:21","nodeType":"YulBlock","src":"3312:38:21","statements":[{"nativeSrc":"3326:14:21","nodeType":"YulAssignment","src":"3326:14:21","value":{"name":"slot","nativeSrc":"3336:4:21","nodeType":"YulIdentifier","src":"3336:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:21","nodeType":"YulIdentifier","src":"3326:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3715,"isOffset":false,"isSlot":true,"src":"3326:6:21","suffix":"slot","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"3336:4:21","valueSize":1}],"flags":["memory-safe"],"id":3717,"nodeType":"InlineAssembly","src":"3287:63:21"}]},"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"3105:85:21","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3719,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:21","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"slot","nameLocation":"3226:4:21","nodeType":"VariableDeclaration","scope":3719,"src":"3218:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:21"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"r","nameLocation":"3274:1:21","nodeType":"VariableDeclaration","scope":3719,"src":"3255:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3650_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3714,"nodeType":"UserDefinedTypeName","pathNode":{"id":3713,"name":"StringSlot","nameLocations":["3255:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3650,"src":"3255:10:21"},"referencedDeclaration":3650,"src":"3255:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3650_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:21"},"scope":3753,"src":"3195:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3729,"nodeType":"Block","src":"3558:85:21","statements":[{"AST":{"nativeSrc":"3593:44:21","nodeType":"YulBlock","src":"3593:44:21","statements":[{"nativeSrc":"3607:20:21","nodeType":"YulAssignment","src":"3607:20:21","value":{"name":"store.slot","nativeSrc":"3617:10:21","nodeType":"YulIdentifier","src":"3617:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:21","nodeType":"YulIdentifier","src":"3607:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3726,"isOffset":false,"isSlot":true,"src":"3607:6:21","suffix":"slot","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":true,"src":"3617:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3728,"nodeType":"InlineAssembly","src":"3568:69:21"}]},"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"3362:101:21","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3730,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:21","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"store","nameLocation":"3506:5:21","nodeType":"VariableDeclaration","scope":3730,"src":"3491:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3721,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:21"},"returnParameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"r","nameLocation":"3555:1:21","nodeType":"VariableDeclaration","scope":3730,"src":"3536:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3650_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3725,"nodeType":"UserDefinedTypeName","pathNode":{"id":3724,"name":"StringSlot","nameLocations":["3536:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3650,"src":"3536:10:21"},"referencedDeclaration":3650,"src":"3536:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3650_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:21"},"scope":3753,"src":"3468:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"3818:79:21","statements":[{"AST":{"nativeSrc":"3853:38:21","nodeType":"YulBlock","src":"3853:38:21","statements":[{"nativeSrc":"3867:14:21","nodeType":"YulAssignment","src":"3867:14:21","value":{"name":"slot","nativeSrc":"3877:4:21","nodeType":"YulIdentifier","src":"3877:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:21","nodeType":"YulIdentifier","src":"3867:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3737,"isOffset":false,"isSlot":true,"src":"3867:6:21","suffix":"slot","valueSize":1},{"declaration":3733,"isOffset":false,"isSlot":false,"src":"3877:4:21","valueSize":1}],"flags":["memory-safe"],"id":3739,"nodeType":"InlineAssembly","src":"3828:63:21"}]},"documentation":{"id":3731,"nodeType":"StructuredDocumentation","src":"3649:84:21","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:21","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"slot","nameLocation":"3768:4:21","nodeType":"VariableDeclaration","scope":3741,"src":"3760:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:21"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"r","nameLocation":"3815:1:21","nodeType":"VariableDeclaration","scope":3741,"src":"3797:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3653_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3736,"nodeType":"UserDefinedTypeName","pathNode":{"id":3735,"name":"BytesSlot","nameLocations":["3797:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"3797:9:21"},"referencedDeclaration":3653,"src":"3797:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3653_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:21"},"scope":3753,"src":"3738:159:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3751,"nodeType":"Block","src":"4094:85:21","statements":[{"AST":{"nativeSrc":"4129:44:21","nodeType":"YulBlock","src":"4129:44:21","statements":[{"nativeSrc":"4143:20:21","nodeType":"YulAssignment","src":"4143:20:21","value":{"name":"store.slot","nativeSrc":"4153:10:21","nodeType":"YulIdentifier","src":"4153:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:21","nodeType":"YulIdentifier","src":"4143:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3748,"isOffset":false,"isSlot":true,"src":"4143:6:21","suffix":"slot","valueSize":1},{"declaration":3744,"isOffset":false,"isSlot":true,"src":"4153:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3750,"nodeType":"InlineAssembly","src":"4104:69:21"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"3903:99:21","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3752,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:21","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"store","nameLocation":"4043:5:21","nodeType":"VariableDeclaration","scope":3752,"src":"4029:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3743,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:21"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"r","nameLocation":"4091:1:21","nodeType":"VariableDeclaration","scope":3752,"src":"4073:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3653_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3747,"nodeType":"UserDefinedTypeName","pathNode":{"id":3746,"name":"BytesSlot","nameLocations":["4073:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"4073:9:21"},"referencedDeclaration":3653,"src":"4073:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3653_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:21"},"scope":3753,"src":"4007:172:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3754,"src":"1407:2774:21","usedErrors":[],"usedEvents":[]}],"src":"193:3989:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7222],"SafeCast":[8987],"SignedMath":[9131],"Strings":[5155]},"id":5156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3755,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5156,"sourceUnit":7223,"src":"127:37:22","symbolAliases":[{"foreign":{"id":3756,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"135:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5156,"sourceUnit":8988,"src":"165:45:22","symbolAliases":[{"foreign":{"id":3758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5156,"sourceUnit":9132,"src":"211:49:22","symbolAliases":[{"foreign":{"id":3760,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"219:10:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"262:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":5155,"linearizedBaseContracts":[5155],"name":"Strings","nameLocation":"305:7:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3764,"libraryName":{"id":3763,"name":"SafeCast","nameLocations":["325:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":8987,"src":"325:8:22"},"nodeType":"UsingForDirective","src":"319:21:22"},{"constant":true,"id":3767,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:22","nodeType":"VariableDeclaration","scope":5155,"src":"346:56:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3765,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3770,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:22","nodeType":"VariableDeclaration","scope":5155,"src":"408:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3768,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3806,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:22","nodeType":"VariableDeclaration","scope":5155,"src":"456:302:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:22","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:22","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:22","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:22","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:22","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:22","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:22","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:22","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:22","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:22","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:22","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:22","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:22","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:22","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:22","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:22","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:22","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:22","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:22","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:22","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"778:81:22","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3813,"name":"StringsInsufficientHexLength","nameLocation":"870:28:22","nodeType":"ErrorDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"value","nameLocation":"907:5:22","nodeType":"VariableDeclaration","scope":3813,"src":"899:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"length","nameLocation":"922:6:22","nodeType":"VariableDeclaration","scope":3813,"src":"914:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:22"},"src":"864:66:22"},{"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"936:108:22","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3816,"name":"StringsInvalidChar","nameLocation":"1055:18:22","nodeType":"ErrorDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[],"src":"1073:2:22"},"src":"1049:27:22"},{"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"1082:84:22","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3819,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:22","nodeType":"ErrorDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"1204:2:22"},"src":"1171:36:22"},{"body":{"id":3866,"nodeType":"Block","src":"1379:561:22","statements":[{"id":3865,"nodeType":"UncheckedBlock","src":"1389:545:22","statements":[{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"length","nameLocation":"1421:6:22","nodeType":"VariableDeclaration","scope":3865,"src":"1413:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3835,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"1441:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3829,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"1430:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:22","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7054,"src":"1430:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:22"},{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:22","nodeType":"VariableDeclaration","scope":3865,"src":"1465:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3836,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3842,"initialValue":{"arguments":[{"id":3840,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"1499:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3838,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:22"},{"assignments":[3844],"declarations":[{"constant":false,"id":3844,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:22","nodeType":"VariableDeclaration","scope":3865,"src":"1520:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"nodeType":"VariableDeclarationStatement","src":"1520:11:22"},{"AST":{"nativeSrc":"1570:67:22","nodeType":"YulBlock","src":"1570:67:22","statements":[{"nativeSrc":"1588:35:22","nodeType":"YulAssignment","src":"1588:35:22","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:22","nodeType":"YulIdentifier","src":"1599:6:22"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:22","nodeType":"YulLiteral","src":"1611:2:22","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:22","nodeType":"YulIdentifier","src":"1615:6:22"}],"functionName":{"name":"add","nativeSrc":"1607:3:22","nodeType":"YulIdentifier","src":"1607:3:22"},"nativeSrc":"1607:15:22","nodeType":"YulFunctionCall","src":"1607:15:22"}],"functionName":{"name":"add","nativeSrc":"1595:3:22","nodeType":"YulIdentifier","src":"1595:3:22"},"nativeSrc":"1595:28:22","nodeType":"YulFunctionCall","src":"1595:28:22"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:22","nodeType":"YulIdentifier","src":"1588:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3837,"isOffset":false,"isSlot":false,"src":"1599:6:22","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"1615:6:22","valueSize":1},{"declaration":3844,"isOffset":false,"isSlot":false,"src":"1588:3:22","valueSize":1}],"flags":["memory-safe"],"id":3846,"nodeType":"InlineAssembly","src":"1545:92:22"},{"body":{"id":3861,"nodeType":"Block","src":"1663:234:22","statements":[{"expression":{"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:22","subExpression":{"id":3848,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1681:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"nodeType":"ExpressionStatement","src":"1681:5:22"},{"AST":{"nativeSrc":"1729:86:22","nodeType":"YulBlock","src":"1729:86:22","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:22","nodeType":"YulIdentifier","src":"1759:3:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:22","nodeType":"YulIdentifier","src":"1773:5:22"},{"kind":"number","nativeSrc":"1780:2:22","nodeType":"YulLiteral","src":"1780:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:22","nodeType":"YulIdentifier","src":"1769:3:22"},"nativeSrc":"1769:14:22","nodeType":"YulFunctionCall","src":"1769:14:22"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:22","nodeType":"YulIdentifier","src":"1785:10:22"}],"functionName":{"name":"byte","nativeSrc":"1764:4:22","nodeType":"YulIdentifier","src":"1764:4:22"},"nativeSrc":"1764:32:22","nodeType":"YulFunctionCall","src":"1764:32:22"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:22","nodeType":"YulIdentifier","src":"1751:7:22"},"nativeSrc":"1751:46:22","nodeType":"YulFunctionCall","src":"1751:46:22"},"nativeSrc":"1751:46:22","nodeType":"YulExpressionStatement","src":"1751:46:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3767,"isOffset":false,"isSlot":false,"src":"1785:10:22","valueSize":1},{"declaration":3844,"isOffset":false,"isSlot":false,"src":"1759:3:22","valueSize":1},{"declaration":3822,"isOffset":false,"isSlot":false,"src":"1773:5:22","valueSize":1}],"flags":["memory-safe"],"id":3851,"nodeType":"InlineAssembly","src":"1704:111:22"},{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"1832:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"1832:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"1865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"1861:21:22","trueBody":{"id":3859,"nodeType":"Break","src":"1877:5:22"}}]},"condition":{"hexValue":"74727565","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3862,"nodeType":"WhileStatement","src":"1650:247:22"},{"expression":{"id":3863,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"1917:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3826,"id":3864,"nodeType":"Return","src":"1910:13:22"}]}]},"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"1213:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:22","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"value","nameLocation":"1334:5:22","nodeType":"VariableDeclaration","scope":3867,"src":"1326:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:22"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"1364:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3824,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:22"},"scope":5155,"src":"1308:632:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3892,"nodeType":"Block","src":"2116:92:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"2147:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:22","trueExpression":{"hexValue":"2d","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"2193:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3885,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"2178:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9131_$","typeString":"type(library SignedMath)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:22","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9130,"src":"2178:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3884,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"2169:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3875,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:22","typeDescriptions":{}}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:22","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:22","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3874,"id":3891,"nodeType":"Return","src":"2126:75:22"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"1946:89:22","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:22","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"value","nameLocation":"2071:5:22","nodeType":"VariableDeclaration","scope":3893,"src":"2064:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3869,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:22"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"2101:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3872,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:22"},"scope":5155,"src":"2040:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3912,"nodeType":"Block","src":"2387:100:22","statements":[{"id":3911,"nodeType":"UncheckedBlock","src":"2397:84:22","statements":[{"expression":{"arguments":[{"id":3902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"2440:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"2459:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3903,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2447:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:22","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7165,"src":"2447:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3901,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3913,3996,4016],"referencedDeclaration":3996,"src":"2428:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3900,"id":3910,"nodeType":"Return","src":"2421:49:22"}]}]},"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"2214:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:22","nodeType":"FunctionDefinition","parameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"value","nameLocation":"2342:5:22","nodeType":"VariableDeclaration","scope":3913,"src":"2334:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:22"},"returnParameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"2372:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3898,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:22"},"scope":5155,"src":"2313:174:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3995,"nodeType":"Block","src":"2700:435:22","statements":[{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:22","nodeType":"VariableDeclaration","scope":3995,"src":"2710:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3926,"initialValue":{"id":3925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2731:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:22"},{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:22","nodeType":"VariableDeclaration","scope":3995,"src":"2746:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3927,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3937,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3932,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"2782:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3929,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:22"},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3938,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2803:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3940,"indexExpression":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3943,"nodeType":"ExpressionStatement","src":"2803:15:22"},{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3944,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2828:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3946,"indexExpression":{"hexValue":"31","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3949,"nodeType":"ExpressionStatement","src":"2828:15:22"},{"body":{"id":3978,"nodeType":"Block","src":"2898:95:22","statements":[{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3964,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2912:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3966,"indexExpression":{"id":3965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"2919:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3967,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2924:10:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3971,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2935:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3973,"nodeType":"ExpressionStatement","src":"2912:40:22"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3974,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2966:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ExpressionStatement","src":"2966:16:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"2886:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"initializationExpression":{"assignments":[3951],"declarations":[{"constant":false,"id":3951,"mutability":"mutable","name":"i","nameLocation":"2866:1:22","nodeType":"VariableDeclaration","scope":3979,"src":"2858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3953,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"2874:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:22","subExpression":{"id":3961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"2895:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3963,"nodeType":"ExpressionStatement","src":"2893:3:22"},"nodeType":"ForStatement","src":"2853:140:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"3006:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3989,"nodeType":"IfStatement","src":"3002:96:22","trueBody":{"id":3988,"nodeType":"Block","src":"3023:75:22","statements":[{"errorCall":{"arguments":[{"id":3984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"3073:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3985,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"3080:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3983,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3044:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3987,"nodeType":"RevertStatement","src":"3037:50:22"}]}},{"expression":{"arguments":[{"id":3992,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3121:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3990,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:22","typeDescriptions":{}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3922,"id":3994,"nodeType":"Return","src":"3107:21:22"}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"2493:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3996,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:22","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"value","nameLocation":"2639:5:22","nodeType":"VariableDeclaration","scope":3996,"src":"2631:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"length","nameLocation":"2654:6:22","nodeType":"VariableDeclaration","scope":3996,"src":"2646:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:22"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3996,"src":"2685:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3920,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:22"},"scope":5155,"src":"2610:525:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"3367:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4009,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"3412:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4007,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:22","typeDescriptions":{}}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:22","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4012,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"3420:14:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4004,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3913,3996,4016],"referencedDeclaration":3996,"src":"3384:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4003,"id":4014,"nodeType":"Return","src":"3377:58:22"}]},"documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"3141:148:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:22","nodeType":"FunctionDefinition","parameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"addr","nameLocation":"3323:4:22","nodeType":"VariableDeclaration","scope":4016,"src":"3315:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3998,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:22"},"returnParameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"3352:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4001,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:22"},"scope":5155,"src":"3294:148:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"3699:642:22","statements":[{"assignments":[4025],"declarations":[{"constant":false,"id":4025,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:22","nodeType":"VariableDeclaration","scope":4080,"src":"3709:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4024,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4032,"initialValue":{"arguments":[{"arguments":[{"id":4029,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"3749:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4028,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3913,3996,4016],"referencedDeclaration":4016,"src":"3737:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4026,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:22","typeDescriptions":{}}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:22"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:22","nodeType":"VariableDeclaration","scope":4080,"src":"3840:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4035,"nodeType":"VariableDeclarationStatement","src":"3840:17:22"},{"AST":{"nativeSrc":"3892:78:22","nodeType":"YulBlock","src":"3892:78:22","statements":[{"nativeSrc":"3906:54:22","nodeType":"YulAssignment","src":"3906:54:22","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:22","nodeType":"YulLiteral","src":"3923:2:22","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:22","nodeType":"YulIdentifier","src":"3941:6:22"},{"kind":"number","nativeSrc":"3949:4:22","nodeType":"YulLiteral","src":"3949:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:22","nodeType":"YulIdentifier","src":"3937:3:22"},"nativeSrc":"3937:17:22","nodeType":"YulFunctionCall","src":"3937:17:22"},{"kind":"number","nativeSrc":"3956:2:22","nodeType":"YulLiteral","src":"3956:2:22","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:22","nodeType":"YulIdentifier","src":"3927:9:22"},"nativeSrc":"3927:32:22","nodeType":"YulFunctionCall","src":"3927:32:22"}],"functionName":{"name":"shr","nativeSrc":"3919:3:22","nodeType":"YulIdentifier","src":"3919:3:22"},"nativeSrc":"3919:41:22","nodeType":"YulFunctionCall","src":"3919:41:22"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:22","nodeType":"YulIdentifier","src":"3906:9:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4025,"isOffset":false,"isSlot":false,"src":"3941:6:22","valueSize":1},{"declaration":4034,"isOffset":false,"isSlot":false,"src":"3906:9:22","valueSize":1}],"flags":["memory-safe"],"id":4036,"nodeType":"InlineAssembly","src":"3867:103:22"},{"body":{"id":4073,"nodeType":"Block","src":"4013:291:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4119:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4054,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"4148:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4056,"indexExpression":{"id":4055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4052,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:22","typeDescriptions":{}}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"IfStatement","src":"4115:150:22","trueBody":{"id":4067,"nodeType":"Block","src":"4165:100:22","statements":[{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4061,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"4233:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4063,"indexExpression":{"id":4062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4240:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4066,"nodeType":"ExpressionStatement","src":"4233:17:22"}]}},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4278:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"4278:15:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4001:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4074,"initializationExpression":{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"i","nameLocation":"3993:1:22","nodeType":"VariableDeclaration","scope":4074,"src":"3985:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4040,"initialValue":{"hexValue":"3431","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:22","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:22","subExpression":{"id":4044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4010:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"4008:3:22"},"nodeType":"ForStatement","src":"3980:324:22"},{"expression":{"arguments":[{"id":4077,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"4327:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4075,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:22","typeDescriptions":{}}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4023,"id":4079,"nodeType":"Return","src":"4313:21:22"}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"3448:165:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:22","nodeType":"FunctionDefinition","parameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"addr","nameLocation":"3655:4:22","nodeType":"VariableDeclaration","scope":4081,"src":"3647:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4018,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:22"},"returnParameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4081,"src":"3684:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4021,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:22"},"scope":5155,"src":"3618:723:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4117,"nodeType":"Block","src":"4496:104:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4519:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4091,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:22","typeDescriptions":{}}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:22","memberName":"length","nodeType":"MemberAccess","src":"4513:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"4538:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4096,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:22","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:22","memberName":"length","nodeType":"MemberAccess","src":"4532:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4567:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4103,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:22","typeDescriptions":{}}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4102,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"4590:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:22","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4108,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4090,"id":4116,"nodeType":"Return","src":"4506:87:22"}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"4347:66:22","text":" @dev Returns true if the two strings are equal."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:22","nodeType":"FunctionDefinition","parameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"a","nameLocation":"4447:1:22","nodeType":"VariableDeclaration","scope":4118,"src":"4433:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4083,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"b","nameLocation":"4464:1:22","nodeType":"VariableDeclaration","scope":4118,"src":"4450:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4085,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:22"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"4490:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4088,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:22"},"scope":5155,"src":"4418:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4136,"nodeType":"Block","src":"4897:64:22","statements":[{"expression":{"arguments":[{"id":4127,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"4924:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4131,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"4940:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4129,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:22","typeDescriptions":{}}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:22","memberName":"length","nodeType":"MemberAccess","src":"4934:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4126,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4137,4168],"referencedDeclaration":4168,"src":"4914:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4125,"id":4135,"nodeType":"Return","src":"4907:47:22"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"4606:214:22","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:22","nodeType":"FunctionDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"input","nameLocation":"4858:5:22","nodeType":"VariableDeclaration","scope":4137,"src":"4844:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4120,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:22"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4137,"src":"4888:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:22"},"scope":5155,"src":"4825:136:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"5366:153:22","statements":[{"assignments":[4150,4152],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"success","nameLocation":"5382:7:22","nodeType":"VariableDeclaration","scope":4167,"src":"5377:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4149,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"value","nameLocation":"5399:5:22","nodeType":"VariableDeclaration","scope":4167,"src":"5391:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4158,"initialValue":{"arguments":[{"id":4154,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"5421:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4155,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"5428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4156,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"5435:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4153,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4189,4226],"referencedDeclaration":4226,"src":"5408:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:22"},{"condition":{"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:22","subExpression":{"id":4159,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"5454:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"5449:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4161,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5470:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4163,"nodeType":"RevertStatement","src":"5463:27:22"}},{"expression":{"id":4165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"5507:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4148,"id":4166,"nodeType":"Return","src":"5500:12:22"}]},"documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"4967:294:22","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:22","nodeType":"FunctionDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"input","nameLocation":"5299:5:22","nodeType":"VariableDeclaration","scope":4168,"src":"5285:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4139,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"begin","nameLocation":"5314:5:22","nodeType":"VariableDeclaration","scope":4168,"src":"5306:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"end","nameLocation":"5329:3:22","nodeType":"VariableDeclaration","scope":4168,"src":"5321:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:22"},"returnParameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4168,"src":"5357:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:22"},"scope":5155,"src":"5266:253:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"5840:83:22","statements":[{"expression":{"arguments":[{"id":4179,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"5886:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4183,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"5902:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4181,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:22","typeDescriptions":{}}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:22","memberName":"length","nodeType":"MemberAccess","src":"5896:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4178,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"5857:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4177,"id":4187,"nodeType":"Return","src":"5850:66:22"}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"5525:215:22","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:22","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"input","nameLocation":"5781:5:22","nodeType":"VariableDeclaration","scope":4189,"src":"5767:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4170,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:22"},"returnParameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"success","nameLocation":"5816:7:22","nodeType":"VariableDeclaration","scope":4189,"src":"5811:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4173,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"value","nameLocation":"5833:5:22","nodeType":"VariableDeclaration","scope":4189,"src":"5825:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:22"},"scope":5155,"src":"5745:178:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4225,"nodeType":"Block","src":"6325:144:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"6339:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4206,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6351:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4204,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:22","typeDescriptions":{}}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:22","memberName":"length","nodeType":"MemberAccess","src":"6345:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"6368:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4211,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"6376:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4218,"nodeType":"IfStatement","src":"6335:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4202,"id":4217,"nodeType":"Return","src":"6381:17:22"}},{"expression":{"arguments":[{"id":4220,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6444:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4221,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"6451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4222,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"6458:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4219,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"6415:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4202,"id":4224,"nodeType":"Return","src":"6408:54:22"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"5929:238:22","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4226,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:22","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"input","nameLocation":"6217:5:22","nodeType":"VariableDeclaration","scope":4226,"src":"6203:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4191,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4194,"mutability":"mutable","name":"begin","nameLocation":"6240:5:22","nodeType":"VariableDeclaration","scope":4226,"src":"6232:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"end","nameLocation":"6263:3:22","nodeType":"VariableDeclaration","scope":4226,"src":"6255:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:22"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"success","nameLocation":"6301:7:22","nodeType":"VariableDeclaration","scope":4226,"src":"6296:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4198,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"value","nameLocation":"6318:5:22","nodeType":"VariableDeclaration","scope":4226,"src":"6310:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:22"},"scope":5155,"src":"6172:297:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"6872:347:22","statements":[{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:22","nodeType":"VariableDeclaration","scope":4295,"src":"6882:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4240,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4246,"initialValue":{"arguments":[{"id":4244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6910:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4242,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:22","typeDescriptions":{}}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:22"},{"assignments":[4248],"declarations":[{"constant":false,"id":4248,"mutability":"mutable","name":"result","nameLocation":"6935:6:22","nodeType":"VariableDeclaration","scope":4295,"src":"6927:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4250,"initialValue":{"hexValue":"30","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:22"},{"body":{"id":4289,"nodeType":"Block","src":"6993:189:22","statements":[{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"chr","nameLocation":"7013:3:22","nodeType":"VariableDeclaration","scope":4289,"src":"7007:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4261,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4272,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4267,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"7062:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4268,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"7070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4266,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"7039:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4264,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:22","typeDescriptions":{}}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4263,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"7019:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"7092:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:22","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4280,"nodeType":"IfStatement","src":"7088:30:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4239,"id":4279,"nodeType":"Return","src":"7101:17:22"}},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7132:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"7132:12:22"},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7158:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4286,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"7168:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"7158:13:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"6979:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4256,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"6983:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"initializationExpression":{"assignments":[4252],"declarations":[{"constant":false,"id":4252,"mutability":"mutable","name":"i","nameLocation":"6968:1:22","nodeType":"VariableDeclaration","scope":4290,"src":"6960:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4254,"initialValue":{"id":4253,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"6972:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:22","subExpression":{"id":4258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"6990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"6988:3:22"},"nodeType":"ForStatement","src":"6955:227:22"},{"expression":{"components":[{"hexValue":"74727565","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7205:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4239,"id":4294,"nodeType":"Return","src":"7191:21:22"}]},"documentation":{"id":4227,"nodeType":"StructuredDocumentation","src":"6475:224:22","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:22","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"input","nameLocation":"6765:5:22","nodeType":"VariableDeclaration","scope":4296,"src":"6751:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4228,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"begin","nameLocation":"6788:5:22","nodeType":"VariableDeclaration","scope":4296,"src":"6780:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"end","nameLocation":"6811:3:22","nodeType":"VariableDeclaration","scope":4296,"src":"6803:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:22"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"success","nameLocation":"6848:7:22","nodeType":"VariableDeclaration","scope":4296,"src":"6843:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4235,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"value","nameLocation":"6865:5:22","nodeType":"VariableDeclaration","scope":4296,"src":"6857:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:22"},"scope":5155,"src":"6704:515:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4314,"nodeType":"Block","src":"7516:63:22","statements":[{"expression":{"arguments":[{"id":4305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7542:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4309,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7558:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4307,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:22","typeDescriptions":{}}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:22","memberName":"length","nodeType":"MemberAccess","src":"7552:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4304,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4315,4346],"referencedDeclaration":4346,"src":"7533:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4303,"id":4313,"nodeType":"Return","src":"7526:46:22"}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"7225:216:22","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:22","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"input","nameLocation":"7478:5:22","nodeType":"VariableDeclaration","scope":4315,"src":"7464:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4298,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:22"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4315,"src":"7508:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4301,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:22"},"scope":5155,"src":"7446:133:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4345,"nodeType":"Block","src":"7984:151:22","statements":[{"assignments":[4328,4330],"declarations":[{"constant":false,"id":4328,"mutability":"mutable","name":"success","nameLocation":"8000:7:22","nodeType":"VariableDeclaration","scope":4345,"src":"7995:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4327,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"value","nameLocation":"8016:5:22","nodeType":"VariableDeclaration","scope":4345,"src":"8009:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4329,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4336,"initialValue":{"arguments":[{"id":4332,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"8037:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4333,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"8044:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4334,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"8051:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4367,4409],"referencedDeclaration":4409,"src":"8025:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:22"},{"condition":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:22","subExpression":{"id":4337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"8070:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"8065:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4339,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8086:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4341,"nodeType":"RevertStatement","src":"8079:27:22"}},{"expression":{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"8123:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4326,"id":4344,"nodeType":"Return","src":"8116:12:22"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"7585:296:22","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4346,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:22","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"input","nameLocation":"7918:5:22","nodeType":"VariableDeclaration","scope":4346,"src":"7904:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4317,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4320,"mutability":"mutable","name":"begin","nameLocation":"7933:5:22","nodeType":"VariableDeclaration","scope":4346,"src":"7925:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"end","nameLocation":"7948:3:22","nodeType":"VariableDeclaration","scope":4346,"src":"7940:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:22"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4346,"src":"7976:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4324,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:22"},"scope":5155,"src":"7886:249:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"8526:82:22","statements":[{"expression":{"arguments":[{"id":4357,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"8571:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"8587:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4359,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:22","typeDescriptions":{}}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:22","memberName":"length","nodeType":"MemberAccess","src":"8581:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4356,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8543:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4355,"id":4365,"nodeType":"Return","src":"8536:65:22"}]},"documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"8141:287:22","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:22","nodeType":"FunctionDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"input","nameLocation":"8468:5:22","nodeType":"VariableDeclaration","scope":4367,"src":"8454:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4348,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:22"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"success","nameLocation":"8503:7:22","nodeType":"VariableDeclaration","scope":4367,"src":"8498:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4351,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"value","nameLocation":"8519:5:22","nodeType":"VariableDeclaration","scope":4367,"src":"8512:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4353,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:22"},"scope":5155,"src":"8433:175:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4372,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:22","nodeType":"VariableDeclaration","scope":5155,"src":"8614:50:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4408,"nodeType":"Block","src":"9130:143:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9144:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"9156:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4387,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:22","typeDescriptions":{}}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:22","memberName":"length","nodeType":"MemberAccess","src":"9150:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"9173:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9181:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"9140:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4385,"id":4400,"nodeType":"Return","src":"9186:17:22"}},{"expression":{"arguments":[{"id":4403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"9248:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"9255:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9262:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4402,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9220:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4385,"id":4407,"nodeType":"Return","src":"9213:53:22"}]},"documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"8671:303:22","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:22","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"input","nameLocation":"9023:5:22","nodeType":"VariableDeclaration","scope":4409,"src":"9009:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4374,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"begin","nameLocation":"9046:5:22","nodeType":"VariableDeclaration","scope":4409,"src":"9038:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"end","nameLocation":"9069:3:22","nodeType":"VariableDeclaration","scope":4409,"src":"9061:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:22"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"success","nameLocation":"9107:7:22","nodeType":"VariableDeclaration","scope":4409,"src":"9102:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4381,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"value","nameLocation":"9123:5:22","nodeType":"VariableDeclaration","scope":4409,"src":"9116:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4383,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:22"},"scope":5155,"src":"8979:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"9673:812:22","statements":[{"assignments":[4424],"declarations":[{"constant":false,"id":4424,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:22","nodeType":"VariableDeclaration","scope":4529,"src":"9683:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4423,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4429,"initialValue":{"arguments":[{"id":4427,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"9711:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4425,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:22","typeDescriptions":{}}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:22"},{"assignments":[4431],"declarations":[{"constant":false,"id":4431,"mutability":"mutable","name":"sign","nameLocation":"9781:4:22","nodeType":"VariableDeclaration","scope":4529,"src":"9774:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4430,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4447,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"9788:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4433,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"9797:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4442,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"9845:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4443,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4441,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"9822:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4439,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:22","typeDescriptions":{}}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:22","trueExpression":{"arguments":[{"hexValue":"30","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4435,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:22","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:22"},{"assignments":[4449],"declarations":[{"constant":false,"id":4449,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:22","nodeType":"VariableDeclaration","scope":4529,"src":"9941:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4448,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4456,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"9961:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4451,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:22","typeDescriptions":{}}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:22"},{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:22","nodeType":"VariableDeclaration","scope":4529,"src":"9990:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4457,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4465,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"10010:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4460,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:22","typeDescriptions":{}}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:22"},{"assignments":[4467],"declarations":[{"constant":false,"id":4467,"mutability":"mutable","name":"offset","nameLocation":"10047:6:22","nodeType":"VariableDeclaration","scope":4529,"src":"10039:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4474,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"10057:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4469,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"10073:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"10056:37:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:22"},{"assignments":[4476,4478],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:22","nodeType":"VariableDeclaration","scope":4529,"src":"10107:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4475,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:22","nodeType":"VariableDeclaration","scope":4529,"src":"10124:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4486,"initialValue":{"arguments":[{"id":4480,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"10157:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"10164:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4482,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"10172:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4484,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"10180:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4189,4226],"referencedDeclaration":4226,"src":"10144:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4487,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"10199:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"10213:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4489,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10224:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"10341:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4508,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"10355:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"10371:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4511,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10383:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4422,"id":4526,"nodeType":"Return","src":"10461:17:22"},"id":4527,"nodeType":"IfStatement","src":"10337:141:22","trueBody":{"id":4522,"nodeType":"Block","src":"10399:56:22","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4516,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4515,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:22","memberName":"min","nodeType":"MemberAccess","src":"10427:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4422,"id":4521,"nodeType":"Return","src":"10413:31:22"}]}},"id":4528,"nodeType":"IfStatement","src":"10195:283:22","trueBody":{"id":4506,"nodeType":"Block","src":"10240:91:22","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4493,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"10268:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4501,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"10310:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4499,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:22","typeDescriptions":{}}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:22","trueExpression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:22","subExpression":{"arguments":[{"id":4496,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"10291:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4494,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:22","typeDescriptions":{}}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4422,"id":4505,"nodeType":"Return","src":"10254:66:22"}]}}]},"documentation":{"id":4410,"nodeType":"StructuredDocumentation","src":"9279:223:22","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:22","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"input","nameLocation":"9567:5:22","nodeType":"VariableDeclaration","scope":4530,"src":"9553:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4411,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4414,"mutability":"mutable","name":"begin","nameLocation":"9590:5:22","nodeType":"VariableDeclaration","scope":4530,"src":"9582:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"end","nameLocation":"9613:3:22","nodeType":"VariableDeclaration","scope":4530,"src":"9605:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:22"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"success","nameLocation":"9650:7:22","nodeType":"VariableDeclaration","scope":4530,"src":"9645:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4418,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"value","nameLocation":"9666:5:22","nodeType":"VariableDeclaration","scope":4530,"src":"9659:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4420,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:22"},"scope":5155,"src":"9507:978:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4548,"nodeType":"Block","src":"10830:67:22","statements":[{"expression":{"arguments":[{"id":4539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"10860:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4543,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"10876:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4541,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:22","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:22","memberName":"length","nodeType":"MemberAccess","src":"10870:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4549,4580],"referencedDeclaration":4580,"src":"10847:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4537,"id":4547,"nodeType":"Return","src":"10840:50:22"}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"10491:259:22","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:22","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"input","nameLocation":"10791:5:22","nodeType":"VariableDeclaration","scope":4549,"src":"10777:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4532,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:22"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4549,"src":"10821:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:22"},"scope":5155,"src":"10755:142:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4579,"nodeType":"Block","src":"11318:156:22","statements":[{"assignments":[4562,4564],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"success","nameLocation":"11334:7:22","nodeType":"VariableDeclaration","scope":4579,"src":"11329:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4561,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"value","nameLocation":"11351:5:22","nodeType":"VariableDeclaration","scope":4579,"src":"11343:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4570,"initialValue":{"arguments":[{"id":4566,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"11376:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"11383:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4568,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"11390:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4601,4638],"referencedDeclaration":4638,"src":"11360:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:22"},{"condition":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:22","subExpression":{"id":4571,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"11409:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4576,"nodeType":"IfStatement","src":"11404:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4573,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11425:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4575,"nodeType":"RevertStatement","src":"11418:27:22"}},{"expression":{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"11462:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4560,"id":4578,"nodeType":"Return","src":"11455:12:22"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"10903:307:22","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4580,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:22","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"input","nameLocation":"11251:5:22","nodeType":"VariableDeclaration","scope":4580,"src":"11237:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4551,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"begin","nameLocation":"11266:5:22","nodeType":"VariableDeclaration","scope":4580,"src":"11258:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"end","nameLocation":"11281:3:22","nodeType":"VariableDeclaration","scope":4580,"src":"11273:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:22"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4580,"src":"11309:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:22"},"scope":5155,"src":"11215:259:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"11801:86:22","statements":[{"expression":{"arguments":[{"id":4591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11850:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4595,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11866:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4593,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:22","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:22","memberName":"length","nodeType":"MemberAccess","src":"11860:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"11818:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4589,"id":4599,"nodeType":"Return","src":"11811:69:22"}]},"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"11480:218:22","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:22","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"input","nameLocation":"11742:5:22","nodeType":"VariableDeclaration","scope":4601,"src":"11728:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4582,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:22"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"success","nameLocation":"11777:7:22","nodeType":"VariableDeclaration","scope":4601,"src":"11772:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4585,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"11794:5:22","nodeType":"VariableDeclaration","scope":4601,"src":"11786:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:22"},"scope":5155,"src":"11703:184:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"12295:147:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"12309:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"12321:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4616,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:22","typeDescriptions":{}}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:22","memberName":"length","nodeType":"MemberAccess","src":"12315:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"12338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4623,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"12346:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4630,"nodeType":"IfStatement","src":"12305:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4614,"id":4629,"nodeType":"Return","src":"12351:17:22"}},{"expression":{"arguments":[{"id":4632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"12417:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4633,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"12424:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"12431:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12385:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4614,"id":4636,"nodeType":"Return","src":"12378:57:22"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"11893:241:22","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:22","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"input","nameLocation":"12187:5:22","nodeType":"VariableDeclaration","scope":4638,"src":"12173:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4603,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"begin","nameLocation":"12210:5:22","nodeType":"VariableDeclaration","scope":4638,"src":"12202:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"end","nameLocation":"12233:3:22","nodeType":"VariableDeclaration","scope":4638,"src":"12225:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:22"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"success","nameLocation":"12271:7:22","nodeType":"VariableDeclaration","scope":4638,"src":"12266:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4610,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4613,"mutability":"mutable","name":"value","nameLocation":"12288:5:22","nodeType":"VariableDeclaration","scope":4638,"src":"12280:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:22"},"scope":5155,"src":"12139:303:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4740,"nodeType":"Block","src":"12851:881:22","statements":[{"assignments":[4653],"declarations":[{"constant":false,"id":4653,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:22","nodeType":"VariableDeclaration","scope":4740,"src":"12861:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4652,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4658,"initialValue":{"arguments":[{"id":4656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"12889:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4654,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:22","typeDescriptions":{}}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:22"},{"assignments":[4660],"declarations":[{"constant":false,"id":4660,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:22","nodeType":"VariableDeclaration","scope":4740,"src":"12943:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4659,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4680,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"12961:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"12967:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4670,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"13011:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4671,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"13019:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4669,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"12988:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4667,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:22","typeDescriptions":{}}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4674,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:22","typeDescriptions":{}}},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:22"},{"assignments":[4682],"declarations":[{"constant":false,"id":4682,"mutability":"mutable","name":"offset","nameLocation":"13131:6:22","nodeType":"VariableDeclaration","scope":4740,"src":"13123:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4683,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"13140:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"13140:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:22"},{"assignments":[4690],"declarations":[{"constant":false,"id":4690,"mutability":"mutable","name":"result","nameLocation":"13181:6:22","nodeType":"VariableDeclaration","scope":4740,"src":"13173:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4692,"initialValue":{"hexValue":"30","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:22"},{"body":{"id":4734,"nodeType":"Block","src":"13248:447:22","statements":[{"assignments":[4706],"declarations":[{"constant":false,"id":4706,"mutability":"mutable","name":"chr","nameLocation":"13268:3:22","nodeType":"VariableDeclaration","scope":4734,"src":"13262:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4705,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4716,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4711,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"13317:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13325:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"13294:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4708,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:22","typeDescriptions":{}}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4707,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"13274:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"13347:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4724,"nodeType":"IfStatement","src":"13343:31:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4651,"id":4723,"nodeType":"Return","src":"13357:17:22"}},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"13388:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"13388:12:22"},{"id":4733,"nodeType":"UncheckedBlock","src":"13414:271:22","statements":[{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"13657:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4730,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"13667:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"13657:13:22"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13234:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4700,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"13238:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"initializationExpression":{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"i","nameLocation":"13214:1:22","nodeType":"VariableDeclaration","scope":4735,"src":"13206:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4698,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"13218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4696,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13226:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:22","subExpression":{"id":4702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13245:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"13243:3:22"},"nodeType":"ForStatement","src":"13201:494:22"},{"expression":{"components":[{"hexValue":"74727565","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"13718:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4651,"id":4739,"nodeType":"Return","src":"13704:21:22"}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"12448:227:22","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4741,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:22","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"input","nameLocation":"12744:5:22","nodeType":"VariableDeclaration","scope":4741,"src":"12730:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4640,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"begin","nameLocation":"12767:5:22","nodeType":"VariableDeclaration","scope":4741,"src":"12759:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"end","nameLocation":"12790:3:22","nodeType":"VariableDeclaration","scope":4741,"src":"12782:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:22"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"success","nameLocation":"12827:7:22","nodeType":"VariableDeclaration","scope":4741,"src":"12822:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4647,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"12844:5:22","nodeType":"VariableDeclaration","scope":4741,"src":"12836:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:22"},"scope":5155,"src":"12680:1052:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4759,"nodeType":"Block","src":"14030:67:22","statements":[{"expression":{"arguments":[{"id":4750,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"14060:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4754,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"14076:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4752,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:22","typeDescriptions":{}}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:22","memberName":"length","nodeType":"MemberAccess","src":"14070:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4749,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4760,4791],"referencedDeclaration":4791,"src":"14047:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4748,"id":4758,"nodeType":"Return","src":"14040:50:22"}]},"documentation":{"id":4742,"nodeType":"StructuredDocumentation","src":"13738:212:22","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:22","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"input","nameLocation":"13991:5:22","nodeType":"VariableDeclaration","scope":4760,"src":"13977:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4743,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:22"},"returnParameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"14021:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:22"},"scope":5155,"src":"13955:142:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4790,"nodeType":"Block","src":"14470:165:22","statements":[{"assignments":[4773,4775],"declarations":[{"constant":false,"id":4773,"mutability":"mutable","name":"success","nameLocation":"14486:7:22","nodeType":"VariableDeclaration","scope":4790,"src":"14481:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4772,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"value","nameLocation":"14503:5:22","nodeType":"VariableDeclaration","scope":4790,"src":"14495:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4781,"initialValue":{"arguments":[{"id":4777,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"14528:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4778,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"14535:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"14542:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4812,4916],"referencedDeclaration":4916,"src":"14512:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:22"},{"condition":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:22","subExpression":{"id":4782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"14561:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4787,"nodeType":"IfStatement","src":"14556:50:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4784,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"14577:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4786,"nodeType":"RevertStatement","src":"14570:36:22"}},{"expression":{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"14623:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4771,"id":4789,"nodeType":"Return","src":"14616:12:22"}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"14103:259:22","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:22","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"input","nameLocation":"14403:5:22","nodeType":"VariableDeclaration","scope":4791,"src":"14389:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4762,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"begin","nameLocation":"14418:5:22","nodeType":"VariableDeclaration","scope":4791,"src":"14410:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"end","nameLocation":"14433:3:22","nodeType":"VariableDeclaration","scope":4791,"src":"14425:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:22"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4791,"src":"14461:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4769,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:22"},"scope":5155,"src":"14367:268:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4811,"nodeType":"Block","src":"14942:70:22","statements":[{"expression":{"arguments":[{"id":4802,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"14975:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4806,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"14991:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4804,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:22","typeDescriptions":{}}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:22","memberName":"length","nodeType":"MemberAccess","src":"14985:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4812,4916],"referencedDeclaration":4916,"src":"14959:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4800,"id":4810,"nodeType":"Return","src":"14952:53:22"}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"14641:198:22","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:22","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"input","nameLocation":"14883:5:22","nodeType":"VariableDeclaration","scope":4812,"src":"14869:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4793,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:22"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"success","nameLocation":"14918:7:22","nodeType":"VariableDeclaration","scope":4812,"src":"14913:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4796,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"value","nameLocation":"14935:5:22","nodeType":"VariableDeclaration","scope":4812,"src":"14927:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4798,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:22"},"scope":5155,"src":"14844:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4915,"nodeType":"Block","src":"15405:733:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"15419:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4829,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"15431:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4827,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:22","typeDescriptions":{}}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:22","memberName":"length","nodeType":"MemberAccess","src":"15425:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"15448:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4834,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"15456:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4844,"nodeType":"IfStatement","src":"15415:72:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4838,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:22","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4825,"id":4843,"nodeType":"Return","src":"15461:26:22"}},{"assignments":[4846],"declarations":[{"constant":false,"id":4846,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:22","nodeType":"VariableDeclaration","scope":4915,"src":"15498:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4845,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4869,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4847,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"15516:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"15522:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"15572:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4856,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:22","typeDescriptions":{}}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4860,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"15580:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4855,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"15543:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4853,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:22","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4863,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:22","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:22"},{"assignments":[4871],"declarations":[{"constant":false,"id":4871,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:22","nodeType":"VariableDeclaration","scope":4915,"src":"15684:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4879,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4873,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"15714:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"15714:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"15801:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4881,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"15807:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4883,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"15816:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4913,"nodeType":"Block","src":"16081:51:22","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4907,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:22","typeDescriptions":{}}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4825,"id":4912,"nodeType":"Return","src":"16095:26:22"}]},"id":4914,"nodeType":"IfStatement","src":"15797:335:22","trueBody":{"id":4905,"nodeType":"Block","src":"15832:243:22","statements":[{"assignments":[4886,4888],"declarations":[{"constant":false,"id":4886,"mutability":"mutable","name":"s","nameLocation":"15953:1:22","nodeType":"VariableDeclaration","scope":4905,"src":"15948:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4885,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4888,"mutability":"mutable","name":"v","nameLocation":"15964:1:22","nodeType":"VariableDeclaration","scope":4905,"src":"15956:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4887,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4894,"initialValue":{"arguments":[{"id":4890,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"16001:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4891,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"16008:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4892,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"16015:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4889,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"15969:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:22"},{"expression":{"components":[{"id":4895,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"16041:1:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4900,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"16060:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4898,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:22","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4896,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:22","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4825,"id":4904,"nodeType":"Return","src":"16033:31:22"}]}}]},"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"15018:226:22","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:22","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"input","nameLocation":"15297:5:22","nodeType":"VariableDeclaration","scope":4916,"src":"15283:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4814,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4817,"mutability":"mutable","name":"begin","nameLocation":"15320:5:22","nodeType":"VariableDeclaration","scope":4916,"src":"15312:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4819,"mutability":"mutable","name":"end","nameLocation":"15343:3:22","nodeType":"VariableDeclaration","scope":4916,"src":"15335:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:22"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"success","nameLocation":"15381:7:22","nodeType":"VariableDeclaration","scope":4916,"src":"15376:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4821,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"value","nameLocation":"15398:5:22","nodeType":"VariableDeclaration","scope":4916,"src":"15390:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4823,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:22"},"scope":5155,"src":"15249:889:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"16207:461:22","statements":[{"assignments":[4924],"declarations":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"16223:5:22","nodeType":"VariableDeclaration","scope":4975,"src":"16217:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4923,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4929,"initialValue":{"arguments":[{"id":4927,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"16237:3:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4925,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:22","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:22"},{"id":4972,"nodeType":"UncheckedBlock","src":"16401:238:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16429:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:22","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16443:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:22","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16489:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16503:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:22","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16550:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16564:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4964,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:22","memberName":"max","nodeType":"MemberAccess","src":"16613:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4922,"id":4968,"nodeType":"Return","src":"16606:22:22"},"id":4969,"nodeType":"IfStatement","src":"16546:82:22","trueBody":{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16576:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:22","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4962,"nodeType":"ExpressionStatement","src":"16576:11:22"}},"id":4970,"nodeType":"IfStatement","src":"16485:143:22","trueBody":{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16516:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:22","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4951,"nodeType":"ExpressionStatement","src":"16516:11:22"}},"id":4971,"nodeType":"IfStatement","src":"16425:203:22","trueBody":{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16455:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4940,"nodeType":"ExpressionStatement","src":"16455:11:22"}}]},{"expression":{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"16656:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4922,"id":4974,"nodeType":"Return","src":"16649:12:22"}]},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:22","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"chr","nameLocation":"16173:3:22","nodeType":"VariableDeclaration","scope":4976,"src":"16166:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4917,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:22"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"16200:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4920,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:22"},"scope":5155,"src":"16144:524:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5141,"nodeType":"Block","src":"17334:1331:22","statements":[{"assignments":[4985],"declarations":[{"constant":false,"id":4985,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:22","nodeType":"VariableDeclaration","scope":5141,"src":"17344:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4984,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4990,"initialValue":{"arguments":[{"id":4988,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"17372:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4986,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:22","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:22"},{"assignments":[4992],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"output","nameLocation":"17401:6:22","nodeType":"VariableDeclaration","scope":5141,"src":"17388:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4991,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5000,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4996,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17424:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:22","memberName":"length","nodeType":"MemberAccess","src":"17424:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4993,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:22"},{"assignments":[5002],"declarations":[{"constant":false,"id":5002,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:22","nodeType":"VariableDeclaration","scope":5141,"src":"17471:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5004,"initialValue":{"hexValue":"30","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:22"},{"body":{"id":5133,"nodeType":"Block","src":"17546:854:22","statements":[{"assignments":[5016],"declarations":[{"constant":false,"id":5016,"mutability":"mutable","name":"char","nameLocation":"17567:4:22","nodeType":"VariableDeclaration","scope":5133,"src":"17560:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5015,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5024,"initialValue":{"arguments":[{"arguments":[{"id":5020,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17604:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"17612:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5019,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"17581:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5017,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:22","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:22"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5025,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"17635:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5029,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"17670:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5027,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:22","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5131,"nodeType":"Block","src":"18328:62:22","statements":[{"expression":{"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5124,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18346:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5127,"indexExpression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:22","subExpression":{"id":5125,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"18353:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5128,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"18371:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5130,"nodeType":"ExpressionStatement","src":"18346:29:22"}]},"id":5132,"nodeType":"IfStatement","src":"17629:761:22","trueBody":{"id":5123,"nodeType":"Block","src":"17685:637:22","statements":[{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5038,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"17703:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5041,"indexExpression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:22","subExpression":{"id":5039,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"17710:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5044,"nodeType":"ExpressionStatement","src":"17703:29:22"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"17754:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"17823:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:22","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"17892:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5075,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"17961:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:22","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"18030:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:22","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"18099:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:22","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"18169:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5116,"nodeType":"IfStatement","src":"18165:143:22","trueBody":{"id":5115,"nodeType":"Block","src":"18183:125:22","statements":[{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5108,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18261:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5111,"indexExpression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:22","subExpression":{"id":5109,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"18268:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5114,"nodeType":"ExpressionStatement","src":"18261:28:22"}]}},"id":5117,"nodeType":"IfStatement","src":"18095:213:22","trueBody":{"expression":{"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5098,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18113:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5101,"indexExpression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:22","subExpression":{"id":5099,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"18120:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5104,"nodeType":"ExpressionStatement","src":"18113:29:22"}},"id":5118,"nodeType":"IfStatement","src":"18026:282:22","trueBody":{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5088,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18044:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5091,"indexExpression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:22","subExpression":{"id":5089,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"18051:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5094,"nodeType":"ExpressionStatement","src":"18044:28:22"}},"id":5119,"nodeType":"IfStatement","src":"17957:351:22","trueBody":{"expression":{"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5078,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"17975:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5081,"indexExpression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:22","subExpression":{"id":5079,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"17982:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5084,"nodeType":"ExpressionStatement","src":"17975:28:22"}},"id":5120,"nodeType":"IfStatement","src":"17888:420:22","trueBody":{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5068,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"17906:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5071,"indexExpression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:22","subExpression":{"id":5069,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"17913:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5074,"nodeType":"ExpressionStatement","src":"17906:28:22"}},"id":5121,"nodeType":"IfStatement","src":"17819:489:22","trueBody":{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5058,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"17837:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5061,"indexExpression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:22","subExpression":{"id":5059,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"17844:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5064,"nodeType":"ExpressionStatement","src":"17837:28:22"}},"id":5122,"nodeType":"IfStatement","src":"17750:558:22","trueBody":{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5048,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"17768:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5051,"indexExpression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:22","subExpression":{"id":5049,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"17775:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5054,"nodeType":"ExpressionStatement","src":"17768:28:22"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"17522:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5009,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17526:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:22","memberName":"length","nodeType":"MemberAccess","src":"17526:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5134,"initializationExpression":{"assignments":[5006],"declarations":[{"constant":false,"id":5006,"mutability":"mutable","name":"i","nameLocation":"17519:1:22","nodeType":"VariableDeclaration","scope":5134,"src":"17511:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5007,"nodeType":"VariableDeclarationStatement","src":"17511:9:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:22","subExpression":{"id":5012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"17543:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5014,"nodeType":"ExpressionStatement","src":"17541:3:22"},"nodeType":"ForStatement","src":"17506:894:22"},{"AST":{"nativeSrc":"18498:129:22","nodeType":"YulBlock","src":"18498:129:22","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:22","nodeType":"YulIdentifier","src":"18519:6:22"},{"name":"outputLength","nativeSrc":"18527:12:22","nodeType":"YulIdentifier","src":"18527:12:22"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:22","nodeType":"YulIdentifier","src":"18512:6:22"},"nativeSrc":"18512:28:22","nodeType":"YulFunctionCall","src":"18512:28:22"},"nativeSrc":"18512:28:22","nodeType":"YulExpressionStatement","src":"18512:28:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:22","nodeType":"YulLiteral","src":"18560:4:22","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:22","nodeType":"YulIdentifier","src":"18570:6:22"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:22","nodeType":"YulLiteral","src":"18582:1:22","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:22","nodeType":"YulLiteral","src":"18589:1:22","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:22","nodeType":"YulIdentifier","src":"18596:12:22"},{"kind":"number","nativeSrc":"18610:2:22","nodeType":"YulLiteral","src":"18610:2:22","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:22","nodeType":"YulIdentifier","src":"18592:3:22"},"nativeSrc":"18592:21:22","nodeType":"YulFunctionCall","src":"18592:21:22"}],"functionName":{"name":"shr","nativeSrc":"18585:3:22","nodeType":"YulIdentifier","src":"18585:3:22"},"nativeSrc":"18585:29:22","nodeType":"YulFunctionCall","src":"18585:29:22"}],"functionName":{"name":"shl","nativeSrc":"18578:3:22","nodeType":"YulIdentifier","src":"18578:3:22"},"nativeSrc":"18578:37:22","nodeType":"YulFunctionCall","src":"18578:37:22"}],"functionName":{"name":"add","nativeSrc":"18566:3:22","nodeType":"YulIdentifier","src":"18566:3:22"},"nativeSrc":"18566:50:22","nodeType":"YulFunctionCall","src":"18566:50:22"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:22","nodeType":"YulIdentifier","src":"18553:6:22"},"nativeSrc":"18553:64:22","nodeType":"YulFunctionCall","src":"18553:64:22"},"nativeSrc":"18553:64:22","nodeType":"YulExpressionStatement","src":"18553:64:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4992,"isOffset":false,"isSlot":false,"src":"18519:6:22","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"18570:6:22","valueSize":1},{"declaration":5002,"isOffset":false,"isSlot":false,"src":"18527:12:22","valueSize":1},{"declaration":5002,"isOffset":false,"isSlot":false,"src":"18596:12:22","valueSize":1}],"flags":["memory-safe"],"id":5135,"nodeType":"InlineAssembly","src":"18473:154:22"},{"expression":{"arguments":[{"id":5138,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18651:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5136,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:22","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4983,"id":5140,"nodeType":"Return","src":"18637:21:22"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"16674:576:22","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:22","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"input","nameLocation":"17289:5:22","nodeType":"VariableDeclaration","scope":5142,"src":"17275:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4978,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:22"},"returnParameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"17319:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4981,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:22"},"scope":5155,"src":"17255:1410:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5153,"nodeType":"Block","src":"19050:225:22","statements":[{"AST":{"nativeSrc":"19199:70:22","nodeType":"YulBlock","src":"19199:70:22","statements":[{"nativeSrc":"19213:46:22","nodeType":"YulAssignment","src":"19213:46:22","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:22","nodeType":"YulIdentifier","src":"19232:6:22"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:22","nodeType":"YulLiteral","src":"19244:4:22","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:22","nodeType":"YulIdentifier","src":"19250:6:22"}],"functionName":{"name":"add","nativeSrc":"19240:3:22","nodeType":"YulIdentifier","src":"19240:3:22"},"nativeSrc":"19240:17:22","nodeType":"YulFunctionCall","src":"19240:17:22"}],"functionName":{"name":"add","nativeSrc":"19228:3:22","nodeType":"YulIdentifier","src":"19228:3:22"},"nativeSrc":"19228:30:22","nodeType":"YulFunctionCall","src":"19228:30:22"}],"functionName":{"name":"mload","nativeSrc":"19222:5:22","nodeType":"YulIdentifier","src":"19222:5:22"},"nativeSrc":"19222:37:22","nodeType":"YulFunctionCall","src":"19222:37:22"},"variableNames":[{"name":"value","nativeSrc":"19213:5:22","nodeType":"YulIdentifier","src":"19213:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5145,"isOffset":false,"isSlot":false,"src":"19232:6:22","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"19250:6:22","valueSize":1},{"declaration":5150,"isOffset":false,"isSlot":false,"src":"19213:5:22","valueSize":1}],"flags":["memory-safe"],"id":5152,"nodeType":"InlineAssembly","src":"19174:95:22"}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"18671:268:22","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:22","nodeType":"FunctionDefinition","parameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:22","nodeType":"VariableDeclaration","scope":5154,"src":"18976:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5144,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"offset","nameLocation":"19005:6:22","nodeType":"VariableDeclaration","scope":5154,"src":"18997:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:22"},"returnParameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"value","nameLocation":"19043:5:22","nodeType":"VariableDeclaration","scope":5154,"src":"19035:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:22"},"scope":5155,"src":"18944:331:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5156,"src":"297:18980:22","usedErrors":[3813,3816,3819],"usedEvents":[]}],"src":"101:19177:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5503]},"id":5504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":5158,"nodeType":"StructuredDocumentation","src":"138:205:23","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5503,"linearizedBaseContracts":[5503],"name":"ECDSA","nameLocation":"352:5:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5163,"members":[{"id":5159,"name":"NoError","nameLocation":"392:7:23","nodeType":"EnumValue","src":"392:7:23"},{"id":5160,"name":"InvalidSignature","nameLocation":"409:16:23","nodeType":"EnumValue","src":"409:16:23"},{"id":5161,"name":"InvalidSignatureLength","nameLocation":"435:22:23","nodeType":"EnumValue","src":"435:22:23"},{"id":5162,"name":"InvalidSignatureS","nameLocation":"467:17:23","nodeType":"EnumValue","src":"467:17:23"}],"name":"RecoverError","nameLocation":"369:12:23","nodeType":"EnumDefinition","src":"364:126:23"},{"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"496:63:23","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":5166,"name":"ECDSAInvalidSignature","nameLocation":"570:21:23","nodeType":"ErrorDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[],"src":"591:2:23"},"src":"564:30:23"},{"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"600:60:23","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":5171,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:23","nodeType":"ErrorDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"length","nameLocation":"707:6:23","nodeType":"VariableDeclaration","scope":5171,"src":"699:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:23"},"src":"665:50:23"},{"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"721:85:23","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":5176,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:23","nodeType":"ErrorDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"s","nameLocation":"848:1:23","nodeType":"VariableDeclaration","scope":5176,"src":"840:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:23"},"src":"811:40:23"},{"body":{"id":5228,"nodeType":"Block","src":"2285:622:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5191,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"2299:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:23","memberName":"length","nodeType":"MemberAccess","src":"2299:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5226,"nodeType":"Block","src":"2793:108:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5213,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:23","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5217,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"2827:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"2827:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":5221,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"2872:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:23","memberName":"length","nodeType":"MemberAccess","src":"2872:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:23","typeDescriptions":{}}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5190,"id":5225,"nodeType":"Return","src":"2807:83:23"}]},"id":5227,"nodeType":"IfStatement","src":"2295:606:23","trueBody":{"id":5212,"nodeType":"Block","src":"2323:464:23","statements":[{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"r","nameLocation":"2345:1:23","nodeType":"VariableDeclaration","scope":5212,"src":"2337:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5197,"nodeType":"VariableDeclarationStatement","src":"2337:9:23"},{"assignments":[5199],"declarations":[{"constant":false,"id":5199,"mutability":"mutable","name":"s","nameLocation":"2368:1:23","nodeType":"VariableDeclaration","scope":5212,"src":"2360:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5200,"nodeType":"VariableDeclarationStatement","src":"2360:9:23"},{"assignments":[5202],"declarations":[{"constant":false,"id":5202,"mutability":"mutable","name":"v","nameLocation":"2389:1:23","nodeType":"VariableDeclaration","scope":5212,"src":"2383:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5201,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5203,"nodeType":"VariableDeclarationStatement","src":"2383:7:23"},{"AST":{"nativeSrc":"2560:171:23","nodeType":"YulBlock","src":"2560:171:23","statements":[{"nativeSrc":"2578:32:23","nodeType":"YulAssignment","src":"2578:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:23","nodeType":"YulIdentifier","src":"2593:9:23"},{"kind":"number","nativeSrc":"2604:4:23","nodeType":"YulLiteral","src":"2604:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:23","nodeType":"YulIdentifier","src":"2589:3:23"},"nativeSrc":"2589:20:23","nodeType":"YulFunctionCall","src":"2589:20:23"}],"functionName":{"name":"mload","nativeSrc":"2583:5:23","nodeType":"YulIdentifier","src":"2583:5:23"},"nativeSrc":"2583:27:23","nodeType":"YulFunctionCall","src":"2583:27:23"},"variableNames":[{"name":"r","nativeSrc":"2578:1:23","nodeType":"YulIdentifier","src":"2578:1:23"}]},{"nativeSrc":"2627:32:23","nodeType":"YulAssignment","src":"2627:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:23","nodeType":"YulIdentifier","src":"2642:9:23"},{"kind":"number","nativeSrc":"2653:4:23","nodeType":"YulLiteral","src":"2653:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:23","nodeType":"YulIdentifier","src":"2638:3:23"},"nativeSrc":"2638:20:23","nodeType":"YulFunctionCall","src":"2638:20:23"}],"functionName":{"name":"mload","nativeSrc":"2632:5:23","nodeType":"YulIdentifier","src":"2632:5:23"},"nativeSrc":"2632:27:23","nodeType":"YulFunctionCall","src":"2632:27:23"},"variableNames":[{"name":"s","nativeSrc":"2627:1:23","nodeType":"YulIdentifier","src":"2627:1:23"}]},{"nativeSrc":"2676:41:23","nodeType":"YulAssignment","src":"2676:41:23","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:23","nodeType":"YulLiteral","src":"2686:1:23","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:23","nodeType":"YulIdentifier","src":"2699:9:23"},{"kind":"number","nativeSrc":"2710:4:23","nodeType":"YulLiteral","src":"2710:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:23","nodeType":"YulIdentifier","src":"2695:3:23"},"nativeSrc":"2695:20:23","nodeType":"YulFunctionCall","src":"2695:20:23"}],"functionName":{"name":"mload","nativeSrc":"2689:5:23","nodeType":"YulIdentifier","src":"2689:5:23"},"nativeSrc":"2689:27:23","nodeType":"YulFunctionCall","src":"2689:27:23"}],"functionName":{"name":"byte","nativeSrc":"2681:4:23","nodeType":"YulIdentifier","src":"2681:4:23"},"nativeSrc":"2681:36:23","nodeType":"YulFunctionCall","src":"2681:36:23"},"variableNames":[{"name":"v","nativeSrc":"2676:1:23","nodeType":"YulIdentifier","src":"2676:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5196,"isOffset":false,"isSlot":false,"src":"2578:1:23","valueSize":1},{"declaration":5199,"isOffset":false,"isSlot":false,"src":"2627:1:23","valueSize":1},{"declaration":5181,"isOffset":false,"isSlot":false,"src":"2593:9:23","valueSize":1},{"declaration":5181,"isOffset":false,"isSlot":false,"src":"2642:9:23","valueSize":1},{"declaration":5181,"isOffset":false,"isSlot":false,"src":"2699:9:23","valueSize":1},{"declaration":5202,"isOffset":false,"isSlot":false,"src":"2676:1:23","valueSize":1}],"flags":["memory-safe"],"id":5204,"nodeType":"InlineAssembly","src":"2535:196:23"},{"expression":{"arguments":[{"id":5206,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"2762:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5207,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"2768:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5208,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"2771:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5209,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"2774:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5205,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5229,5309,5417],"referencedDeclaration":5417,"src":"2751:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5190,"id":5211,"nodeType":"Return","src":"2744:32:23"}]}}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"857:1267:23","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:23","nodeType":"FunctionDefinition","parameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"hash","nameLocation":"2166:4:23","nodeType":"VariableDeclaration","scope":5229,"src":"2158:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5181,"mutability":"mutable","name":"signature","nameLocation":"2193:9:23","nodeType":"VariableDeclaration","scope":5229,"src":"2180:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5180,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:23"},"returnParameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:23","nodeType":"VariableDeclaration","scope":5229,"src":"2232:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5183,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"err","nameLocation":"2264:3:23","nodeType":"VariableDeclaration","scope":5229,"src":"2251:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5186,"nodeType":"UserDefinedTypeName","pathNode":{"id":5185,"name":"RecoverError","nameLocations":["2251:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"2251:12:23"},"referencedDeclaration":5163,"src":"2251:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5189,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:23","nodeType":"VariableDeclaration","scope":5229,"src":"2269:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:23"},"scope":5503,"src":"2129:778:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5258,"nodeType":"Block","src":"3801:168:23","statements":[{"assignments":[5240,5243,5245],"declarations":[{"constant":false,"id":5240,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:23","nodeType":"VariableDeclaration","scope":5258,"src":"3812:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5239,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5243,"mutability":"mutable","name":"error","nameLocation":"3844:5:23","nodeType":"VariableDeclaration","scope":5258,"src":"3831:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5242,"nodeType":"UserDefinedTypeName","pathNode":{"id":5241,"name":"RecoverError","nameLocations":["3831:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"3831:12:23"},"referencedDeclaration":5163,"src":"3831:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5245,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:23","nodeType":"VariableDeclaration","scope":5258,"src":"3851:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5250,"initialValue":{"arguments":[{"id":5247,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"3882:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5248,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3888:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5246,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5229,5309,5417],"referencedDeclaration":5229,"src":"3871:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:23"},{"expression":{"arguments":[{"id":5252,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"3920:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"id":5253,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"3927:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5251,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"3908:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5163_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5255,"nodeType":"ExpressionStatement","src":"3908:28:23"},{"expression":{"id":5256,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"3953:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5238,"id":5257,"nodeType":"Return","src":"3946:16:23"}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"2913:796:23","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:23","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"hash","nameLocation":"3739:4:23","nodeType":"VariableDeclaration","scope":5259,"src":"3731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5234,"mutability":"mutable","name":"signature","nameLocation":"3758:9:23","nodeType":"VariableDeclaration","scope":5259,"src":"3745:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5233,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:23"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"3792:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5236,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:23"},"scope":5503,"src":"3714:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"4348:342:23","statements":[{"id":5307,"nodeType":"UncheckedBlock","src":"4358:326:23","statements":[{"assignments":[5277],"declarations":[{"constant":false,"id":5277,"mutability":"mutable","name":"s","nameLocation":"4390:1:23","nodeType":"VariableDeclaration","scope":5307,"src":"4382:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5284,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"4394:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:23","typeDescriptions":{}}},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:23"},{"assignments":[5286],"declarations":[{"constant":false,"id":5286,"mutability":"mutable","name":"v","nameLocation":"4591:1:23","nodeType":"VariableDeclaration","scope":5307,"src":"4585:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5285,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5299,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5291,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"4610:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:23","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:23","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5287,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:23","typeDescriptions":{}}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:23"},{"expression":{"arguments":[{"id":5301,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4659:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5302,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"4665:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5303,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"4668:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5304,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"4671:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5300,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5229,5309,5417],"referencedDeclaration":5417,"src":"4648:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5275,"id":5306,"nodeType":"Return","src":"4641:32:23"}]}]},"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"3975:205:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:23","nodeType":"FunctionDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"hash","nameLocation":"4222:4:23","nodeType":"VariableDeclaration","scope":5309,"src":"4214:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"r","nameLocation":"4244:1:23","nodeType":"VariableDeclaration","scope":5309,"src":"4236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5266,"mutability":"mutable","name":"vs","nameLocation":"4263:2:23","nodeType":"VariableDeclaration","scope":5309,"src":"4255:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:23"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:23","nodeType":"VariableDeclaration","scope":5309,"src":"4295:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5268,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5272,"mutability":"mutable","name":"err","nameLocation":"4327:3:23","nodeType":"VariableDeclaration","scope":5309,"src":"4314:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5271,"nodeType":"UserDefinedTypeName","pathNode":{"id":5270,"name":"RecoverError","nameLocations":["4314:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"4314:12:23"},"referencedDeclaration":5163,"src":"4314:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:23","nodeType":"VariableDeclaration","scope":5309,"src":"4332:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:23"},"scope":5503,"src":"4185:505:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"4903:164:23","statements":[{"assignments":[5322,5325,5327],"declarations":[{"constant":false,"id":5322,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:23","nodeType":"VariableDeclaration","scope":5341,"src":"4914:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5321,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"error","nameLocation":"4946:5:23","nodeType":"VariableDeclaration","scope":5341,"src":"4933:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5324,"nodeType":"UserDefinedTypeName","pathNode":{"id":5323,"name":"RecoverError","nameLocations":["4933:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"4933:12:23"},"referencedDeclaration":5163,"src":"4933:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:23","nodeType":"VariableDeclaration","scope":5341,"src":"4953:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5333,"initialValue":{"arguments":[{"id":5329,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"4984:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5330,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"4990:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5331,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"4993:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5328,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5229,5309,5417],"referencedDeclaration":5309,"src":"4973:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:23"},{"expression":{"arguments":[{"id":5335,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"5018:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"id":5336,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"5025:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5334,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"5006:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5163_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5338,"nodeType":"ExpressionStatement","src":"5006:28:23"},{"expression":{"id":5339,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"5051:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5320,"id":5340,"nodeType":"Return","src":"5044:16:23"}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"4696:116:23","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:23","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"hash","nameLocation":"4842:4:23","nodeType":"VariableDeclaration","scope":5342,"src":"4834:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5314,"mutability":"mutable","name":"r","nameLocation":"4856:1:23","nodeType":"VariableDeclaration","scope":5342,"src":"4848:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5316,"mutability":"mutable","name":"vs","nameLocation":"4867:2:23","nodeType":"VariableDeclaration","scope":5342,"src":"4859:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:23"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5342,"src":"4894:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5318,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:23"},"scope":5503,"src":"4817:250:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5416,"nodeType":"Block","src":"5382:1372:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5363,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"6278:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:23","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5377,"nodeType":"IfStatement","src":"6266:164:23","trueBody":{"id":5376,"nodeType":"Block","src":"6351:79:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5367,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:23","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5371,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"6385:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"6385:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"id":5373,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"6417:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5360,"id":5375,"nodeType":"Return","src":"6365:54:23"}]}},{"assignments":[5379],"declarations":[{"constant":false,"id":5379,"mutability":"mutable","name":"signer","nameLocation":"6532:6:23","nodeType":"VariableDeclaration","scope":5416,"src":"6524:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5386,"initialValue":{"arguments":[{"id":5381,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"6551:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5382,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"6557:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5383,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"6560:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5384,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"6563:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5380,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:23","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"6579:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5388,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:23","typeDescriptions":{}}},"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5406,"nodeType":"IfStatement","src":"6575:113:23","trueBody":{"id":5405,"nodeType":"Block","src":"6601:87:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5393,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:23","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5397,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"6635:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5160,"src":"6635:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:23","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5360,"id":5404,"nodeType":"Return","src":"6615:62:23"}]}},{"expression":{"components":[{"id":5407,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"6706:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5408,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"6714:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5159,"src":"6714:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:23","typeDescriptions":{}}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5360,"id":5415,"nodeType":"Return","src":"6698:49:23"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"5073:125:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:23","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"hash","nameLocation":"5240:4:23","nodeType":"VariableDeclaration","scope":5417,"src":"5232:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5347,"mutability":"mutable","name":"v","nameLocation":"5260:1:23","nodeType":"VariableDeclaration","scope":5417,"src":"5254:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5346,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5349,"mutability":"mutable","name":"r","nameLocation":"5279:1:23","nodeType":"VariableDeclaration","scope":5417,"src":"5271:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"s","nameLocation":"5298:1:23","nodeType":"VariableDeclaration","scope":5417,"src":"5290:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:23"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:23","nodeType":"VariableDeclaration","scope":5417,"src":"5329:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5353,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"err","nameLocation":"5361:3:23","nodeType":"VariableDeclaration","scope":5417,"src":"5348:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5356,"nodeType":"UserDefinedTypeName","pathNode":{"id":5355,"name":"RecoverError","nameLocations":["5348:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"5348:12:23"},"referencedDeclaration":5163,"src":"5348:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:23","nodeType":"VariableDeclaration","scope":5417,"src":"5366:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:23"},"scope":5503,"src":"5203:1551:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5452,"nodeType":"Block","src":"6981:166:23","statements":[{"assignments":[5432,5435,5437],"declarations":[{"constant":false,"id":5432,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:23","nodeType":"VariableDeclaration","scope":5452,"src":"6992:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5431,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5435,"mutability":"mutable","name":"error","nameLocation":"7024:5:23","nodeType":"VariableDeclaration","scope":5452,"src":"7011:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5434,"nodeType":"UserDefinedTypeName","pathNode":{"id":5433,"name":"RecoverError","nameLocations":["7011:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"7011:12:23"},"referencedDeclaration":5163,"src":"7011:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5437,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:23","nodeType":"VariableDeclaration","scope":5452,"src":"7031:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5444,"initialValue":{"arguments":[{"id":5439,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"7062:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5440,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"7068:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5441,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7071:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5442,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"7074:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5438,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5229,5309,5417],"referencedDeclaration":5417,"src":"7051:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5163_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:23"},{"expression":{"arguments":[{"id":5446,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"7098:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},{"id":5447,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"7105:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5445,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"7086:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5163_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5449,"nodeType":"ExpressionStatement","src":"7086:28:23"},{"expression":{"id":5450,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"7131:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5430,"id":5451,"nodeType":"Return","src":"7124:16:23"}]},"documentation":{"id":5418,"nodeType":"StructuredDocumentation","src":"6760:122:23","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5453,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:23","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"hash","nameLocation":"6912:4:23","nodeType":"VariableDeclaration","scope":5453,"src":"6904:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"v","nameLocation":"6924:1:23","nodeType":"VariableDeclaration","scope":5453,"src":"6918:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5421,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"r","nameLocation":"6935:1:23","nodeType":"VariableDeclaration","scope":5453,"src":"6927:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5426,"mutability":"mutable","name":"s","nameLocation":"6946:1:23","nodeType":"VariableDeclaration","scope":5453,"src":"6938:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:23"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5453,"src":"6972:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5428,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:23"},"scope":5503,"src":"6887:260:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"7352:460:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"7366:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5463,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"7375:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5159,"src":"7375:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"7462:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5469,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"7471:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5160,"src":"7471:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"7567:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5477,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"7576:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"7576:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"7701:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5489,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"7710:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5163_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5162,"src":"7710:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5497,"nodeType":"IfStatement","src":"7697:109:23","trueBody":{"id":5496,"nodeType":"Block","src":"7742:64:23","statements":[{"errorCall":{"arguments":[{"id":5493,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"7786:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5492,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"7763:22:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5495,"nodeType":"RevertStatement","src":"7756:39:23"}]}},"id":5498,"nodeType":"IfStatement","src":"7563:243:23","trueBody":{"id":5487,"nodeType":"Block","src":"7613:78:23","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":5483,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"7670:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:23","typeDescriptions":{}}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5480,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"7634:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5486,"nodeType":"RevertStatement","src":"7627:53:23"}]}},"id":5499,"nodeType":"IfStatement","src":"7458:348:23","trueBody":{"id":5475,"nodeType":"Block","src":"7502:55:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5472,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"7523:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"7516:30:23"}]}},"id":5500,"nodeType":"IfStatement","src":"7362:444:23","trueBody":{"id":5467,"nodeType":"Block","src":"7397:55:23","statements":[{"functionReturnParameters":5461,"id":5466,"nodeType":"Return","src":"7411:7:23"}]}}]},"documentation":{"id":5454,"nodeType":"StructuredDocumentation","src":"7153:122:23","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:23","nodeType":"FunctionDefinition","parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"error","nameLocation":"7314:5:23","nodeType":"VariableDeclaration","scope":5502,"src":"7301:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5456,"nodeType":"UserDefinedTypeName","pathNode":{"id":5455,"name":"RecoverError","nameLocations":["7301:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5163,"src":"7301:12:23"},"referencedDeclaration":5163,"src":"7301:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5163","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:23","nodeType":"VariableDeclaration","scope":5502,"src":"7321:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:23"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[],"src":"7352:0:23"},"scope":5503,"src":"7280:532:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5504,"src":"344:7470:23","usedErrors":[5166,5171,5176],"usedEvents":[]}],"src":"112:7703:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[5589],"Strings":[5155]},"id":5590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5505,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5590,"sourceUnit":5156,"src":"149:39:24","symbolAliases":[{"foreign":{"id":5506,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"157:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":5508,"nodeType":"StructuredDocumentation","src":"190:330:24","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":5589,"linearizedBaseContracts":[5589],"name":"MessageHashUtils","nameLocation":"529:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":5517,"nodeType":"Block","src":"1339:341:24","statements":[{"AST":{"nativeSrc":"1374:300:24","nodeType":"YulBlock","src":"1374:300:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:24","nodeType":"YulLiteral","src":"1395:4:24","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:24","nodeType":"YulLiteral","src":"1401:34:24","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:24","nodeType":"YulIdentifier","src":"1388:6:24"},"nativeSrc":"1388:48:24","nodeType":"YulFunctionCall","src":"1388:48:24"},"nativeSrc":"1388:48:24","nodeType":"YulExpressionStatement","src":"1388:48:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:24","nodeType":"YulLiteral","src":"1497:4:24","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:24","nodeType":"YulIdentifier","src":"1503:11:24"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:24","nodeType":"YulIdentifier","src":"1490:6:24"},"nativeSrc":"1490:25:24","nodeType":"YulFunctionCall","src":"1490:25:24"},"nativeSrc":"1490:25:24","nodeType":"YulExpressionStatement","src":"1490:25:24"},{"nativeSrc":"1569:31:24","nodeType":"YulAssignment","src":"1569:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:24","nodeType":"YulLiteral","src":"1589:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:24","nodeType":"YulLiteral","src":"1595:4:24","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:24","nodeType":"YulIdentifier","src":"1579:9:24"},"nativeSrc":"1579:21:24","nodeType":"YulFunctionCall","src":"1579:21:24"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:24","nodeType":"YulIdentifier","src":"1569:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5514,"isOffset":false,"isSlot":false,"src":"1569:6:24","valueSize":1},{"declaration":5511,"isOffset":false,"isSlot":false,"src":"1503:11:24","valueSize":1}],"flags":["memory-safe"],"id":5516,"nodeType":"InlineAssembly","src":"1349:325:24"}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"552:690:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":5518,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:24","nodeType":"FunctionDefinition","parameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:24","nodeType":"VariableDeclaration","scope":5518,"src":"1279:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:24"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"digest","nameLocation":"1331:6:24","nodeType":"VariableDeclaration","scope":5518,"src":"1323:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:24"},"scope":5589,"src":"1247:433:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5543,"nodeType":"Block","src":"2257:143:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":5535,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"2366:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:24","memberName":"length","nodeType":"MemberAccess","src":"2366:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5533,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"2349:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5155_$","typeString":"type(library Strings)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:24","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3867,"src":"2349:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5531,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:24","typeDescriptions":{}}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5539,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"2384:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5527,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:24","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5526,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5525,"id":5542,"nodeType":"Return","src":"2267:126:24"}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"1686:480:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:24","nodeType":"FunctionDefinition","parameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"message","nameLocation":"2216:7:24","nodeType":"VariableDeclaration","scope":5544,"src":"2203:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5520,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:24"},"returnParameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5544,"src":"2248:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:24"},"scope":5589,"src":"2171:229:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5563,"nodeType":"Block","src":"2854:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5558,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"2910:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5559,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"2921:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5555,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5554,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5553,"id":5562,"nodeType":"Return","src":"2864:63:24"}]},"documentation":{"id":5545,"nodeType":"StructuredDocumentation","src":"2406:332:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":5564,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:24","nodeType":"FunctionDefinition","parameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"validator","nameLocation":"2792:9:24","nodeType":"VariableDeclaration","scope":5564,"src":"2784:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5546,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"data","nameLocation":"2816:4:24","nodeType":"VariableDeclaration","scope":5564,"src":"2803:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5548,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:24"},"returnParameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5564,"src":"2845:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:24"},"scope":5589,"src":"2743:191:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5575,"nodeType":"Block","src":"3216:216:24","statements":[{"AST":{"nativeSrc":"3251:175:24","nodeType":"YulBlock","src":"3251:175:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:24","nodeType":"YulLiteral","src":"3272:4:24","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:24","nodeType":"YulLiteral","src":"3278:10:24","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:24","nodeType":"YulIdentifier","src":"3265:6:24"},"nativeSrc":"3265:24:24","nodeType":"YulFunctionCall","src":"3265:24:24"},"nativeSrc":"3265:24:24","nodeType":"YulExpressionStatement","src":"3265:24:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:24","nodeType":"YulLiteral","src":"3309:4:24","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:24","nodeType":"YulLiteral","src":"3319:2:24","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:24","nodeType":"YulIdentifier","src":"3323:9:24"}],"functionName":{"name":"shl","nativeSrc":"3315:3:24","nodeType":"YulIdentifier","src":"3315:3:24"},"nativeSrc":"3315:18:24","nodeType":"YulFunctionCall","src":"3315:18:24"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:24","nodeType":"YulIdentifier","src":"3302:6:24"},"nativeSrc":"3302:32:24","nodeType":"YulFunctionCall","src":"3302:32:24"},"nativeSrc":"3302:32:24","nodeType":"YulExpressionStatement","src":"3302:32:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:24","nodeType":"YulLiteral","src":"3354:4:24","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:24","nodeType":"YulIdentifier","src":"3360:11:24"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:24","nodeType":"YulIdentifier","src":"3347:6:24"},"nativeSrc":"3347:25:24","nodeType":"YulFunctionCall","src":"3347:25:24"},"nativeSrc":"3347:25:24","nodeType":"YulExpressionStatement","src":"3347:25:24"},{"nativeSrc":"3385:31:24","nodeType":"YulAssignment","src":"3385:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:24","nodeType":"YulLiteral","src":"3405:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:24","nodeType":"YulLiteral","src":"3411:4:24","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:24","nodeType":"YulIdentifier","src":"3395:9:24"},"nativeSrc":"3395:21:24","nodeType":"YulFunctionCall","src":"3395:21:24"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:24","nodeType":"YulIdentifier","src":"3385:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5572,"isOffset":false,"isSlot":false,"src":"3385:6:24","valueSize":1},{"declaration":5569,"isOffset":false,"isSlot":false,"src":"3360:11:24","valueSize":1},{"declaration":5567,"isOffset":false,"isSlot":false,"src":"3323:9:24","valueSize":1}],"flags":["memory-safe"],"id":5574,"nodeType":"InlineAssembly","src":"3226:200:24"}]},"documentation":{"id":5565,"nodeType":"StructuredDocumentation","src":"2940:129:24","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":5576,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:24","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"validator","nameLocation":"3132:9:24","nodeType":"VariableDeclaration","scope":5576,"src":"3124:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5566,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5569,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:24","nodeType":"VariableDeclaration","scope":5576,"src":"3151:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:24"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"digest","nameLocation":"3208:6:24","nodeType":"VariableDeclaration","scope":5576,"src":"3200:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:24"},"scope":5589,"src":"3074:358:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"3983:265:24","statements":[{"AST":{"nativeSrc":"4018:224:24","nodeType":"YulBlock","src":"4018:224:24","statements":[{"nativeSrc":"4032:22:24","nodeType":"YulVariableDeclaration","src":"4032:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:24","nodeType":"YulLiteral","src":"4049:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:24","nodeType":"YulIdentifier","src":"4043:5:24"},"nativeSrc":"4043:11:24","nodeType":"YulFunctionCall","src":"4043:11:24"},"variables":[{"name":"ptr","nativeSrc":"4036:3:24","nodeType":"YulTypedName","src":"4036:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:24","nodeType":"YulIdentifier","src":"4074:3:24"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:24","nodeType":"YulLiteral","src":"4079:10:24","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:24","nodeType":"YulIdentifier","src":"4067:6:24"},"nativeSrc":"4067:23:24","nodeType":"YulFunctionCall","src":"4067:23:24"},"nativeSrc":"4067:23:24","nodeType":"YulExpressionStatement","src":"4067:23:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:24","nodeType":"YulIdentifier","src":"4114:3:24"},{"kind":"number","nativeSrc":"4119:4:24","nodeType":"YulLiteral","src":"4119:4:24","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:24","nodeType":"YulIdentifier","src":"4110:3:24"},"nativeSrc":"4110:14:24","nodeType":"YulFunctionCall","src":"4110:14:24"},{"name":"domainSeparator","nativeSrc":"4126:15:24","nodeType":"YulIdentifier","src":"4126:15:24"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:24","nodeType":"YulIdentifier","src":"4103:6:24"},"nativeSrc":"4103:39:24","nodeType":"YulFunctionCall","src":"4103:39:24"},"nativeSrc":"4103:39:24","nodeType":"YulExpressionStatement","src":"4103:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:24","nodeType":"YulIdentifier","src":"4166:3:24"},{"kind":"number","nativeSrc":"4171:4:24","nodeType":"YulLiteral","src":"4171:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:24","nodeType":"YulIdentifier","src":"4162:3:24"},"nativeSrc":"4162:14:24","nodeType":"YulFunctionCall","src":"4162:14:24"},{"name":"structHash","nativeSrc":"4178:10:24","nodeType":"YulIdentifier","src":"4178:10:24"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:24","nodeType":"YulIdentifier","src":"4155:6:24"},"nativeSrc":"4155:34:24","nodeType":"YulFunctionCall","src":"4155:34:24"},"nativeSrc":"4155:34:24","nodeType":"YulExpressionStatement","src":"4155:34:24"},{"nativeSrc":"4202:30:24","nodeType":"YulAssignment","src":"4202:30:24","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:24","nodeType":"YulIdentifier","src":"4222:3:24"},{"kind":"number","nativeSrc":"4227:4:24","nodeType":"YulLiteral","src":"4227:4:24","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:24","nodeType":"YulIdentifier","src":"4212:9:24"},"nativeSrc":"4212:20:24","nodeType":"YulFunctionCall","src":"4212:20:24"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:24","nodeType":"YulIdentifier","src":"4202:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5584,"isOffset":false,"isSlot":false,"src":"4202:6:24","valueSize":1},{"declaration":5579,"isOffset":false,"isSlot":false,"src":"4126:15:24","valueSize":1},{"declaration":5581,"isOffset":false,"isSlot":false,"src":"4178:10:24","valueSize":1}],"flags":["memory-safe"],"id":5586,"nodeType":"InlineAssembly","src":"3993:249:24"}]},"documentation":{"id":5577,"nodeType":"StructuredDocumentation","src":"3438:431:24","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:24","nodeType":"FunctionDefinition","parameters":{"id":5582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:24","nodeType":"VariableDeclaration","scope":5588,"src":"3899:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5581,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:24","nodeType":"VariableDeclaration","scope":5588,"src":"3924:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:24"},"returnParameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"digest","nameLocation":"3975:6:24","nodeType":"VariableDeclaration","scope":5588,"src":"3967:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:24"},"scope":5589,"src":"3874:374:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5590,"src":"521:3729:24","usedErrors":[],"usedEvents":[]}],"src":"123:4128:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5601]},"id":5602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5591,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"141:280:25","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5601,"linearizedBaseContracts":[5601],"name":"IERC165","nameLocation":"432:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"446:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5600,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:25","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:25","nodeType":"VariableDeclaration","scope":5600,"src":"818:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5594,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:25"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5600,"src":"861:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5597,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:25"},"scope":5601,"src":"791:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5602,"src":"422:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:755:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7222],"Panic":[3499],"SafeCast":[8987]},"id":7223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5603,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7223,"sourceUnit":3500,"src":"129:35:26","symbolAliases":[{"foreign":{"id":5604,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"137:5:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7223,"sourceUnit":8988,"src":"165:40:26","symbolAliases":[{"foreign":{"id":5606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5608,"nodeType":"StructuredDocumentation","src":"207:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7222,"linearizedBaseContracts":[7222],"name":"Math","nameLocation":"289:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5613,"members":[{"id":5609,"name":"Floor","nameLocation":"324:5:26","nodeType":"EnumValue","src":"324:5:26"},{"id":5610,"name":"Ceil","nameLocation":"367:4:26","nodeType":"EnumValue","src":"367:4:26"},{"id":5611,"name":"Trunc","nameLocation":"409:5:26","nodeType":"EnumValue","src":"409:5:26"},{"id":5612,"name":"Expand","nameLocation":"439:6:26","nodeType":"EnumValue","src":"439:6:26"}],"name":"Rounding","nameLocation":"305:8:26","nodeType":"EnumDefinition","src":"300:169:26"},{"body":{"id":5626,"nodeType":"Block","src":"731:112:26","statements":[{"AST":{"nativeSrc":"766:71:26","nodeType":"YulBlock","src":"766:71:26","statements":[{"nativeSrc":"780:16:26","nodeType":"YulAssignment","src":"780:16:26","value":{"arguments":[{"name":"a","nativeSrc":"791:1:26","nodeType":"YulIdentifier","src":"791:1:26"},{"name":"b","nativeSrc":"794:1:26","nodeType":"YulIdentifier","src":"794:1:26"}],"functionName":{"name":"add","nativeSrc":"787:3:26","nodeType":"YulIdentifier","src":"787:3:26"},"nativeSrc":"787:9:26","nodeType":"YulFunctionCall","src":"787:9:26"},"variableNames":[{"name":"low","nativeSrc":"780:3:26","nodeType":"YulIdentifier","src":"780:3:26"}]},{"nativeSrc":"809:18:26","nodeType":"YulAssignment","src":"809:18:26","value":{"arguments":[{"name":"low","nativeSrc":"820:3:26","nodeType":"YulIdentifier","src":"820:3:26"},{"name":"a","nativeSrc":"825:1:26","nodeType":"YulIdentifier","src":"825:1:26"}],"functionName":{"name":"lt","nativeSrc":"817:2:26","nodeType":"YulIdentifier","src":"817:2:26"},"nativeSrc":"817:10:26","nodeType":"YulFunctionCall","src":"817:10:26"},"variableNames":[{"name":"high","nativeSrc":"809:4:26","nodeType":"YulIdentifier","src":"809:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5616,"isOffset":false,"isSlot":false,"src":"791:1:26","valueSize":1},{"declaration":5616,"isOffset":false,"isSlot":false,"src":"825:1:26","valueSize":1},{"declaration":5618,"isOffset":false,"isSlot":false,"src":"794:1:26","valueSize":1},{"declaration":5621,"isOffset":false,"isSlot":false,"src":"809:4:26","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"780:3:26","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"820:3:26","valueSize":1}],"flags":["memory-safe"],"id":5625,"nodeType":"InlineAssembly","src":"741:96:26"}]},"documentation":{"id":5614,"nodeType":"StructuredDocumentation","src":"475:163:26","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:26","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"a","nameLocation":"667:1:26","nodeType":"VariableDeclaration","scope":5627,"src":"659:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5618,"mutability":"mutable","name":"b","nameLocation":"678:1:26","nodeType":"VariableDeclaration","scope":5627,"src":"670:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:26"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"high","nameLocation":"712:4:26","nodeType":"VariableDeclaration","scope":5627,"src":"704:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5623,"mutability":"mutable","name":"low","nameLocation":"726:3:26","nodeType":"VariableDeclaration","scope":5627,"src":"718:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:26"},"scope":7222,"src":"643:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5640,"nodeType":"Block","src":"1115:462:26","statements":[{"AST":{"nativeSrc":"1437:134:26","nodeType":"YulBlock","src":"1437:134:26","statements":[{"nativeSrc":"1451:30:26","nodeType":"YulVariableDeclaration","src":"1451:30:26","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:26","nodeType":"YulIdentifier","src":"1468:1:26"},{"name":"b","nativeSrc":"1471:1:26","nodeType":"YulIdentifier","src":"1471:1:26"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:26","nodeType":"YulLiteral","src":"1478:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:26","nodeType":"YulIdentifier","src":"1474:3:26"},"nativeSrc":"1474:6:26","nodeType":"YulFunctionCall","src":"1474:6:26"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:26","nodeType":"YulIdentifier","src":"1461:6:26"},"nativeSrc":"1461:20:26","nodeType":"YulFunctionCall","src":"1461:20:26"},"variables":[{"name":"mm","nativeSrc":"1455:2:26","nodeType":"YulTypedName","src":"1455:2:26","type":""}]},{"nativeSrc":"1494:16:26","nodeType":"YulAssignment","src":"1494:16:26","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:26","nodeType":"YulIdentifier","src":"1505:1:26"},{"name":"b","nativeSrc":"1508:1:26","nodeType":"YulIdentifier","src":"1508:1:26"}],"functionName":{"name":"mul","nativeSrc":"1501:3:26","nodeType":"YulIdentifier","src":"1501:3:26"},"nativeSrc":"1501:9:26","nodeType":"YulFunctionCall","src":"1501:9:26"},"variableNames":[{"name":"low","nativeSrc":"1494:3:26","nodeType":"YulIdentifier","src":"1494:3:26"}]},{"nativeSrc":"1523:38:26","nodeType":"YulAssignment","src":"1523:38:26","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:26","nodeType":"YulIdentifier","src":"1539:2:26"},{"name":"low","nativeSrc":"1543:3:26","nodeType":"YulIdentifier","src":"1543:3:26"}],"functionName":{"name":"sub","nativeSrc":"1535:3:26","nodeType":"YulIdentifier","src":"1535:3:26"},"nativeSrc":"1535:12:26","nodeType":"YulFunctionCall","src":"1535:12:26"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:26","nodeType":"YulIdentifier","src":"1552:2:26"},{"name":"low","nativeSrc":"1556:3:26","nodeType":"YulIdentifier","src":"1556:3:26"}],"functionName":{"name":"lt","nativeSrc":"1549:2:26","nodeType":"YulIdentifier","src":"1549:2:26"},"nativeSrc":"1549:11:26","nodeType":"YulFunctionCall","src":"1549:11:26"}],"functionName":{"name":"sub","nativeSrc":"1531:3:26","nodeType":"YulIdentifier","src":"1531:3:26"},"nativeSrc":"1531:30:26","nodeType":"YulFunctionCall","src":"1531:30:26"},"variableNames":[{"name":"high","nativeSrc":"1523:4:26","nodeType":"YulIdentifier","src":"1523:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5630,"isOffset":false,"isSlot":false,"src":"1468:1:26","valueSize":1},{"declaration":5630,"isOffset":false,"isSlot":false,"src":"1505:1:26","valueSize":1},{"declaration":5632,"isOffset":false,"isSlot":false,"src":"1471:1:26","valueSize":1},{"declaration":5632,"isOffset":false,"isSlot":false,"src":"1508:1:26","valueSize":1},{"declaration":5635,"isOffset":false,"isSlot":false,"src":"1523:4:26","valueSize":1},{"declaration":5637,"isOffset":false,"isSlot":false,"src":"1494:3:26","valueSize":1},{"declaration":5637,"isOffset":false,"isSlot":false,"src":"1543:3:26","valueSize":1},{"declaration":5637,"isOffset":false,"isSlot":false,"src":"1556:3:26","valueSize":1}],"flags":["memory-safe"],"id":5639,"nodeType":"InlineAssembly","src":"1412:159:26"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"849:173:26","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5641,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:26","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"a","nameLocation":"1051:1:26","nodeType":"VariableDeclaration","scope":5641,"src":"1043:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"b","nameLocation":"1062:1:26","nodeType":"VariableDeclaration","scope":5641,"src":"1054:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:26"},"returnParameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"high","nameLocation":"1096:4:26","nodeType":"VariableDeclaration","scope":5641,"src":"1088:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5637,"mutability":"mutable","name":"low","nameLocation":"1110:3:26","nodeType":"VariableDeclaration","scope":5641,"src":"1102:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:26"},"scope":7222,"src":"1027:550:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"1784:149:26","statements":[{"id":5674,"nodeType":"UncheckedBlock","src":"1794:133:26","statements":[{"assignments":[5654],"declarations":[{"constant":false,"id":5654,"mutability":"mutable","name":"c","nameLocation":"1826:1:26","nodeType":"VariableDeclaration","scope":5674,"src":"1818:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5658,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"1830:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"1834:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:26"},{"expression":{"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5659,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"1849:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1859:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5661,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"1864:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5664,"nodeType":"ExpressionStatement","src":"1849:16:26"},{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"1879:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5669,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"1908:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5667,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"1892:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"1892:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"1879:37:26"}]}]},"documentation":{"id":5642,"nodeType":"StructuredDocumentation","src":"1583:105:26","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:26","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"a","nameLocation":"1717:1:26","nodeType":"VariableDeclaration","scope":5676,"src":"1709:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5646,"mutability":"mutable","name":"b","nameLocation":"1728:1:26","nodeType":"VariableDeclaration","scope":5676,"src":"1720:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:26"},"returnParameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"success","nameLocation":"1759:7:26","nodeType":"VariableDeclaration","scope":5676,"src":"1754:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5648,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5651,"mutability":"mutable","name":"result","nameLocation":"1776:6:26","nodeType":"VariableDeclaration","scope":5676,"src":"1768:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:26"},"scope":7222,"src":"1693:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5710,"nodeType":"Block","src":"2143:149:26","statements":[{"id":5709,"nodeType":"UncheckedBlock","src":"2153:133:26","statements":[{"assignments":[5689],"declarations":[{"constant":false,"id":5689,"mutability":"mutable","name":"c","nameLocation":"2185:1:26","nodeType":"VariableDeclaration","scope":5709,"src":"2177:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"2189:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"2193:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:26"},{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"2208:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"2218:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"2223:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5699,"nodeType":"ExpressionStatement","src":"2208:16:26"},{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"2238:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"2247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5704,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"2267:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5702,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"2251:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"2251:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5708,"nodeType":"ExpressionStatement","src":"2238:37:26"}]}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"1939:108:26","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5711,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:26","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"a","nameLocation":"2076:1:26","nodeType":"VariableDeclaration","scope":5711,"src":"2068:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5681,"mutability":"mutable","name":"b","nameLocation":"2087:1:26","nodeType":"VariableDeclaration","scope":5711,"src":"2079:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:26"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"success","nameLocation":"2118:7:26","nodeType":"VariableDeclaration","scope":5711,"src":"2113:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5683,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"result","nameLocation":"2135:6:26","nodeType":"VariableDeclaration","scope":5711,"src":"2127:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:26"},"scope":7222,"src":"2052:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"2505:391:26","statements":[{"id":5739,"nodeType":"UncheckedBlock","src":"2515:375:26","statements":[{"assignments":[5724],"declarations":[{"constant":false,"id":5724,"mutability":"mutable","name":"c","nameLocation":"2547:1:26","nodeType":"VariableDeclaration","scope":5739,"src":"2539:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"2551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"2555:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:26"},{"AST":{"nativeSrc":"2595:188:26","nodeType":"YulBlock","src":"2595:188:26","statements":[{"nativeSrc":"2727:42:26","nodeType":"YulAssignment","src":"2727:42:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:26","nodeType":"YulIdentifier","src":"2748:1:26"},{"name":"a","nativeSrc":"2751:1:26","nodeType":"YulIdentifier","src":"2751:1:26"}],"functionName":{"name":"div","nativeSrc":"2744:3:26","nodeType":"YulIdentifier","src":"2744:3:26"},"nativeSrc":"2744:9:26","nodeType":"YulFunctionCall","src":"2744:9:26"},{"name":"b","nativeSrc":"2755:1:26","nodeType":"YulIdentifier","src":"2755:1:26"}],"functionName":{"name":"eq","nativeSrc":"2741:2:26","nodeType":"YulIdentifier","src":"2741:2:26"},"nativeSrc":"2741:16:26","nodeType":"YulFunctionCall","src":"2741:16:26"},{"arguments":[{"name":"a","nativeSrc":"2766:1:26","nodeType":"YulIdentifier","src":"2766:1:26"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:26","nodeType":"YulIdentifier","src":"2759:6:26"},"nativeSrc":"2759:9:26","nodeType":"YulFunctionCall","src":"2759:9:26"}],"functionName":{"name":"or","nativeSrc":"2738:2:26","nodeType":"YulIdentifier","src":"2738:2:26"},"nativeSrc":"2738:31:26","nodeType":"YulFunctionCall","src":"2738:31:26"},"variableNames":[{"name":"success","nativeSrc":"2727:7:26","nodeType":"YulIdentifier","src":"2727:7:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5714,"isOffset":false,"isSlot":false,"src":"2751:1:26","valueSize":1},{"declaration":5714,"isOffset":false,"isSlot":false,"src":"2766:1:26","valueSize":1},{"declaration":5716,"isOffset":false,"isSlot":false,"src":"2755:1:26","valueSize":1},{"declaration":5724,"isOffset":false,"isSlot":false,"src":"2748:1:26","valueSize":1},{"declaration":5719,"isOffset":false,"isSlot":false,"src":"2727:7:26","valueSize":1}],"flags":["memory-safe"],"id":5729,"nodeType":"InlineAssembly","src":"2570:213:26"},{"expression":{"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"2842:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"2851:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5734,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"2871:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"2855:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"2855:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5738,"nodeType":"ExpressionStatement","src":"2842:37:26"}]}]},"documentation":{"id":5712,"nodeType":"StructuredDocumentation","src":"2298:111:26","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:26","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"a","nameLocation":"2438:1:26","nodeType":"VariableDeclaration","scope":5741,"src":"2430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5716,"mutability":"mutable","name":"b","nameLocation":"2449:1:26","nodeType":"VariableDeclaration","scope":5741,"src":"2441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:26"},"returnParameters":{"id":5722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"success","nameLocation":"2480:7:26","nodeType":"VariableDeclaration","scope":5741,"src":"2475:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5718,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5721,"mutability":"mutable","name":"result","nameLocation":"2497:6:26","nodeType":"VariableDeclaration","scope":5741,"src":"2489:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:26"},"scope":7222,"src":"2414:482:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5761,"nodeType":"Block","src":"3111:231:26","statements":[{"id":5760,"nodeType":"UncheckedBlock","src":"3121:215:26","statements":[{"expression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3145:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"3155:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5758,"nodeType":"ExpressionStatement","src":"3145:15:26"},{"AST":{"nativeSrc":"3199:127:26","nodeType":"YulBlock","src":"3199:127:26","statements":[{"nativeSrc":"3293:19:26","nodeType":"YulAssignment","src":"3293:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:26","nodeType":"YulIdentifier","src":"3307:1:26"},{"name":"b","nativeSrc":"3310:1:26","nodeType":"YulIdentifier","src":"3310:1:26"}],"functionName":{"name":"div","nativeSrc":"3303:3:26","nodeType":"YulIdentifier","src":"3303:3:26"},"nativeSrc":"3303:9:26","nodeType":"YulFunctionCall","src":"3303:9:26"},"variableNames":[{"name":"result","nativeSrc":"3293:6:26","nodeType":"YulIdentifier","src":"3293:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5744,"isOffset":false,"isSlot":false,"src":"3307:1:26","valueSize":1},{"declaration":5746,"isOffset":false,"isSlot":false,"src":"3310:1:26","valueSize":1},{"declaration":5751,"isOffset":false,"isSlot":false,"src":"3293:6:26","valueSize":1}],"flags":["memory-safe"],"id":5759,"nodeType":"InlineAssembly","src":"3174:152:26"}]}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"2902:113:26","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:26","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"a","nameLocation":"3044:1:26","nodeType":"VariableDeclaration","scope":5762,"src":"3036:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5746,"mutability":"mutable","name":"b","nameLocation":"3055:1:26","nodeType":"VariableDeclaration","scope":5762,"src":"3047:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:26"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"success","nameLocation":"3086:7:26","nodeType":"VariableDeclaration","scope":5762,"src":"3081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5748,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"result","nameLocation":"3103:6:26","nodeType":"VariableDeclaration","scope":5762,"src":"3095:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:26"},"scope":7222,"src":"3020:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"3567:231:26","statements":[{"id":5781,"nodeType":"UncheckedBlock","src":"3577:215:26","statements":[{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5774,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"3601:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"3611:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5779,"nodeType":"ExpressionStatement","src":"3601:15:26"},{"AST":{"nativeSrc":"3655:127:26","nodeType":"YulBlock","src":"3655:127:26","statements":[{"nativeSrc":"3749:19:26","nodeType":"YulAssignment","src":"3749:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:26","nodeType":"YulIdentifier","src":"3763:1:26"},{"name":"b","nativeSrc":"3766:1:26","nodeType":"YulIdentifier","src":"3766:1:26"}],"functionName":{"name":"mod","nativeSrc":"3759:3:26","nodeType":"YulIdentifier","src":"3759:3:26"},"nativeSrc":"3759:9:26","nodeType":"YulFunctionCall","src":"3759:9:26"},"variableNames":[{"name":"result","nativeSrc":"3749:6:26","nodeType":"YulIdentifier","src":"3749:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5765,"isOffset":false,"isSlot":false,"src":"3763:1:26","valueSize":1},{"declaration":5767,"isOffset":false,"isSlot":false,"src":"3766:1:26","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"3749:6:26","valueSize":1}],"flags":["memory-safe"],"id":5780,"nodeType":"InlineAssembly","src":"3630:152:26"}]}]},"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"3348:123:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:26","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"a","nameLocation":"3500:1:26","nodeType":"VariableDeclaration","scope":5783,"src":"3492:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"b","nameLocation":"3511:1:26","nodeType":"VariableDeclaration","scope":5783,"src":"3503:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:26"},"returnParameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"success","nameLocation":"3542:7:26","nodeType":"VariableDeclaration","scope":5783,"src":"3537:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5769,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5772,"mutability":"mutable","name":"result","nameLocation":"3559:6:26","nodeType":"VariableDeclaration","scope":5783,"src":"3551:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:26"},"scope":7222,"src":"3476:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"3989:122:26","statements":[{"assignments":[5794,5796],"declarations":[{"constant":false,"id":5794,"mutability":"mutable","name":"success","nameLocation":"4005:7:26","nodeType":"VariableDeclaration","scope":5812,"src":"4000:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5793,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5796,"mutability":"mutable","name":"result","nameLocation":"4022:6:26","nodeType":"VariableDeclaration","scope":5812,"src":"4014:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5801,"initialValue":{"arguments":[{"id":5798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"4039:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"4042:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5797,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"4032:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:26"},{"expression":{"arguments":[{"id":5803,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"4069:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"4078:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:26","memberName":"max","nodeType":"MemberAccess","src":"4086:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"4061:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5792,"id":5811,"nodeType":"Return","src":"4054:50:26"}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"3804:103:26","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:26","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"a","nameLocation":"3943:1:26","nodeType":"VariableDeclaration","scope":5813,"src":"3935:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5788,"mutability":"mutable","name":"b","nameLocation":"3954:1:26","nodeType":"VariableDeclaration","scope":5813,"src":"3946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:26"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"3980:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:26"},"scope":7222,"src":"3912:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5832,"nodeType":"Block","src":"4294:73:26","statements":[{"assignments":[null,5824],"declarations":[null,{"constant":false,"id":5824,"mutability":"mutable","name":"result","nameLocation":"4315:6:26","nodeType":"VariableDeclaration","scope":5832,"src":"4307:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5829,"initialValue":{"arguments":[{"id":5826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"4332:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"4335:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5825,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"4325:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:26"},{"expression":{"id":5830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"4354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5822,"id":5831,"nodeType":"Return","src":"4347:13:26"}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"4117:95:26","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5833,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:26","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"a","nameLocation":"4248:1:26","nodeType":"VariableDeclaration","scope":5833,"src":"4240:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"b","nameLocation":"4259:1:26","nodeType":"VariableDeclaration","scope":5833,"src":"4251:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:26"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5833,"src":"4285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:26"},"scope":7222,"src":"4217:150:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"4564:122:26","statements":[{"assignments":[5844,5846],"declarations":[{"constant":false,"id":5844,"mutability":"mutable","name":"success","nameLocation":"4580:7:26","nodeType":"VariableDeclaration","scope":5862,"src":"4575:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5843,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5846,"mutability":"mutable","name":"result","nameLocation":"4597:6:26","nodeType":"VariableDeclaration","scope":5862,"src":"4589:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5851,"initialValue":{"arguments":[{"id":5848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"4614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4617:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"4607:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:26"},{"expression":{"arguments":[{"id":5853,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"4644:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"4653:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:26","memberName":"max","nodeType":"MemberAccess","src":"4661:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5852,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"4636:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5842,"id":5861,"nodeType":"Return","src":"4629:50:26"}]},"documentation":{"id":5834,"nodeType":"StructuredDocumentation","src":"4373:109:26","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:26","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"a","nameLocation":"4518:1:26","nodeType":"VariableDeclaration","scope":5863,"src":"4510:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"b","nameLocation":"4529:1:26","nodeType":"VariableDeclaration","scope":5863,"src":"4521:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:26"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"4555:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:26"},"scope":7222,"src":"4487:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5889,"nodeType":"Block","src":"5158:207:26","statements":[{"id":5888,"nodeType":"UncheckedBlock","src":"5168:191:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"5306:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"5312:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5877,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"5316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5882,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5337:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5880,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"5321:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"5321:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5874,"id":5887,"nodeType":"Return","src":"5299:49:26"}]}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"4692:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5890,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:26","nodeType":"FunctionDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"condition","nameLocation":"5093:9:26","nodeType":"VariableDeclaration","scope":5890,"src":"5088:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5865,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5868,"mutability":"mutable","name":"a","nameLocation":"5112:1:26","nodeType":"VariableDeclaration","scope":5890,"src":"5104:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5870,"mutability":"mutable","name":"b","nameLocation":"5123:1:26","nodeType":"VariableDeclaration","scope":5890,"src":"5115:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:26"},"returnParameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5890,"src":"5149:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:26"},"scope":7222,"src":"5071:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"5502:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"5527:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"5531:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"5534:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"5537:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5900,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"5519:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5899,"id":5907,"nodeType":"Return","src":"5512:27:26"}]},"documentation":{"id":5891,"nodeType":"StructuredDocumentation","src":"5371:59:26","text":" @dev Returns the largest of two numbers."},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:26","nodeType":"FunctionDefinition","parameters":{"id":5896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"a","nameLocation":"5456:1:26","nodeType":"VariableDeclaration","scope":5909,"src":"5448:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5895,"mutability":"mutable","name":"b","nameLocation":"5467:1:26","nodeType":"VariableDeclaration","scope":5909,"src":"5459:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:26"},"returnParameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"5493:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:26"},"scope":7222,"src":"5435:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"5684:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"5709:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5713:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"5716:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5719:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"5701:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5918,"id":5926,"nodeType":"Return","src":"5694:27:26"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"5552:60:26","text":" @dev Returns the smallest of two numbers."},"id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:26","nodeType":"FunctionDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"a","nameLocation":"5638:1:26","nodeType":"VariableDeclaration","scope":5928,"src":"5630:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5914,"mutability":"mutable","name":"b","nameLocation":"5649:1:26","nodeType":"VariableDeclaration","scope":5928,"src":"5641:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:26"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5928,"src":"5675:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:26"},"scope":7222,"src":"5617:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5950,"nodeType":"Block","src":"5912:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5967:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"5971:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"5981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5937,"id":5949,"nodeType":"Return","src":"5959:28:26"}]},"documentation":{"id":5929,"nodeType":"StructuredDocumentation","src":"5734:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5951,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:26","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"a","nameLocation":"5866:1:26","nodeType":"VariableDeclaration","scope":5951,"src":"5858:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5933,"mutability":"mutable","name":"b","nameLocation":"5877:1:26","nodeType":"VariableDeclaration","scope":5951,"src":"5869:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:26"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5951,"src":"5903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:26"},"scope":7222,"src":"5841:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5991,"nodeType":"Block","src":"6286:633:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"6300:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"nodeType":"IfStatement","src":"6296:150:26","trueBody":{"id":5971,"nodeType":"Block","src":"6308:138:26","statements":[{"expression":{"arguments":[{"expression":{"id":5967,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6412:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"6412:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5964,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6400:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"6400:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5970,"nodeType":"ExpressionStatement","src":"6400:35:26"}]}},{"id":5990,"nodeType":"UncheckedBlock","src":"6829:84:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"6876:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5973,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"6860:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"6860:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"6887:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"6896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5960,"id":5989,"nodeType":"Return","src":"6853:49:26"}]}]},"documentation":{"id":5952,"nodeType":"StructuredDocumentation","src":"6000:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5992,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:26","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"a","nameLocation":"6240:1:26","nodeType":"VariableDeclaration","scope":5992,"src":"6232:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5956,"mutability":"mutable","name":"b","nameLocation":"6251:1:26","nodeType":"VariableDeclaration","scope":5992,"src":"6243:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:26"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5992,"src":"6277:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:26"},"scope":7222,"src":"6215:704:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"7340:3585:26","statements":[{"id":6126,"nodeType":"UncheckedBlock","src":"7350:3569:26","statements":[{"assignments":[6005,6007],"declarations":[{"constant":false,"id":6005,"mutability":"mutable","name":"high","nameLocation":"7383:4:26","nodeType":"VariableDeclaration","scope":6126,"src":"7375:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"low","nameLocation":"7397:3:26","nodeType":"VariableDeclaration","scope":6126,"src":"7389:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6012,"initialValue":{"arguments":[{"id":6009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"7411:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"7414:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6008,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"7404:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"7498:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"7494:365:26","trueBody":{"id":6020,"nodeType":"Block","src":"7509:350:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"7827:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"7833:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6003,"id":6019,"nodeType":"Return","src":"7820:24:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"7969:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6023,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"7984:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"7965:142:26","trueBody":{"id":6039,"nodeType":"Block","src":"7990:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"8028:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6032,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"8046:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6034,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"8070:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3462,"src":"8070:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6028,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"8020:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6025,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"8008:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"8008:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"ExpressionStatement","src":"8008:84:26"}]}},{"assignments":[6042],"declarations":[{"constant":false,"id":6042,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:26","nodeType":"VariableDeclaration","scope":6126,"src":"8359:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6043,"nodeType":"VariableDeclarationStatement","src":"8359:17:26"},{"AST":{"nativeSrc":"8415:283:26","nodeType":"YulBlock","src":"8415:283:26","statements":[{"nativeSrc":"8484:38:26","nodeType":"YulAssignment","src":"8484:38:26","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:26","nodeType":"YulIdentifier","src":"8504:1:26"},{"name":"y","nativeSrc":"8507:1:26","nodeType":"YulIdentifier","src":"8507:1:26"},{"name":"denominator","nativeSrc":"8510:11:26","nodeType":"YulIdentifier","src":"8510:11:26"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:26","nodeType":"YulIdentifier","src":"8497:6:26"},"nativeSrc":"8497:25:26","nodeType":"YulFunctionCall","src":"8497:25:26"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:26","nodeType":"YulIdentifier","src":"8484:9:26"}]},{"nativeSrc":"8604:37:26","nodeType":"YulAssignment","src":"8604:37:26","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:26","nodeType":"YulIdentifier","src":"8616:4:26"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:26","nodeType":"YulIdentifier","src":"8625:9:26"},{"name":"low","nativeSrc":"8636:3:26","nodeType":"YulIdentifier","src":"8636:3:26"}],"functionName":{"name":"gt","nativeSrc":"8622:2:26","nodeType":"YulIdentifier","src":"8622:2:26"},"nativeSrc":"8622:18:26","nodeType":"YulFunctionCall","src":"8622:18:26"}],"functionName":{"name":"sub","nativeSrc":"8612:3:26","nodeType":"YulIdentifier","src":"8612:3:26"},"nativeSrc":"8612:29:26","nodeType":"YulFunctionCall","src":"8612:29:26"},"variableNames":[{"name":"high","nativeSrc":"8604:4:26","nodeType":"YulIdentifier","src":"8604:4:26"}]},{"nativeSrc":"8658:26:26","nodeType":"YulAssignment","src":"8658:26:26","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:26","nodeType":"YulIdentifier","src":"8669:3:26"},{"name":"remainder","nativeSrc":"8674:9:26","nodeType":"YulIdentifier","src":"8674:9:26"}],"functionName":{"name":"sub","nativeSrc":"8665:3:26","nodeType":"YulIdentifier","src":"8665:3:26"},"nativeSrc":"8665:19:26","nodeType":"YulFunctionCall","src":"8665:19:26"},"variableNames":[{"name":"low","nativeSrc":"8658:3:26","nodeType":"YulIdentifier","src":"8658:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5999,"isOffset":false,"isSlot":false,"src":"8510:11:26","valueSize":1},{"declaration":6005,"isOffset":false,"isSlot":false,"src":"8604:4:26","valueSize":1},{"declaration":6005,"isOffset":false,"isSlot":false,"src":"8616:4:26","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"8636:3:26","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"8658:3:26","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"8669:3:26","valueSize":1},{"declaration":6042,"isOffset":false,"isSlot":false,"src":"8484:9:26","valueSize":1},{"declaration":6042,"isOffset":false,"isSlot":false,"src":"8625:9:26","valueSize":1},{"declaration":6042,"isOffset":false,"isSlot":false,"src":"8674:9:26","valueSize":1},{"declaration":5995,"isOffset":false,"isSlot":false,"src":"8504:1:26","valueSize":1},{"declaration":5997,"isOffset":false,"isSlot":false,"src":"8507:1:26","valueSize":1}],"flags":["memory-safe"],"id":6044,"nodeType":"InlineAssembly","src":"8390:308:26"},{"assignments":[6046],"declarations":[{"constant":false,"id":6046,"mutability":"mutable","name":"twos","nameLocation":"8910:4:26","nodeType":"VariableDeclaration","scope":6126,"src":"8902:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"8917:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6049,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"8936:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:26"},{"AST":{"nativeSrc":"8987:359:26","nodeType":"YulBlock","src":"8987:359:26","statements":[{"nativeSrc":"9052:37:26","nodeType":"YulAssignment","src":"9052:37:26","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:26","nodeType":"YulIdentifier","src":"9071:11:26"},{"name":"twos","nativeSrc":"9084:4:26","nodeType":"YulIdentifier","src":"9084:4:26"}],"functionName":{"name":"div","nativeSrc":"9067:3:26","nodeType":"YulIdentifier","src":"9067:3:26"},"nativeSrc":"9067:22:26","nodeType":"YulFunctionCall","src":"9067:22:26"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:26","nodeType":"YulIdentifier","src":"9052:11:26"}]},{"nativeSrc":"9153:21:26","nodeType":"YulAssignment","src":"9153:21:26","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:26","nodeType":"YulIdentifier","src":"9164:3:26"},{"name":"twos","nativeSrc":"9169:4:26","nodeType":"YulIdentifier","src":"9169:4:26"}],"functionName":{"name":"div","nativeSrc":"9160:3:26","nodeType":"YulIdentifier","src":"9160:3:26"},"nativeSrc":"9160:14:26","nodeType":"YulFunctionCall","src":"9160:14:26"},"variableNames":[{"name":"low","nativeSrc":"9153:3:26","nodeType":"YulIdentifier","src":"9153:3:26"}]},{"nativeSrc":"9293:39:26","nodeType":"YulAssignment","src":"9293:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:26","nodeType":"YulLiteral","src":"9313:1:26","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:26","nodeType":"YulIdentifier","src":"9316:4:26"}],"functionName":{"name":"sub","nativeSrc":"9309:3:26","nodeType":"YulIdentifier","src":"9309:3:26"},"nativeSrc":"9309:12:26","nodeType":"YulFunctionCall","src":"9309:12:26"},{"name":"twos","nativeSrc":"9323:4:26","nodeType":"YulIdentifier","src":"9323:4:26"}],"functionName":{"name":"div","nativeSrc":"9305:3:26","nodeType":"YulIdentifier","src":"9305:3:26"},"nativeSrc":"9305:23:26","nodeType":"YulFunctionCall","src":"9305:23:26"},{"kind":"number","nativeSrc":"9330:1:26","nodeType":"YulLiteral","src":"9330:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:26","nodeType":"YulIdentifier","src":"9301:3:26"},"nativeSrc":"9301:31:26","nodeType":"YulFunctionCall","src":"9301:31:26"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:26","nodeType":"YulIdentifier","src":"9293:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5999,"isOffset":false,"isSlot":false,"src":"9052:11:26","valueSize":1},{"declaration":5999,"isOffset":false,"isSlot":false,"src":"9071:11:26","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"9153:3:26","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"9164:3:26","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"9084:4:26","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"9169:4:26","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"9293:4:26","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"9316:4:26","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"9323:4:26","valueSize":1}],"flags":["memory-safe"],"id":6054,"nodeType":"InlineAssembly","src":"8962:384:26"},{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6055,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"9409:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6056,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"9416:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6057,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"9423:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6060,"nodeType":"ExpressionStatement","src":"9409:18:26"},{"assignments":[6062],"declarations":[{"constant":false,"id":6062,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:26","nodeType":"VariableDeclaration","scope":6126,"src":"9762:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6069,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6064,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"9785:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:26"},{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6070,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10018:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6072,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10033:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6077,"nodeType":"ExpressionStatement","src":"10018:36:26"},{"expression":{"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10103:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6081,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10117:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6085,"nodeType":"ExpressionStatement","src":"10088:36:26"},{"expression":{"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6086,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10160:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6088,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10175:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6089,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6093,"nodeType":"ExpressionStatement","src":"10160:36:26"},{"expression":{"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6094,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10231:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6096,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10246:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6097,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6101,"nodeType":"ExpressionStatement","src":"10231:36:26"},{"expression":{"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10304:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10319:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6105,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10333:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6109,"nodeType":"ExpressionStatement","src":"10304:36:26"},{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6110,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6112,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10393:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6113,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10407:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6117,"nodeType":"ExpressionStatement","src":"10378:36:26"},{"expression":{"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"10859:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"10868:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"10874:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6123,"nodeType":"ExpressionStatement","src":"10859:22:26"},{"expression":{"id":6124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"10902:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6003,"id":6125,"nodeType":"Return","src":"10895:13:26"}]}]},"documentation":{"id":5993,"nodeType":"StructuredDocumentation","src":"6925:312:26","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:26","nodeType":"FunctionDefinition","parameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5995,"mutability":"mutable","name":"x","nameLocation":"7266:1:26","nodeType":"VariableDeclaration","scope":6128,"src":"7258:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5997,"mutability":"mutable","name":"y","nameLocation":"7277:1:26","nodeType":"VariableDeclaration","scope":6128,"src":"7269:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5999,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:26","nodeType":"VariableDeclaration","scope":6128,"src":"7280:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:26"},"returnParameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"result","nameLocation":"7332:6:26","nodeType":"VariableDeclaration","scope":6128,"src":"7324:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:26"},"scope":7222,"src":"7242:3683:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6164,"nodeType":"Block","src":"11164:128:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6144,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"11188:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6145,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"11191:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"11194:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6128,6165],"referencedDeclaration":6128,"src":"11181:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6151,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11242:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":6150,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"11225:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"11262:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6155,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"11265:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6156,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"11268:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6153,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"11209:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"11209:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6142,"id":6163,"nodeType":"Return","src":"11174:111:26"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"10931:118:26","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6165,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:26","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"x","nameLocation":"11078:1:26","nodeType":"VariableDeclaration","scope":6165,"src":"11070:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"y","nameLocation":"11089:1:26","nodeType":"VariableDeclaration","scope":6165,"src":"11081:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:26","nodeType":"VariableDeclaration","scope":6165,"src":"11092:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6138,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:26","nodeType":"VariableDeclaration","scope":6165,"src":"11113:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":6137,"nodeType":"UserDefinedTypeName","pathNode":{"id":6136,"name":"Rounding","nameLocations":["11113:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"11113:8:26"},"referencedDeclaration":5613,"src":"11113:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:26"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6165,"src":"11155:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:26"},"scope":7222,"src":"11054:238:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"11500:245:26","statements":[{"id":6213,"nodeType":"UncheckedBlock","src":"11510:229:26","statements":[{"assignments":[6178,6180],"declarations":[{"constant":false,"id":6178,"mutability":"mutable","name":"high","nameLocation":"11543:4:26","nodeType":"VariableDeclaration","scope":6213,"src":"11535:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6180,"mutability":"mutable","name":"low","nameLocation":"11557:3:26","nodeType":"VariableDeclaration","scope":6213,"src":"11549:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6185,"initialValue":{"arguments":[{"id":6182,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"11571:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6183,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"11574:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6181,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"11564:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"11594:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6188,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"11607:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"IfStatement","src":"11590:86:26","trueBody":{"id":6198,"nodeType":"Block","src":"11610:66:26","statements":[{"expression":{"arguments":[{"expression":{"id":6194,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"11640:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3462,"src":"11640:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6191,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"11628:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"11628:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6197,"nodeType":"ExpressionStatement","src":"11628:33:26"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6200,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"11697:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6202,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"11712:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11719:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6208,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"11726:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6176,"id":6212,"nodeType":"Return","src":"11689:39:26"}]}]},"documentation":{"id":6166,"nodeType":"StructuredDocumentation","src":"11298:111:26","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6215,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:26","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"x","nameLocation":"11438:1:26","nodeType":"VariableDeclaration","scope":6215,"src":"11430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6170,"mutability":"mutable","name":"y","nameLocation":"11449:1:26","nodeType":"VariableDeclaration","scope":6215,"src":"11441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"n","nameLocation":"11458:1:26","nodeType":"VariableDeclaration","scope":6215,"src":"11452:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6171,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:26"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"result","nameLocation":"11492:6:26","nodeType":"VariableDeclaration","scope":6215,"src":"11484:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:26"},"scope":7222,"src":"11414:331:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6253,"nodeType":"Block","src":"11963:113:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6231,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"11987:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6232,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"11990:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6233,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"11993:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6230,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6215,6254],"referencedDeclaration":6215,"src":"11980:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6238,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"12031:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":6237,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"12014:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6241,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"12051:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6242,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"12054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6244,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"12062:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6240,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"11998:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"11998:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6229,"id":6252,"nodeType":"Return","src":"11973:96:26"}]},"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"11751:109:26","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6254,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:26","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"x","nameLocation":"11889:1:26","nodeType":"VariableDeclaration","scope":6254,"src":"11881:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6220,"mutability":"mutable","name":"y","nameLocation":"11900:1:26","nodeType":"VariableDeclaration","scope":6254,"src":"11892:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6222,"mutability":"mutable","name":"n","nameLocation":"11909:1:26","nodeType":"VariableDeclaration","scope":6254,"src":"11903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6221,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:26","nodeType":"VariableDeclaration","scope":6254,"src":"11912:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":6224,"nodeType":"UserDefinedTypeName","pathNode":{"id":6223,"name":"Rounding","nameLocations":["11912:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"11912:8:26"},"referencedDeclaration":5613,"src":"11912:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:26"},"returnParameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6254,"src":"11954:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:26"},"scope":7222,"src":"11865:211:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6350,"nodeType":"Block","src":"12710:1849:26","statements":[{"id":6349,"nodeType":"UncheckedBlock","src":"12720:1833:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6264,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"12748:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"12744:20:26","trueBody":{"expression":{"hexValue":"30","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6263,"id":6268,"nodeType":"Return","src":"12756:8:26"}},{"assignments":[6271],"declarations":[{"constant":false,"id":6271,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:26","nodeType":"VariableDeclaration","scope":6349,"src":"13235:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"13255:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6273,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"13259:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:26"},{"assignments":[6277],"declarations":[{"constant":false,"id":6277,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:26","nodeType":"VariableDeclaration","scope":6349,"src":"13274:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6279,"initialValue":{"id":6278,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"13288:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:26"},{"assignments":[6281],"declarations":[{"constant":false,"id":6281,"mutability":"mutable","name":"x","nameLocation":"13432:1:26","nodeType":"VariableDeclaration","scope":6349,"src":"13425:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6280,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6283,"initialValue":{"hexValue":"30","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:26"},{"assignments":[6285],"declarations":[{"constant":false,"id":6285,"mutability":"mutable","name":"y","nameLocation":"13458:1:26","nodeType":"VariableDeclaration","scope":6349,"src":"13451:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6284,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6287,"initialValue":{"hexValue":"31","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:26"},{"body":{"id":6324,"nodeType":"Block","src":"13501:882:26","statements":[{"assignments":[6292],"declarations":[{"constant":false,"id":6292,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:26","nodeType":"VariableDeclaration","scope":6324,"src":"13519:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6291,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6293,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13538:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6294,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"13544:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:26"},{"expression":{"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6297,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13573:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6298,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"13578:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6299,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6300,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"13678:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"13923:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"13929:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6303,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"13941:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"ExpressionStatement","src":"13572:395:26"},{"expression":{"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6309,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"13987:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6310,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"13990:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6311,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6312,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"14072:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"14326:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6314,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"14330:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6317,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"14341:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6315,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:26","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6323,"nodeType":"ExpressionStatement","src":"13986:382:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"13485:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6325,"nodeType":"WhileStatement","src":"13478:905:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6326,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"14401:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6331,"nodeType":"IfStatement","src":"14397:22:26","trueBody":{"expression":{"hexValue":"30","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6263,"id":6330,"nodeType":"Return","src":"14411:8:26"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"14470:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6336,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"14477:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:26","subExpression":{"id":6339,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"14490:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6337,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:26","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6345,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"14502:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:26","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6332,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"14462:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6263,"id":6348,"nodeType":"Return","src":"14455:50:26"}]}]},"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"12082:553:26","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6351,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:26","nodeType":"FunctionDefinition","parameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"a","nameLocation":"12664:1:26","nodeType":"VariableDeclaration","scope":6351,"src":"12656:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6256,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6259,"mutability":"mutable","name":"n","nameLocation":"12675:1:26","nodeType":"VariableDeclaration","scope":6351,"src":"12667:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:26"},"returnParameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6351,"src":"12701:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6261,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:26"},"scope":7222,"src":"12640:1919:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6371,"nodeType":"Block","src":"15159:82:26","statements":[{"id":6370,"nodeType":"UncheckedBlock","src":"15169:66:26","statements":[{"expression":{"arguments":[{"id":6363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"15212:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"15215:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6367,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"15222:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6361,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"15200:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7222_$","typeString":"type(library Math)"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:26","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6408,"src":"15200:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6360,"id":6369,"nodeType":"Return","src":"15193:31:26"}]}]},"documentation":{"id":6352,"nodeType":"StructuredDocumentation","src":"14565:514:26","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6372,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:26","nodeType":"FunctionDefinition","parameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"a","nameLocation":"15113:1:26","nodeType":"VariableDeclaration","scope":6372,"src":"15105:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6356,"mutability":"mutable","name":"p","nameLocation":"15124:1:26","nodeType":"VariableDeclaration","scope":6372,"src":"15116:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:26"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6372,"src":"15150:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:26"},"scope":7222,"src":"15084:157:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6407,"nodeType":"Block","src":"16011:174:26","statements":[{"assignments":[6385,6387],"declarations":[{"constant":false,"id":6385,"mutability":"mutable","name":"success","nameLocation":"16027:7:26","nodeType":"VariableDeclaration","scope":6407,"src":"16022:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6384,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6387,"mutability":"mutable","name":"result","nameLocation":"16044:6:26","nodeType":"VariableDeclaration","scope":6407,"src":"16036:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6386,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6393,"initialValue":{"arguments":[{"id":6389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"16064:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6390,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"16067:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6391,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"16070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6388,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6432,6514],"referencedDeclaration":6432,"src":"16054:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:26"},{"condition":{"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:26","subExpression":{"id":6394,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"16087:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"16082:74:26","trueBody":{"id":6403,"nodeType":"Block","src":"16096:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":6399,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"16122:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"16122:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6396,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"16110:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"16110:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6402,"nodeType":"ExpressionStatement","src":"16110:35:26"}]}},{"expression":{"id":6405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"16172:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6383,"id":6406,"nodeType":"Return","src":"16165:13:26"}]},"documentation":{"id":6373,"nodeType":"StructuredDocumentation","src":"15247:678:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6408,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:26","nodeType":"FunctionDefinition","parameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"b","nameLocation":"15954:1:26","nodeType":"VariableDeclaration","scope":6408,"src":"15946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6374,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6377,"mutability":"mutable","name":"e","nameLocation":"15965:1:26","nodeType":"VariableDeclaration","scope":6408,"src":"15957:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6379,"mutability":"mutable","name":"m","nameLocation":"15976:1:26","nodeType":"VariableDeclaration","scope":6408,"src":"15968:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:26"},"returnParameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6408,"src":"16002:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:26"},"scope":7222,"src":"15930:255:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"17039:1493:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"17053:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6429,"nodeType":"IfStatement","src":"17049:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6421,"id":6428,"nodeType":"Return","src":"17061:17:26"}},{"AST":{"nativeSrc":"17113:1413:26","nodeType":"YulBlock","src":"17113:1413:26","statements":[{"nativeSrc":"17127:22:26","nodeType":"YulVariableDeclaration","src":"17127:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:26","nodeType":"YulLiteral","src":"17144:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:26","nodeType":"YulIdentifier","src":"17138:5:26"},"nativeSrc":"17138:11:26","nodeType":"YulFunctionCall","src":"17138:11:26"},"variables":[{"name":"ptr","nativeSrc":"17131:3:26","nodeType":"YulTypedName","src":"17131:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:26","nodeType":"YulIdentifier","src":"18057:3:26"},{"kind":"number","nativeSrc":"18062:4:26","nodeType":"YulLiteral","src":"18062:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:26","nodeType":"YulIdentifier","src":"18050:6:26"},"nativeSrc":"18050:17:26","nodeType":"YulFunctionCall","src":"18050:17:26"},"nativeSrc":"18050:17:26","nodeType":"YulExpressionStatement","src":"18050:17:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:26","nodeType":"YulIdentifier","src":"18091:3:26"},{"kind":"number","nativeSrc":"18096:4:26","nodeType":"YulLiteral","src":"18096:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:26","nodeType":"YulIdentifier","src":"18087:3:26"},"nativeSrc":"18087:14:26","nodeType":"YulFunctionCall","src":"18087:14:26"},{"kind":"number","nativeSrc":"18103:4:26","nodeType":"YulLiteral","src":"18103:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:26","nodeType":"YulIdentifier","src":"18080:6:26"},"nativeSrc":"18080:28:26","nodeType":"YulFunctionCall","src":"18080:28:26"},"nativeSrc":"18080:28:26","nodeType":"YulExpressionStatement","src":"18080:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:26","nodeType":"YulIdentifier","src":"18132:3:26"},{"kind":"number","nativeSrc":"18137:4:26","nodeType":"YulLiteral","src":"18137:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:26","nodeType":"YulIdentifier","src":"18128:3:26"},"nativeSrc":"18128:14:26","nodeType":"YulFunctionCall","src":"18128:14:26"},{"kind":"number","nativeSrc":"18144:4:26","nodeType":"YulLiteral","src":"18144:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:26","nodeType":"YulIdentifier","src":"18121:6:26"},"nativeSrc":"18121:28:26","nodeType":"YulFunctionCall","src":"18121:28:26"},"nativeSrc":"18121:28:26","nodeType":"YulExpressionStatement","src":"18121:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:26","nodeType":"YulIdentifier","src":"18173:3:26"},{"kind":"number","nativeSrc":"18178:4:26","nodeType":"YulLiteral","src":"18178:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:26","nodeType":"YulIdentifier","src":"18169:3:26"},"nativeSrc":"18169:14:26","nodeType":"YulFunctionCall","src":"18169:14:26"},{"name":"b","nativeSrc":"18185:1:26","nodeType":"YulIdentifier","src":"18185:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:26","nodeType":"YulIdentifier","src":"18162:6:26"},"nativeSrc":"18162:25:26","nodeType":"YulFunctionCall","src":"18162:25:26"},"nativeSrc":"18162:25:26","nodeType":"YulExpressionStatement","src":"18162:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:26","nodeType":"YulIdentifier","src":"18211:3:26"},{"kind":"number","nativeSrc":"18216:4:26","nodeType":"YulLiteral","src":"18216:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:26","nodeType":"YulIdentifier","src":"18207:3:26"},"nativeSrc":"18207:14:26","nodeType":"YulFunctionCall","src":"18207:14:26"},{"name":"e","nativeSrc":"18223:1:26","nodeType":"YulIdentifier","src":"18223:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:26","nodeType":"YulIdentifier","src":"18200:6:26"},"nativeSrc":"18200:25:26","nodeType":"YulFunctionCall","src":"18200:25:26"},"nativeSrc":"18200:25:26","nodeType":"YulExpressionStatement","src":"18200:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:26","nodeType":"YulIdentifier","src":"18249:3:26"},{"kind":"number","nativeSrc":"18254:4:26","nodeType":"YulLiteral","src":"18254:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:26","nodeType":"YulIdentifier","src":"18245:3:26"},"nativeSrc":"18245:14:26","nodeType":"YulFunctionCall","src":"18245:14:26"},{"name":"m","nativeSrc":"18261:1:26","nodeType":"YulIdentifier","src":"18261:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:26","nodeType":"YulIdentifier","src":"18238:6:26"},"nativeSrc":"18238:25:26","nodeType":"YulFunctionCall","src":"18238:25:26"},"nativeSrc":"18238:25:26","nodeType":"YulExpressionStatement","src":"18238:25:26"},{"nativeSrc":"18425:57:26","nodeType":"YulAssignment","src":"18425:57:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:26","nodeType":"YulIdentifier","src":"18447:3:26"},"nativeSrc":"18447:5:26","nodeType":"YulFunctionCall","src":"18447:5:26"},{"kind":"number","nativeSrc":"18454:4:26","nodeType":"YulLiteral","src":"18454:4:26","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:26","nodeType":"YulIdentifier","src":"18460:3:26"},{"kind":"number","nativeSrc":"18465:4:26","nodeType":"YulLiteral","src":"18465:4:26","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:26","nodeType":"YulLiteral","src":"18471:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:26","nodeType":"YulLiteral","src":"18477:4:26","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:26","nodeType":"YulIdentifier","src":"18436:10:26"},"nativeSrc":"18436:46:26","nodeType":"YulFunctionCall","src":"18436:46:26"},"variableNames":[{"name":"success","nativeSrc":"18425:7:26","nodeType":"YulIdentifier","src":"18425:7:26"}]},{"nativeSrc":"18495:21:26","nodeType":"YulAssignment","src":"18495:21:26","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:26","nodeType":"YulLiteral","src":"18511:4:26","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:26","nodeType":"YulIdentifier","src":"18505:5:26"},"nativeSrc":"18505:11:26","nodeType":"YulFunctionCall","src":"18505:11:26"},"variableNames":[{"name":"result","nativeSrc":"18495:6:26","nodeType":"YulIdentifier","src":"18495:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6411,"isOffset":false,"isSlot":false,"src":"18185:1:26","valueSize":1},{"declaration":6413,"isOffset":false,"isSlot":false,"src":"18223:1:26","valueSize":1},{"declaration":6415,"isOffset":false,"isSlot":false,"src":"18261:1:26","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"18495:6:26","valueSize":1},{"declaration":6418,"isOffset":false,"isSlot":false,"src":"18425:7:26","valueSize":1}],"flags":["memory-safe"],"id":6430,"nodeType":"InlineAssembly","src":"17088:1438:26"}]},"documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"16191:738:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:26","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"b","nameLocation":"16961:1:26","nodeType":"VariableDeclaration","scope":6432,"src":"16953:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6413,"mutability":"mutable","name":"e","nameLocation":"16972:1:26","nodeType":"VariableDeclaration","scope":6432,"src":"16964:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6415,"mutability":"mutable","name":"m","nameLocation":"16983:1:26","nodeType":"VariableDeclaration","scope":6432,"src":"16975:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6414,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:26"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"success","nameLocation":"17014:7:26","nodeType":"VariableDeclaration","scope":6432,"src":"17009:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6417,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6420,"mutability":"mutable","name":"result","nameLocation":"17031:6:26","nodeType":"VariableDeclaration","scope":6432,"src":"17023:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6419,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:26"},"scope":7222,"src":"16934:1598:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6467,"nodeType":"Block","src":"18729:179:26","statements":[{"assignments":[6445,6447],"declarations":[{"constant":false,"id":6445,"mutability":"mutable","name":"success","nameLocation":"18745:7:26","nodeType":"VariableDeclaration","scope":6467,"src":"18740:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6444,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"result","nameLocation":"18767:6:26","nodeType":"VariableDeclaration","scope":6467,"src":"18754:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6446,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6453,"initialValue":{"arguments":[{"id":6449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"18787:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6450,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"18790:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6451,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"18793:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6448,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6432,6514],"referencedDeclaration":6514,"src":"18777:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:26"},{"condition":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:26","subExpression":{"id":6454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"18810:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6464,"nodeType":"IfStatement","src":"18805:74:26","trueBody":{"id":6463,"nodeType":"Block","src":"18819:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":6459,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18845:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"18845:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6456,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18833:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3499_$","typeString":"type(library Panic)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"18833:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6462,"nodeType":"ExpressionStatement","src":"18833:35:26"}]}},{"expression":{"id":6465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"18895:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6443,"id":6466,"nodeType":"Return","src":"18888:13:26"}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"18538:85:26","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6468,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:26","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"b","nameLocation":"18657:1:26","nodeType":"VariableDeclaration","scope":6468,"src":"18644:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6434,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6437,"mutability":"mutable","name":"e","nameLocation":"18673:1:26","nodeType":"VariableDeclaration","scope":6468,"src":"18660:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6436,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6439,"mutability":"mutable","name":"m","nameLocation":"18689:1:26","nodeType":"VariableDeclaration","scope":6468,"src":"18676:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6438,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:26"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6468,"src":"18715:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6441,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:26"},"scope":7222,"src":"18628:280:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"19162:771:26","statements":[{"condition":{"arguments":[{"id":6483,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"19187:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6482,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"19176:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"19172:47:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6486,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6481,"id":6491,"nodeType":"Return","src":"19191:28:26"}},{"assignments":[6494],"declarations":[{"constant":false,"id":6494,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:26","nodeType":"VariableDeclaration","scope":6513,"src":"19230:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6497,"initialValue":{"expression":{"id":6495,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"19245:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:26","memberName":"length","nodeType":"MemberAccess","src":"19245:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:26"},{"expression":{"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"19335:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"19361:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:26","memberName":"length","nodeType":"MemberAccess","src":"19361:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6503,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"19371:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:26","memberName":"length","nodeType":"MemberAccess","src":"19371:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6505,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"19381:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"19387:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6507,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"19390:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6508,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"19393:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6511,"nodeType":"ExpressionStatement","src":"19335:60:26"},{"AST":{"nativeSrc":"19431:496:26","nodeType":"YulBlock","src":"19431:496:26","statements":[{"nativeSrc":"19445:32:26","nodeType":"YulVariableDeclaration","src":"19445:32:26","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:26","nodeType":"YulIdentifier","src":"19464:6:26"},{"kind":"number","nativeSrc":"19472:4:26","nodeType":"YulLiteral","src":"19472:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:26","nodeType":"YulIdentifier","src":"19460:3:26"},"nativeSrc":"19460:17:26","nodeType":"YulFunctionCall","src":"19460:17:26"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:26","nodeType":"YulTypedName","src":"19449:7:26","type":""}]},{"nativeSrc":"19567:73:26","nodeType":"YulAssignment","src":"19567:73:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:26","nodeType":"YulIdentifier","src":"19589:3:26"},"nativeSrc":"19589:5:26","nodeType":"YulFunctionCall","src":"19589:5:26"},{"kind":"number","nativeSrc":"19596:4:26","nodeType":"YulLiteral","src":"19596:4:26","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:26","nodeType":"YulIdentifier","src":"19602:7:26"},{"arguments":[{"name":"result","nativeSrc":"19617:6:26","nodeType":"YulIdentifier","src":"19617:6:26"}],"functionName":{"name":"mload","nativeSrc":"19611:5:26","nodeType":"YulIdentifier","src":"19611:5:26"},"nativeSrc":"19611:13:26","nodeType":"YulFunctionCall","src":"19611:13:26"},{"name":"dataPtr","nativeSrc":"19626:7:26","nodeType":"YulIdentifier","src":"19626:7:26"},{"name":"mLen","nativeSrc":"19635:4:26","nodeType":"YulIdentifier","src":"19635:4:26"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:26","nodeType":"YulIdentifier","src":"19578:10:26"},"nativeSrc":"19578:62:26","nodeType":"YulFunctionCall","src":"19578:62:26"},"variableNames":[{"name":"success","nativeSrc":"19567:7:26","nodeType":"YulIdentifier","src":"19567:7:26"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:26","nodeType":"YulIdentifier","src":"19796:6:26"},{"name":"mLen","nativeSrc":"19804:4:26","nodeType":"YulIdentifier","src":"19804:4:26"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:26","nodeType":"YulIdentifier","src":"19789:6:26"},"nativeSrc":"19789:20:26","nodeType":"YulFunctionCall","src":"19789:20:26"},"nativeSrc":"19789:20:26","nodeType":"YulExpressionStatement","src":"19789:20:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:26","nodeType":"YulLiteral","src":"19892:4:26","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:26","nodeType":"YulIdentifier","src":"19902:7:26"},{"name":"mLen","nativeSrc":"19911:4:26","nodeType":"YulIdentifier","src":"19911:4:26"}],"functionName":{"name":"add","nativeSrc":"19898:3:26","nodeType":"YulIdentifier","src":"19898:3:26"},"nativeSrc":"19898:18:26","nodeType":"YulFunctionCall","src":"19898:18:26"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:26","nodeType":"YulIdentifier","src":"19885:6:26"},"nativeSrc":"19885:32:26","nodeType":"YulFunctionCall","src":"19885:32:26"},"nativeSrc":"19885:32:26","nodeType":"YulExpressionStatement","src":"19885:32:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":6494,"isOffset":false,"isSlot":false,"src":"19635:4:26","valueSize":1},{"declaration":6494,"isOffset":false,"isSlot":false,"src":"19804:4:26","valueSize":1},{"declaration":6494,"isOffset":false,"isSlot":false,"src":"19911:4:26","valueSize":1},{"declaration":6480,"isOffset":false,"isSlot":false,"src":"19464:6:26","valueSize":1},{"declaration":6480,"isOffset":false,"isSlot":false,"src":"19617:6:26","valueSize":1},{"declaration":6480,"isOffset":false,"isSlot":false,"src":"19796:6:26","valueSize":1},{"declaration":6478,"isOffset":false,"isSlot":false,"src":"19567:7:26","valueSize":1}],"flags":["memory-safe"],"id":6512,"nodeType":"InlineAssembly","src":"19406:521:26"}]},"documentation":{"id":6469,"nodeType":"StructuredDocumentation","src":"18914:88:26","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:26","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"b","nameLocation":"19048:1:26","nodeType":"VariableDeclaration","scope":6514,"src":"19035:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6470,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"e","nameLocation":"19072:1:26","nodeType":"VariableDeclaration","scope":6514,"src":"19059:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6472,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"m","nameLocation":"19096:1:26","nodeType":"VariableDeclaration","scope":6514,"src":"19083:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6474,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:26"},"returnParameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"success","nameLocation":"19132:7:26","nodeType":"VariableDeclaration","scope":6514,"src":"19127:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6477,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6480,"mutability":"mutable","name":"result","nameLocation":"19154:6:26","nodeType":"VariableDeclaration","scope":6514,"src":"19141:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6479,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:26"},"scope":7222,"src":"19007:926:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6546,"nodeType":"Block","src":"20088:176:26","statements":[{"body":{"id":6542,"nodeType":"Block","src":"20145:92:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6533,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"20163:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6535,"indexExpression":{"id":6534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20173:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"20159:68:26","trueBody":{"id":6540,"nodeType":"Block","src":"20182:45:26","statements":[{"expression":{"hexValue":"66616c7365","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6521,"id":6539,"nodeType":"Return","src":"20200:12:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20118:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6527,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"20122:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:26","memberName":"length","nodeType":"MemberAccess","src":"20122:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6543,"initializationExpression":{"assignments":[6523],"declarations":[{"constant":false,"id":6523,"mutability":"mutable","name":"i","nameLocation":"20111:1:26","nodeType":"VariableDeclaration","scope":6543,"src":"20103:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6525,"initialValue":{"hexValue":"30","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:26","subExpression":{"id":6530,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20142:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"20140:3:26"},"nodeType":"ForStatement","src":"20098:139:26"},{"expression":{"hexValue":"74727565","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6521,"id":6545,"nodeType":"Return","src":"20246:11:26"}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"19939:72:26","text":" @dev Returns whether the provided byte array is zero."},"id":6547,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:26","nodeType":"FunctionDefinition","parameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:26","nodeType":"VariableDeclaration","scope":6547,"src":"20036:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6516,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:26"},"returnParameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6547,"src":"20082:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6519,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:26"},"scope":7222,"src":"20016:248:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6765,"nodeType":"Block","src":"20624:5124:26","statements":[{"id":6764,"nodeType":"UncheckedBlock","src":"20634:5108:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"20728:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6561,"nodeType":"IfStatement","src":"20724:53:26","trueBody":{"id":6560,"nodeType":"Block","src":"20736:41:26","statements":[{"expression":{"id":6558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"20761:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6554,"id":6559,"nodeType":"Return","src":"20754:8:26"}]}},{"assignments":[6563],"declarations":[{"constant":false,"id":6563,"mutability":"mutable","name":"aa","nameLocation":"21712:2:26","nodeType":"VariableDeclaration","scope":6764,"src":"21704:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6562,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6565,"initialValue":{"id":6564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"21717:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:26"},{"assignments":[6567],"declarations":[{"constant":false,"id":6567,"mutability":"mutable","name":"xn","nameLocation":"21740:2:26","nodeType":"VariableDeclaration","scope":6764,"src":"21732:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6566,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6569,"initialValue":{"hexValue":"31","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6570,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"21765:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6585,"nodeType":"IfStatement","src":"21761:92:26","trueBody":{"id":6584,"nodeType":"Block","src":"21783:70:26","statements":[{"expression":{"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6576,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"21801:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6579,"nodeType":"ExpressionStatement","src":"21801:10:26"},{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6580,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"21829:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6583,"nodeType":"ExpressionStatement","src":"21829:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"21870:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6601,"nodeType":"IfStatement","src":"21866:90:26","trueBody":{"id":6600,"nodeType":"Block","src":"21887:69:26","statements":[{"expression":{"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6592,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"21905:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6595,"nodeType":"ExpressionStatement","src":"21905:9:26"},{"expression":{"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"21932:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6599,"nodeType":"ExpressionStatement","src":"21932:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6602,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"21973:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6617,"nodeType":"IfStatement","src":"21969:90:26","trueBody":{"id":6616,"nodeType":"Block","src":"21990:69:26","statements":[{"expression":{"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6608,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22008:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6611,"nodeType":"ExpressionStatement","src":"22008:9:26"},{"expression":{"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6612,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22035:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6615,"nodeType":"ExpressionStatement","src":"22035:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22076:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6633,"nodeType":"IfStatement","src":"22072:89:26","trueBody":{"id":6632,"nodeType":"Block","src":"22093:68:26","statements":[{"expression":{"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6624,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22111:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6627,"nodeType":"ExpressionStatement","src":"22111:9:26"},{"expression":{"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22138:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6631,"nodeType":"ExpressionStatement","src":"22138:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22178:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6649,"nodeType":"IfStatement","src":"22174:87:26","trueBody":{"id":6648,"nodeType":"Block","src":"22194:67:26","statements":[{"expression":{"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6640,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22212:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6643,"nodeType":"ExpressionStatement","src":"22212:8:26"},{"expression":{"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6644,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22238:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6647,"nodeType":"ExpressionStatement","src":"22238:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6650,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22278:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6665,"nodeType":"IfStatement","src":"22274:87:26","trueBody":{"id":6664,"nodeType":"Block","src":"22294:67:26","statements":[{"expression":{"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6656,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22312:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6659,"nodeType":"ExpressionStatement","src":"22312:8:26"},{"expression":{"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6660,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22338:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6663,"nodeType":"ExpressionStatement","src":"22338:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"22378:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6677,"nodeType":"IfStatement","src":"22374:61:26","trueBody":{"id":6676,"nodeType":"Block","src":"22394:41:26","statements":[{"expression":{"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6672,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22412:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6675,"nodeType":"ExpressionStatement","src":"22412:8:26"}]}},{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6678,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22855:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6680,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22865:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6686,"nodeType":"ExpressionStatement","src":"22855:18:26"},{"expression":{"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24760:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6688,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24766:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"24771:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6690,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24775:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6697,"nodeType":"ExpressionStatement","src":"24760:23:26"},{"expression":{"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6698,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24869:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24875:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"24880:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6701,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24884:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6708,"nodeType":"ExpressionStatement","src":"24869:23:26"},{"expression":{"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24980:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24986:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"24991:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6712,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"24995:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6719,"nodeType":"ExpressionStatement","src":"24980:23:26"},{"expression":{"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6720,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25089:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25095:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"25100:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6723,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25104:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6730,"nodeType":"ExpressionStatement","src":"25089:23:26"},{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6731,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25199:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25205:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"25210:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6734,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25214:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6741,"nodeType":"ExpressionStatement","src":"25199:23:26"},{"expression":{"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6742,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25309:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25315:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"25320:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6745,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25324:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6752,"nodeType":"ExpressionStatement","src":"25309:23:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25698:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25719:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"25724:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6758,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"25728:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6754,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"25703:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"25703:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6554,"id":6763,"nodeType":"Return","src":"25691:40:26"}]}]},"documentation":{"id":6548,"nodeType":"StructuredDocumentation","src":"20270:292:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6766,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:26","nodeType":"FunctionDefinition","parameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"a","nameLocation":"20589:1:26","nodeType":"VariableDeclaration","scope":6766,"src":"20581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:26"},"returnParameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6766,"src":"20615:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6552,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:26"},"scope":7222,"src":"20567:5181:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"25921:171:26","statements":[{"id":6798,"nodeType":"UncheckedBlock","src":"25931:155:26","statements":[{"assignments":[6778],"declarations":[{"constant":false,"id":6778,"mutability":"mutable","name":"result","nameLocation":"25963:6:26","nodeType":"VariableDeclaration","scope":6798,"src":"25955:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6782,"initialValue":{"arguments":[{"id":6780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"25977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6779,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6766,6800],"referencedDeclaration":6766,"src":"25972:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"26000:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6787,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"26042:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":6786,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"26025:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"26055:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"26064:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"26073:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26009:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26009:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6776,"id":6797,"nodeType":"Return","src":"25993:82:26"}]}]},"documentation":{"id":6767,"nodeType":"StructuredDocumentation","src":"25754:86:26","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:26","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"a","nameLocation":"25867:1:26","nodeType":"VariableDeclaration","scope":6800,"src":"25859:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6772,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:26","nodeType":"VariableDeclaration","scope":6800,"src":"25870:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":6771,"nodeType":"UserDefinedTypeName","pathNode":{"id":6770,"name":"Rounding","nameLocations":["25870:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"25870:8:26"},"referencedDeclaration":5613,"src":"25870:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:26"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6800,"src":"25912:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:26"},"scope":7222,"src":"25845:247:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6890,"nodeType":"Block","src":"26281:2334:26","statements":[{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6808,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26363:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"26383:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6809,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26367:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26367:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6818,"nodeType":"ExpressionStatement","src":"26363:64:26"},{"expression":{"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6819,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26503:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"26525:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6823,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26530:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26508:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26508:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6832,"nodeType":"ExpressionStatement","src":"26503:56:26"},{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6833,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26634:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"26656:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6837,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26661:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6834,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26639:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26639:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6846,"nodeType":"ExpressionStatement","src":"26634:48:26"},{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6847,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26757:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"26779:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26784:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6848,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26762:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26762:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6860,"nodeType":"ExpressionStatement","src":"26757:44:26"},{"expression":{"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6861,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26874:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"26896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6865,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26901:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6862,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26879:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26879:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6874,"nodeType":"ExpressionStatement","src":"26874:42:26"},{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6875,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"26988:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"27010:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6879,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"27015:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6876,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"26993:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"26993:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6888,"nodeType":"ExpressionStatement","src":"26988:41:26"},{"AST":{"nativeSrc":"28490:119:26","nodeType":"YulBlock","src":"28490:119:26","statements":[{"nativeSrc":"28504:95:26","nodeType":"YulAssignment","src":"28504:95:26","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:26","nodeType":"YulIdentifier","src":"28512:1:26"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:26","nodeType":"YulIdentifier","src":"28524:1:26"},{"name":"x","nativeSrc":"28527:1:26","nodeType":"YulIdentifier","src":"28527:1:26"}],"functionName":{"name":"shr","nativeSrc":"28520:3:26","nodeType":"YulIdentifier","src":"28520:3:26"},"nativeSrc":"28520:9:26","nodeType":"YulFunctionCall","src":"28520:9:26"},{"kind":"number","nativeSrc":"28531:66:26","nodeType":"YulLiteral","src":"28531:66:26","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:26","nodeType":"YulIdentifier","src":"28515:4:26"},"nativeSrc":"28515:83:26","nodeType":"YulFunctionCall","src":"28515:83:26"}],"functionName":{"name":"or","nativeSrc":"28509:2:26","nodeType":"YulIdentifier","src":"28509:2:26"},"nativeSrc":"28509:90:26","nodeType":"YulFunctionCall","src":"28509:90:26"},"variableNames":[{"name":"r","nativeSrc":"28504:1:26","nodeType":"YulIdentifier","src":"28504:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6806,"isOffset":false,"isSlot":false,"src":"28504:1:26","valueSize":1},{"declaration":6806,"isOffset":false,"isSlot":false,"src":"28512:1:26","valueSize":1},{"declaration":6806,"isOffset":false,"isSlot":false,"src":"28524:1:26","valueSize":1},{"declaration":6803,"isOffset":false,"isSlot":false,"src":"28527:1:26","valueSize":1}],"flags":["memory-safe"],"id":6889,"nodeType":"InlineAssembly","src":"28465:144:26"}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"26098:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6891,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:26","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"x","nameLocation":"26244:1:26","nodeType":"VariableDeclaration","scope":6891,"src":"26236:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6802,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:26"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"r","nameLocation":"26278:1:26","nodeType":"VariableDeclaration","scope":6891,"src":"26270:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6805,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:26"},"scope":7222,"src":"26222:2393:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6924,"nodeType":"Block","src":"28848:175:26","statements":[{"id":6923,"nodeType":"UncheckedBlock","src":"28858:159:26","statements":[{"assignments":[6903],"declarations":[{"constant":false,"id":6903,"mutability":"mutable","name":"result","nameLocation":"28890:6:26","nodeType":"VariableDeclaration","scope":6923,"src":"28882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6902,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6907,"initialValue":{"arguments":[{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"28904:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6891,6925],"referencedDeclaration":6891,"src":"28899:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"28931:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6912,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"28973:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":6911,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"28956:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"28991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"29000:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6909,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"28940:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"28940:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6901,"id":6922,"nodeType":"Return","src":"28924:82:26"}]}]},"documentation":{"id":6892,"nodeType":"StructuredDocumentation","src":"28621:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6925,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:26","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"value","nameLocation":"28790:5:26","nodeType":"VariableDeclaration","scope":6925,"src":"28782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6897,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:26","nodeType":"VariableDeclaration","scope":6925,"src":"28797:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":6896,"nodeType":"UserDefinedTypeName","pathNode":{"id":6895,"name":"Rounding","nameLocations":["28797:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"28797:8:26"},"referencedDeclaration":5613,"src":"28797:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:26"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6925,"src":"28839:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:26"},"scope":7222,"src":"28768:255:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"29216:854:26","statements":[{"assignments":[6934],"declarations":[{"constant":false,"id":6934,"mutability":"mutable","name":"result","nameLocation":"29234:6:26","nodeType":"VariableDeclaration","scope":7053,"src":"29226:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6933,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6936,"initialValue":{"hexValue":"30","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:26"},{"id":7050,"nodeType":"UncheckedBlock","src":"29254:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29282:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6953,"nodeType":"IfStatement","src":"29278:103:26","trueBody":{"id":6952,"nodeType":"Block","src":"29301:80:26","statements":[{"expression":{"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29319:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6947,"nodeType":"ExpressionStatement","src":"29319:17:26"},{"expression":{"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6951,"nodeType":"ExpressionStatement","src":"29354:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29398:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6970,"nodeType":"IfStatement","src":"29394:103:26","trueBody":{"id":6969,"nodeType":"Block","src":"29417:80:26","statements":[{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29435:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6964,"nodeType":"ExpressionStatement","src":"29435:17:26"},{"expression":{"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29470:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6968,"nodeType":"ExpressionStatement","src":"29470:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29514:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"IfStatement","src":"29510:103:26","trueBody":{"id":6986,"nodeType":"Block","src":"29533:80:26","statements":[{"expression":{"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6981,"nodeType":"ExpressionStatement","src":"29551:17:26"},{"expression":{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29586:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6985,"nodeType":"ExpressionStatement","src":"29586:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29630:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7004,"nodeType":"IfStatement","src":"29626:100:26","trueBody":{"id":7003,"nodeType":"Block","src":"29648:78:26","statements":[{"expression":{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29666:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6998,"nodeType":"ExpressionStatement","src":"29666:16:26"},{"expression":{"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29700:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7002,"nodeType":"ExpressionStatement","src":"29700:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7021,"nodeType":"IfStatement","src":"29739:100:26","trueBody":{"id":7020,"nodeType":"Block","src":"29761:78:26","statements":[{"expression":{"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29779:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7015,"nodeType":"ExpressionStatement","src":"29779:16:26"},{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29813:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7019,"nodeType":"ExpressionStatement","src":"29813:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29856:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7038,"nodeType":"IfStatement","src":"29852:100:26","trueBody":{"id":7037,"nodeType":"Block","src":"29874:78:26","statements":[{"expression":{"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29892:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7032,"nodeType":"ExpressionStatement","src":"29892:16:26"},{"expression":{"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29926:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7036,"nodeType":"ExpressionStatement","src":"29926:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"29969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7049,"nodeType":"IfStatement","src":"29965:66:26","trueBody":{"id":7048,"nodeType":"Block","src":"29987:44:26","statements":[{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"30005:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7047,"nodeType":"ExpressionStatement","src":"30005:11:26"}]}}]},{"expression":{"id":7051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"30057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6932,"id":7052,"nodeType":"Return","src":"30050:13:26"}]},"documentation":{"id":6926,"nodeType":"StructuredDocumentation","src":"29029:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:26","nodeType":"FunctionDefinition","parameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"value","nameLocation":"29177:5:26","nodeType":"VariableDeclaration","scope":7054,"src":"29169:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6927,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:26"},"returnParameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7054,"src":"29207:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:26"},"scope":7222,"src":"29154:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7087,"nodeType":"Block","src":"30305:177:26","statements":[{"id":7086,"nodeType":"UncheckedBlock","src":"30315:161:26","statements":[{"assignments":[7066],"declarations":[{"constant":false,"id":7066,"mutability":"mutable","name":"result","nameLocation":"30347:6:26","nodeType":"VariableDeclaration","scope":7086,"src":"30339:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7065,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7070,"initialValue":{"arguments":[{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7067,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7054,7088],"referencedDeclaration":7054,"src":"30356:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"30389:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7075,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"30431:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":7074,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"30414:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"30450:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"30459:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"30398:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"30398:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7064,"id":7085,"nodeType":"Return","src":"30382:83:26"}]}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"30076:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7088,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:26","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"30247:5:26","nodeType":"VariableDeclaration","scope":7088,"src":"30239:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7056,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7060,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:26","nodeType":"VariableDeclaration","scope":7088,"src":"30254:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":7059,"nodeType":"UserDefinedTypeName","pathNode":{"id":7058,"name":"Rounding","nameLocations":["30254:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"30254:8:26"},"referencedDeclaration":5613,"src":"30254:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:26"},"returnParameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7088,"src":"30296:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:26"},"scope":7222,"src":"30224:258:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7164,"nodeType":"Block","src":"30800:675:26","statements":[{"expression":{"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7096,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"30882:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7099,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"30902:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"30886:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"30886:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7106,"nodeType":"ExpressionStatement","src":"30882:64:26"},{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7110,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"31044:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7111,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31049:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"31027:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"31027:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7120,"nodeType":"ExpressionStatement","src":"31022:56:26"},{"expression":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7121,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31153:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"31175:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7125,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31180:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7122,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"31158:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"31158:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7134,"nodeType":"ExpressionStatement","src":"31153:48:26"},{"expression":{"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7135,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31276:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7138,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"31298:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7139,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31303:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7136,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"31281:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"31281:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7148,"nodeType":"ExpressionStatement","src":"31276:44:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7149,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31426:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7155,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"31453:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7156,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"31458:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7153,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"31436:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"31436:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7095,"id":7163,"nodeType":"Return","src":"31418:50:26"}]},"documentation":{"id":7089,"nodeType":"StructuredDocumentation","src":"30488:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7165,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:26","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7091,"mutability":"mutable","name":"x","nameLocation":"30763:1:26","nodeType":"VariableDeclaration","scope":7165,"src":"30755:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7090,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:26"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"r","nameLocation":"30797:1:26","nodeType":"VariableDeclaration","scope":7165,"src":"30789:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7093,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:26"},"scope":7222,"src":"30739:736:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"31712:184:26","statements":[{"id":7200,"nodeType":"UncheckedBlock","src":"31722:168:26","statements":[{"assignments":[7177],"declarations":[{"constant":false,"id":7177,"mutability":"mutable","name":"result","nameLocation":"31754:6:26","nodeType":"VariableDeclaration","scope":7200,"src":"31746:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7181,"initialValue":{"arguments":[{"id":7179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"31770:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7178,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7165,7202],"referencedDeclaration":7165,"src":"31763:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"31797:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7186,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"31839:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":7185,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"31822:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5613_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"31873:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"31806:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"31806:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7175,"id":7199,"nodeType":"Return","src":"31790:89:26"}]}]},"documentation":{"id":7166,"nodeType":"StructuredDocumentation","src":"31481:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:26","nodeType":"FunctionDefinition","parameters":{"id":7172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"value","nameLocation":"31654:5:26","nodeType":"VariableDeclaration","scope":7202,"src":"31646:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7167,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7171,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:26","nodeType":"VariableDeclaration","scope":7202,"src":"31661:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":7170,"nodeType":"UserDefinedTypeName","pathNode":{"id":7169,"name":"Rounding","nameLocations":["31661:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"31661:8:26"},"referencedDeclaration":5613,"src":"31661:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:26"},"returnParameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7202,"src":"31703:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7173,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:26"},"scope":7222,"src":"31630:266:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7220,"nodeType":"Block","src":"32094:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7213,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"32117:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7211,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:26","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7210,"id":7219,"nodeType":"Return","src":"32104:31:26"}]},"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"31902:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7221,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:26","nodeType":"FunctionDefinition","parameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:26","nodeType":"VariableDeclaration","scope":7221,"src":"32046:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"},"typeName":{"id":7205,"nodeType":"UserDefinedTypeName","pathNode":{"id":7204,"name":"Rounding","nameLocations":["32046:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":5613,"src":"32046:8:26"},"referencedDeclaration":5613,"src":"32046:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5613","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:26"},"returnParameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7221,"src":"32088:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7208,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:26"},"scope":7222,"src":"32020:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7223,"src":"281:31863:26","usedErrors":[],"usedEvents":[]}],"src":"103:32042:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8987]},"id":8988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7224,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7225,"nodeType":"StructuredDocumentation","src":"218:550:27","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8987,"linearizedBaseContracts":[8987],"name":"SafeCast","nameLocation":"777:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7226,"nodeType":"StructuredDocumentation","src":"792:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7232,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:27","nodeType":"ErrorDefinition","parameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"bits","nameLocation":"908:4:27","nodeType":"VariableDeclaration","scope":7232,"src":"902:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7227,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7230,"mutability":"mutable","name":"value","nameLocation":"922:5:27","nodeType":"VariableDeclaration","scope":7232,"src":"914:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:27"},"src":"865:64:27"},{"documentation":{"id":7233,"nodeType":"StructuredDocumentation","src":"935:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7237,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:27","nodeType":"ErrorDefinition","parameters":{"id":7236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7235,"mutability":"mutable","name":"value","nameLocation":"1056:5:27","nodeType":"VariableDeclaration","scope":7237,"src":"1049:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7234,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:27"},"src":"1015:48:27"},{"documentation":{"id":7238,"nodeType":"StructuredDocumentation","src":"1069:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7244,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:27","nodeType":"ErrorDefinition","parameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"bits","nameLocation":"1183:4:27","nodeType":"VariableDeclaration","scope":7244,"src":"1177:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7239,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7242,"mutability":"mutable","name":"value","nameLocation":"1196:5:27","nodeType":"VariableDeclaration","scope":7244,"src":"1189:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7241,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:27"},"src":"1141:62:27"},{"documentation":{"id":7245,"nodeType":"StructuredDocumentation","src":"1209:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7249,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:27","nodeType":"ErrorDefinition","parameters":{"id":7248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7247,"mutability":"mutable","name":"value","nameLocation":"1331:5:27","nodeType":"VariableDeclaration","scope":7249,"src":"1323:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:27"},"src":"1289:49:27"},{"body":{"id":7276,"nodeType":"Block","src":"1695:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"1709:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7259,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:27","memberName":"max","nodeType":"MemberAccess","src":"1717:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7270,"nodeType":"IfStatement","src":"1705:105:27","trueBody":{"id":7269,"nodeType":"Block","src":"1736:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"1793:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"1757:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7268,"nodeType":"RevertStatement","src":"1750:49:27"}]}},{"expression":{"arguments":[{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"1834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7271,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:27","typeDescriptions":{}}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7256,"id":7275,"nodeType":"Return","src":"1819:21:27"}]},"documentation":{"id":7250,"nodeType":"StructuredDocumentation","src":"1344:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:27","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"value","nameLocation":"1656:5:27","nodeType":"VariableDeclaration","scope":7277,"src":"1648:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:27"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7277,"src":"1686:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7254,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:27"},"scope":8987,"src":"1629:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7304,"nodeType":"Block","src":"2204:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"2218:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7287,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:27","memberName":"max","nodeType":"MemberAccess","src":"2226:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7298,"nodeType":"IfStatement","src":"2214:105:27","trueBody":{"id":7297,"nodeType":"Block","src":"2245:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"2302:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"2266:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7296,"nodeType":"RevertStatement","src":"2259:49:27"}]}},{"expression":{"arguments":[{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"2343:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7299,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:27","typeDescriptions":{}}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7284,"id":7303,"nodeType":"Return","src":"2328:21:27"}]},"documentation":{"id":7278,"nodeType":"StructuredDocumentation","src":"1853:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:27","nodeType":"FunctionDefinition","parameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"value","nameLocation":"2165:5:27","nodeType":"VariableDeclaration","scope":7305,"src":"2157:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:27"},"returnParameters":{"id":7284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7305,"src":"2195:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7282,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:27"},"scope":8987,"src":"2138:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7332,"nodeType":"Block","src":"2713:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2727:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7315,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:27","memberName":"max","nodeType":"MemberAccess","src":"2735:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7326,"nodeType":"IfStatement","src":"2723:105:27","trueBody":{"id":7325,"nodeType":"Block","src":"2754:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2811:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"2775:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7324,"nodeType":"RevertStatement","src":"2768:49:27"}]}},{"expression":{"arguments":[{"id":7329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2852:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7327,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:27","typeDescriptions":{}}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7312,"id":7331,"nodeType":"Return","src":"2837:21:27"}]},"documentation":{"id":7306,"nodeType":"StructuredDocumentation","src":"2362:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:27","nodeType":"FunctionDefinition","parameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"value","nameLocation":"2674:5:27","nodeType":"VariableDeclaration","scope":7333,"src":"2666:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:27"},"returnParameters":{"id":7312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7333,"src":"2704:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7310,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:27"},"scope":8987,"src":"2647:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7360,"nodeType":"Block","src":"3222:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"3236:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7343,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:27","memberName":"max","nodeType":"MemberAccess","src":"3244:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7354,"nodeType":"IfStatement","src":"3232:105:27","trueBody":{"id":7353,"nodeType":"Block","src":"3263:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"3320:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7348,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"3284:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7352,"nodeType":"RevertStatement","src":"3277:49:27"}]}},{"expression":{"arguments":[{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"3361:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7355,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:27","typeDescriptions":{}}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7340,"id":7359,"nodeType":"Return","src":"3346:21:27"}]},"documentation":{"id":7334,"nodeType":"StructuredDocumentation","src":"2871:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7361,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:27","nodeType":"FunctionDefinition","parameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"value","nameLocation":"3183:5:27","nodeType":"VariableDeclaration","scope":7361,"src":"3175:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:27"},"returnParameters":{"id":7340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7361,"src":"3213:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7338,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:27"},"scope":8987,"src":"3156:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7388,"nodeType":"Block","src":"3731:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7371,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:27","memberName":"max","nodeType":"MemberAccess","src":"3753:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7382,"nodeType":"IfStatement","src":"3741:105:27","trueBody":{"id":7381,"nodeType":"Block","src":"3772:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"3829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7376,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"3793:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7380,"nodeType":"RevertStatement","src":"3786:49:27"}]}},{"expression":{"arguments":[{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"3870:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7383,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:27","typeDescriptions":{}}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7368,"id":7387,"nodeType":"Return","src":"3855:21:27"}]},"documentation":{"id":7362,"nodeType":"StructuredDocumentation","src":"3380:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:27","nodeType":"FunctionDefinition","parameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"value","nameLocation":"3692:5:27","nodeType":"VariableDeclaration","scope":7389,"src":"3684:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:27"},"returnParameters":{"id":7368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7389,"src":"3722:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7366,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:27"},"scope":8987,"src":"3665:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7416,"nodeType":"Block","src":"4240:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"4254:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7399,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:27","memberName":"max","nodeType":"MemberAccess","src":"4262:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7410,"nodeType":"IfStatement","src":"4250:105:27","trueBody":{"id":7409,"nodeType":"Block","src":"4281:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"4338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7404,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"4302:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7408,"nodeType":"RevertStatement","src":"4295:49:27"}]}},{"expression":{"arguments":[{"id":7413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"4379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7411,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:27","typeDescriptions":{}}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7396,"id":7415,"nodeType":"Return","src":"4364:21:27"}]},"documentation":{"id":7390,"nodeType":"StructuredDocumentation","src":"3889:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:27","nodeType":"FunctionDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7392,"mutability":"mutable","name":"value","nameLocation":"4201:5:27","nodeType":"VariableDeclaration","scope":7417,"src":"4193:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:27"},"returnParameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7417,"src":"4231:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7394,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:27"},"scope":8987,"src":"4174:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7444,"nodeType":"Block","src":"4749:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"4763:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7427,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:27","memberName":"max","nodeType":"MemberAccess","src":"4771:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7438,"nodeType":"IfStatement","src":"4759:105:27","trueBody":{"id":7437,"nodeType":"Block","src":"4790:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"4847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7432,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"4811:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7436,"nodeType":"RevertStatement","src":"4804:49:27"}]}},{"expression":{"arguments":[{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"4888:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7439,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:27","typeDescriptions":{}}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7424,"id":7443,"nodeType":"Return","src":"4873:21:27"}]},"documentation":{"id":7418,"nodeType":"StructuredDocumentation","src":"4398:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:27","nodeType":"FunctionDefinition","parameters":{"id":7421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7420,"mutability":"mutable","name":"value","nameLocation":"4710:5:27","nodeType":"VariableDeclaration","scope":7445,"src":"4702:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7419,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:27"},"returnParameters":{"id":7424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7445,"src":"4740:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7422,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:27"},"scope":8987,"src":"4683:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7472,"nodeType":"Block","src":"5258:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"5272:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7455,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:27","memberName":"max","nodeType":"MemberAccess","src":"5280:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7466,"nodeType":"IfStatement","src":"5268:105:27","trueBody":{"id":7465,"nodeType":"Block","src":"5299:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"5356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7460,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"5320:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7464,"nodeType":"RevertStatement","src":"5313:49:27"}]}},{"expression":{"arguments":[{"id":7469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"5397:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7467,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:27","typeDescriptions":{}}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7452,"id":7471,"nodeType":"Return","src":"5382:21:27"}]},"documentation":{"id":7446,"nodeType":"StructuredDocumentation","src":"4907:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:27","nodeType":"FunctionDefinition","parameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7448,"mutability":"mutable","name":"value","nameLocation":"5219:5:27","nodeType":"VariableDeclaration","scope":7473,"src":"5211:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:27"},"returnParameters":{"id":7452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7473,"src":"5249:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7450,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:27"},"scope":8987,"src":"5192:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7500,"nodeType":"Block","src":"5767:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"5781:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7483,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:27","memberName":"max","nodeType":"MemberAccess","src":"5789:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7494,"nodeType":"IfStatement","src":"5777:105:27","trueBody":{"id":7493,"nodeType":"Block","src":"5808:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"5865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7488,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"5829:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7492,"nodeType":"RevertStatement","src":"5822:49:27"}]}},{"expression":{"arguments":[{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"5906:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7495,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:27","typeDescriptions":{}}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7480,"id":7499,"nodeType":"Return","src":"5891:21:27"}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"5416:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:27","nodeType":"FunctionDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"value","nameLocation":"5728:5:27","nodeType":"VariableDeclaration","scope":7501,"src":"5720:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:27"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7501,"src":"5758:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7478,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:27"},"scope":8987,"src":"5701:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7528,"nodeType":"Block","src":"6276:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"6290:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7511,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:27","memberName":"max","nodeType":"MemberAccess","src":"6298:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7522,"nodeType":"IfStatement","src":"6286:105:27","trueBody":{"id":7521,"nodeType":"Block","src":"6317:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"6374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"6338:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7520,"nodeType":"RevertStatement","src":"6331:49:27"}]}},{"expression":{"arguments":[{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"6415:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7523,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:27","typeDescriptions":{}}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7508,"id":7527,"nodeType":"Return","src":"6400:21:27"}]},"documentation":{"id":7502,"nodeType":"StructuredDocumentation","src":"5925:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:27","nodeType":"FunctionDefinition","parameters":{"id":7505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"mutability":"mutable","name":"value","nameLocation":"6237:5:27","nodeType":"VariableDeclaration","scope":7529,"src":"6229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:27"},"returnParameters":{"id":7508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7529,"src":"6267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7506,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:27"},"scope":8987,"src":"6210:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7556,"nodeType":"Block","src":"6785:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6799:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7539,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:27","memberName":"max","nodeType":"MemberAccess","src":"6807:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7550,"nodeType":"IfStatement","src":"6795:105:27","trueBody":{"id":7549,"nodeType":"Block","src":"6826:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"6847:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7548,"nodeType":"RevertStatement","src":"6840:49:27"}]}},{"expression":{"arguments":[{"id":7553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6924:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7551,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:27","typeDescriptions":{}}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7536,"id":7555,"nodeType":"Return","src":"6909:21:27"}]},"documentation":{"id":7530,"nodeType":"StructuredDocumentation","src":"6434:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:27","nodeType":"FunctionDefinition","parameters":{"id":7533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7532,"mutability":"mutable","name":"value","nameLocation":"6746:5:27","nodeType":"VariableDeclaration","scope":7557,"src":"6738:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:27"},"returnParameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7557,"src":"6776:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7534,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:27"},"scope":8987,"src":"6719:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7584,"nodeType":"Block","src":"7294:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"7308:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7567,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:27","memberName":"max","nodeType":"MemberAccess","src":"7316:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7578,"nodeType":"IfStatement","src":"7304:105:27","trueBody":{"id":7577,"nodeType":"Block","src":"7335:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"7392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"7356:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7576,"nodeType":"RevertStatement","src":"7349:49:27"}]}},{"expression":{"arguments":[{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"7433:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7579,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:27","typeDescriptions":{}}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7564,"id":7583,"nodeType":"Return","src":"7418:21:27"}]},"documentation":{"id":7558,"nodeType":"StructuredDocumentation","src":"6943:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:27","nodeType":"FunctionDefinition","parameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"mutability":"mutable","name":"value","nameLocation":"7255:5:27","nodeType":"VariableDeclaration","scope":7585,"src":"7247:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7559,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:27"},"returnParameters":{"id":7564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7585,"src":"7285:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7562,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:27"},"scope":8987,"src":"7228:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7612,"nodeType":"Block","src":"7803:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"7817:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7595,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:27","memberName":"max","nodeType":"MemberAccess","src":"7825:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7606,"nodeType":"IfStatement","src":"7813:105:27","trueBody":{"id":7605,"nodeType":"Block","src":"7844:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"7901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"7865:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7604,"nodeType":"RevertStatement","src":"7858:49:27"}]}},{"expression":{"arguments":[{"id":7609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"7942:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7607,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:27","typeDescriptions":{}}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7592,"id":7611,"nodeType":"Return","src":"7927:21:27"}]},"documentation":{"id":7586,"nodeType":"StructuredDocumentation","src":"7452:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:27","nodeType":"FunctionDefinition","parameters":{"id":7589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7588,"mutability":"mutable","name":"value","nameLocation":"7764:5:27","nodeType":"VariableDeclaration","scope":7613,"src":"7756:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:27"},"returnParameters":{"id":7592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7613,"src":"7794:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7590,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:27"},"scope":8987,"src":"7737:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7640,"nodeType":"Block","src":"8312:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"8326:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7623,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:27","memberName":"max","nodeType":"MemberAccess","src":"8334:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7634,"nodeType":"IfStatement","src":"8322:105:27","trueBody":{"id":7633,"nodeType":"Block","src":"8353:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"8410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"8374:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7632,"nodeType":"RevertStatement","src":"8367:49:27"}]}},{"expression":{"arguments":[{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"8451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7635,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:27","typeDescriptions":{}}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7620,"id":7639,"nodeType":"Return","src":"8436:21:27"}]},"documentation":{"id":7614,"nodeType":"StructuredDocumentation","src":"7961:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:27","nodeType":"FunctionDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"value","nameLocation":"8273:5:27","nodeType":"VariableDeclaration","scope":7641,"src":"8265:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:27"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7641,"src":"8303:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7618,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:27"},"scope":8987,"src":"8246:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7668,"nodeType":"Block","src":"8821:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"8835:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7651,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:27","memberName":"max","nodeType":"MemberAccess","src":"8843:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7662,"nodeType":"IfStatement","src":"8831:105:27","trueBody":{"id":7661,"nodeType":"Block","src":"8862:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"8919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"8883:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7660,"nodeType":"RevertStatement","src":"8876:49:27"}]}},{"expression":{"arguments":[{"id":7665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"8960:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7663,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:27","typeDescriptions":{}}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7648,"id":7667,"nodeType":"Return","src":"8945:21:27"}]},"documentation":{"id":7642,"nodeType":"StructuredDocumentation","src":"8470:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:27","nodeType":"FunctionDefinition","parameters":{"id":7645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"value","nameLocation":"8782:5:27","nodeType":"VariableDeclaration","scope":7669,"src":"8774:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:27"},"returnParameters":{"id":7648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7669,"src":"8812:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7646,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:27"},"scope":8987,"src":"8755:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7696,"nodeType":"Block","src":"9330:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"9344:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7679,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:27","memberName":"max","nodeType":"MemberAccess","src":"9352:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7690,"nodeType":"IfStatement","src":"9340:105:27","trueBody":{"id":7689,"nodeType":"Block","src":"9371:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"9428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"9392:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7688,"nodeType":"RevertStatement","src":"9385:49:27"}]}},{"expression":{"arguments":[{"id":7693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"9469:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7691,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:27","typeDescriptions":{}}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7676,"id":7695,"nodeType":"Return","src":"9454:21:27"}]},"documentation":{"id":7670,"nodeType":"StructuredDocumentation","src":"8979:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:27","nodeType":"FunctionDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"value","nameLocation":"9291:5:27","nodeType":"VariableDeclaration","scope":7697,"src":"9283:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7671,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:27"},"returnParameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7697,"src":"9321:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7674,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:27"},"scope":8987,"src":"9264:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7724,"nodeType":"Block","src":"9839:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"9853:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7707,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:27","memberName":"max","nodeType":"MemberAccess","src":"9861:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7718,"nodeType":"IfStatement","src":"9849:105:27","trueBody":{"id":7717,"nodeType":"Block","src":"9880:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"9937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"9901:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7716,"nodeType":"RevertStatement","src":"9894:49:27"}]}},{"expression":{"arguments":[{"id":7721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"9978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7719,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:27","typeDescriptions":{}}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7704,"id":7723,"nodeType":"Return","src":"9963:21:27"}]},"documentation":{"id":7698,"nodeType":"StructuredDocumentation","src":"9488:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:27","nodeType":"FunctionDefinition","parameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"value","nameLocation":"9800:5:27","nodeType":"VariableDeclaration","scope":7725,"src":"9792:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7699,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:27"},"returnParameters":{"id":7704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7725,"src":"9830:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7702,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:27"},"scope":8987,"src":"9773:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7752,"nodeType":"Block","src":"10348:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"10362:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7735,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:27","memberName":"max","nodeType":"MemberAccess","src":"10370:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7746,"nodeType":"IfStatement","src":"10358:105:27","trueBody":{"id":7745,"nodeType":"Block","src":"10389:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"10446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7740,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"10410:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7744,"nodeType":"RevertStatement","src":"10403:49:27"}]}},{"expression":{"arguments":[{"id":7749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"10487:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7747,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:27","typeDescriptions":{}}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7732,"id":7751,"nodeType":"Return","src":"10472:21:27"}]},"documentation":{"id":7726,"nodeType":"StructuredDocumentation","src":"9997:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7753,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:27","nodeType":"FunctionDefinition","parameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7728,"mutability":"mutable","name":"value","nameLocation":"10309:5:27","nodeType":"VariableDeclaration","scope":7753,"src":"10301:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7727,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:27"},"returnParameters":{"id":7732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7753,"src":"10339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7730,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:27"},"scope":8987,"src":"10282:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7780,"nodeType":"Block","src":"10857:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10871:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7763,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:27","memberName":"max","nodeType":"MemberAccess","src":"10879:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7774,"nodeType":"IfStatement","src":"10867:105:27","trueBody":{"id":7773,"nodeType":"Block","src":"10898:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7768,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"10919:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7772,"nodeType":"RevertStatement","src":"10912:49:27"}]}},{"expression":{"arguments":[{"id":7777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7775,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:27","typeDescriptions":{}}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7760,"id":7779,"nodeType":"Return","src":"10981:21:27"}]},"documentation":{"id":7754,"nodeType":"StructuredDocumentation","src":"10506:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7781,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:27","nodeType":"FunctionDefinition","parameters":{"id":7757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7756,"mutability":"mutable","name":"value","nameLocation":"10818:5:27","nodeType":"VariableDeclaration","scope":7781,"src":"10810:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:27"},"returnParameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7781,"src":"10848:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7758,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:27"},"scope":8987,"src":"10791:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7808,"nodeType":"Block","src":"11360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"11374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7791,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:27","memberName":"max","nodeType":"MemberAccess","src":"11382:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7802,"nodeType":"IfStatement","src":"11370:103:27","trueBody":{"id":7801,"nodeType":"Block","src":"11400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"11456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7796,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"11421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7800,"nodeType":"RevertStatement","src":"11414:48:27"}]}},{"expression":{"arguments":[{"id":7805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"11496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7803,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:27","typeDescriptions":{}}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7788,"id":7807,"nodeType":"Return","src":"11482:20:27"}]},"documentation":{"id":7782,"nodeType":"StructuredDocumentation","src":"11015:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7809,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:27","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"value","nameLocation":"11322:5:27","nodeType":"VariableDeclaration","scope":7809,"src":"11314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:27"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7809,"src":"11352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7786,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:27"},"scope":8987,"src":"11296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7836,"nodeType":"Block","src":"11860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7812,"src":"11874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7819,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:27","memberName":"max","nodeType":"MemberAccess","src":"11882:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7830,"nodeType":"IfStatement","src":"11870:103:27","trueBody":{"id":7829,"nodeType":"Block","src":"11900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7812,"src":"11956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7824,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"11921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7828,"nodeType":"RevertStatement","src":"11914:48:27"}]}},{"expression":{"arguments":[{"id":7833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7812,"src":"11996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7831,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:27","typeDescriptions":{}}},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7816,"id":7835,"nodeType":"Return","src":"11982:20:27"}]},"documentation":{"id":7810,"nodeType":"StructuredDocumentation","src":"11515:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:27","nodeType":"FunctionDefinition","parameters":{"id":7813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7812,"mutability":"mutable","name":"value","nameLocation":"11822:5:27","nodeType":"VariableDeclaration","scope":7837,"src":"11814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7811,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:27"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7837,"src":"11852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7814,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:27"},"scope":8987,"src":"11796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7864,"nodeType":"Block","src":"12360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"12374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7847,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:27","memberName":"max","nodeType":"MemberAccess","src":"12382:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7858,"nodeType":"IfStatement","src":"12370:103:27","trueBody":{"id":7857,"nodeType":"Block","src":"12400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"12456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7852,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"12421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7856,"nodeType":"RevertStatement","src":"12414:48:27"}]}},{"expression":{"arguments":[{"id":7861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"12496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7859,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:27","typeDescriptions":{}}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7844,"id":7863,"nodeType":"Return","src":"12482:20:27"}]},"documentation":{"id":7838,"nodeType":"StructuredDocumentation","src":"12015:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7865,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:27","nodeType":"FunctionDefinition","parameters":{"id":7841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7840,"mutability":"mutable","name":"value","nameLocation":"12322:5:27","nodeType":"VariableDeclaration","scope":7865,"src":"12314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:27"},"returnParameters":{"id":7844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7865,"src":"12352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7842,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:27"},"scope":8987,"src":"12296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7892,"nodeType":"Block","src":"12860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"12874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7875,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7874,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:27","memberName":"max","nodeType":"MemberAccess","src":"12882:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7886,"nodeType":"IfStatement","src":"12870:103:27","trueBody":{"id":7885,"nodeType":"Block","src":"12900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"12956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7880,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"12921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7884,"nodeType":"RevertStatement","src":"12914:48:27"}]}},{"expression":{"arguments":[{"id":7889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"12996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7887,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:27","typeDescriptions":{}}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7872,"id":7891,"nodeType":"Return","src":"12982:20:27"}]},"documentation":{"id":7866,"nodeType":"StructuredDocumentation","src":"12515:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7893,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:27","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"value","nameLocation":"12822:5:27","nodeType":"VariableDeclaration","scope":7893,"src":"12814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7867,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:27"},"returnParameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7893,"src":"12852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7870,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:27"},"scope":8987,"src":"12796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7920,"nodeType":"Block","src":"13360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"13374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7903,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:27","memberName":"max","nodeType":"MemberAccess","src":"13382:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7914,"nodeType":"IfStatement","src":"13370:103:27","trueBody":{"id":7913,"nodeType":"Block","src":"13400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"13456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7908,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"13421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7912,"nodeType":"RevertStatement","src":"13414:48:27"}]}},{"expression":{"arguments":[{"id":7917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"13496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7915,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:27","typeDescriptions":{}}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7900,"id":7919,"nodeType":"Return","src":"13482:20:27"}]},"documentation":{"id":7894,"nodeType":"StructuredDocumentation","src":"13015:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7921,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:27","nodeType":"FunctionDefinition","parameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7896,"mutability":"mutable","name":"value","nameLocation":"13322:5:27","nodeType":"VariableDeclaration","scope":7921,"src":"13314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7895,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:27"},"returnParameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7921,"src":"13352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7898,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:27"},"scope":8987,"src":"13296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7948,"nodeType":"Block","src":"13860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"13874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7931,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7930,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:27","memberName":"max","nodeType":"MemberAccess","src":"13882:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7942,"nodeType":"IfStatement","src":"13870:103:27","trueBody":{"id":7941,"nodeType":"Block","src":"13900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"13956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7936,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"13921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7940,"nodeType":"RevertStatement","src":"13914:48:27"}]}},{"expression":{"arguments":[{"id":7945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"13996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7943,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:27","typeDescriptions":{}}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7928,"id":7947,"nodeType":"Return","src":"13982:20:27"}]},"documentation":{"id":7922,"nodeType":"StructuredDocumentation","src":"13515:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:27","nodeType":"FunctionDefinition","parameters":{"id":7925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7924,"mutability":"mutable","name":"value","nameLocation":"13822:5:27","nodeType":"VariableDeclaration","scope":7949,"src":"13814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7923,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:27"},"returnParameters":{"id":7928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7949,"src":"13852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7926,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:27"},"scope":8987,"src":"13796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7976,"nodeType":"Block","src":"14360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"14374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7959,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:27","memberName":"max","nodeType":"MemberAccess","src":"14382:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7970,"nodeType":"IfStatement","src":"14370:103:27","trueBody":{"id":7969,"nodeType":"Block","src":"14400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"14456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7964,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"14421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7968,"nodeType":"RevertStatement","src":"14414:48:27"}]}},{"expression":{"arguments":[{"id":7973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"14496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7971,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:27","typeDescriptions":{}}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7956,"id":7975,"nodeType":"Return","src":"14482:20:27"}]},"documentation":{"id":7950,"nodeType":"StructuredDocumentation","src":"14015:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:27","nodeType":"FunctionDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"value","nameLocation":"14322:5:27","nodeType":"VariableDeclaration","scope":7977,"src":"14314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:27"},"returnParameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7977,"src":"14352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7954,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:27"},"scope":8987,"src":"14296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8004,"nodeType":"Block","src":"14860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"14874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7987,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:27","memberName":"max","nodeType":"MemberAccess","src":"14882:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7998,"nodeType":"IfStatement","src":"14870:103:27","trueBody":{"id":7997,"nodeType":"Block","src":"14900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"14956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7992,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"14921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7996,"nodeType":"RevertStatement","src":"14914:48:27"}]}},{"expression":{"arguments":[{"id":8001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"14996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7999,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:27","typeDescriptions":{}}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7984,"id":8003,"nodeType":"Return","src":"14982:20:27"}]},"documentation":{"id":7978,"nodeType":"StructuredDocumentation","src":"14515:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:27","nodeType":"FunctionDefinition","parameters":{"id":7981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7980,"mutability":"mutable","name":"value","nameLocation":"14822:5:27","nodeType":"VariableDeclaration","scope":8005,"src":"14814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7979,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:27"},"returnParameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8005,"src":"14852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7982,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:27"},"scope":8987,"src":"14796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8032,"nodeType":"Block","src":"15360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"15374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8015,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:27","memberName":"max","nodeType":"MemberAccess","src":"15382:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8026,"nodeType":"IfStatement","src":"15370:103:27","trueBody":{"id":8025,"nodeType":"Block","src":"15400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"15456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"15421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8024,"nodeType":"RevertStatement","src":"15414:48:27"}]}},{"expression":{"arguments":[{"id":8029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"15496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8027,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:27","typeDescriptions":{}}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8012,"id":8031,"nodeType":"Return","src":"15482:20:27"}]},"documentation":{"id":8006,"nodeType":"StructuredDocumentation","src":"15015:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8008,"mutability":"mutable","name":"value","nameLocation":"15322:5:27","nodeType":"VariableDeclaration","scope":8033,"src":"15314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8007,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:27"},"returnParameters":{"id":8012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8033,"src":"15352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8010,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:27"},"scope":8987,"src":"15296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8060,"nodeType":"Block","src":"15860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"15874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8043,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:27","memberName":"max","nodeType":"MemberAccess","src":"15882:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8054,"nodeType":"IfStatement","src":"15870:103:27","trueBody":{"id":8053,"nodeType":"Block","src":"15900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"15956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8048,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"15921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8052,"nodeType":"RevertStatement","src":"15914:48:27"}]}},{"expression":{"arguments":[{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"15996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8055,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:27","typeDescriptions":{}}},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8040,"id":8059,"nodeType":"Return","src":"15982:20:27"}]},"documentation":{"id":8034,"nodeType":"StructuredDocumentation","src":"15515:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8036,"mutability":"mutable","name":"value","nameLocation":"15822:5:27","nodeType":"VariableDeclaration","scope":8061,"src":"15814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8035,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:27"},"returnParameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8061,"src":"15852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8038,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:27"},"scope":8987,"src":"15796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8088,"nodeType":"Block","src":"16360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"16374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8071,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:27","memberName":"max","nodeType":"MemberAccess","src":"16382:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8082,"nodeType":"IfStatement","src":"16370:103:27","trueBody":{"id":8081,"nodeType":"Block","src":"16400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"16456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8076,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"16421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8080,"nodeType":"RevertStatement","src":"16414:48:27"}]}},{"expression":{"arguments":[{"id":8085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"16496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8083,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:27","typeDescriptions":{}}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8068,"id":8087,"nodeType":"Return","src":"16482:20:27"}]},"documentation":{"id":8062,"nodeType":"StructuredDocumentation","src":"16015:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"value","nameLocation":"16322:5:27","nodeType":"VariableDeclaration","scope":8089,"src":"16314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8063,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:27"},"returnParameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8089,"src":"16352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8066,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:27"},"scope":8987,"src":"16296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8116,"nodeType":"Block","src":"16854:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"16868:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8099,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8098,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:27","memberName":"max","nodeType":"MemberAccess","src":"16876:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8110,"nodeType":"IfStatement","src":"16864:101:27","trueBody":{"id":8109,"nodeType":"Block","src":"16893:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"16948:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8104,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"16914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8108,"nodeType":"RevertStatement","src":"16907:47:27"}]}},{"expression":{"arguments":[{"id":8113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"16987:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8111,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:27","typeDescriptions":{}}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8096,"id":8115,"nodeType":"Return","src":"16974:19:27"}]},"documentation":{"id":8090,"nodeType":"StructuredDocumentation","src":"16515:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:27","nodeType":"FunctionDefinition","parameters":{"id":8093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8092,"mutability":"mutable","name":"value","nameLocation":"16817:5:27","nodeType":"VariableDeclaration","scope":8117,"src":"16809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8091,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:27"},"returnParameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8117,"src":"16847:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8094,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:27"},"scope":8987,"src":"16792:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8139,"nodeType":"Block","src":"17236:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"17250:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8133,"nodeType":"IfStatement","src":"17246:81:27","trueBody":{"id":8132,"nodeType":"Block","src":"17261:66:27","statements":[{"errorCall":{"arguments":[{"id":8129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"17310:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8128,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"17282:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8131,"nodeType":"RevertStatement","src":"17275:41:27"}]}},{"expression":{"arguments":[{"id":8136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"17351:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:27","typeDescriptions":{}}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8124,"id":8138,"nodeType":"Return","src":"17336:21:27"}]},"documentation":{"id":8118,"nodeType":"StructuredDocumentation","src":"17006:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8140,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:27","nodeType":"FunctionDefinition","parameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"mutability":"mutable","name":"value","nameLocation":"17197:5:27","nodeType":"VariableDeclaration","scope":8140,"src":"17190:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8119,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:27"},"returnParameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8140,"src":"17227:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:27"},"scope":8987,"src":"17171:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8165,"nodeType":"Block","src":"17761:150:27","statements":[{"expression":{"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"17771:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"17791:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8149,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:27","typeDescriptions":{}}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8154,"nodeType":"ExpressionStatement","src":"17771:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"17811:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"17825:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8164,"nodeType":"IfStatement","src":"17807:98:27","trueBody":{"id":8163,"nodeType":"Block","src":"17832:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"17888:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"17853:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8162,"nodeType":"RevertStatement","src":"17846:48:27"}]}}]},"documentation":{"id":8141,"nodeType":"StructuredDocumentation","src":"17370:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:27","nodeType":"FunctionDefinition","parameters":{"id":8144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8143,"mutability":"mutable","name":"value","nameLocation":"17712:5:27","nodeType":"VariableDeclaration","scope":8166,"src":"17705:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8142,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:27"},"returnParameters":{"id":8147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8146,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:27","nodeType":"VariableDeclaration","scope":8166,"src":"17742:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8145,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:27"},"scope":8987,"src":"17687:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8191,"nodeType":"Block","src":"18308:150:27","statements":[{"expression":{"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"18318:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"18338:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8175,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:27","typeDescriptions":{}}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8180,"nodeType":"ExpressionStatement","src":"18318:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"18358:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"18372:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8190,"nodeType":"IfStatement","src":"18354:98:27","trueBody":{"id":8189,"nodeType":"Block","src":"18379:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"18435:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"18400:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8188,"nodeType":"RevertStatement","src":"18393:48:27"}]}}]},"documentation":{"id":8167,"nodeType":"StructuredDocumentation","src":"17917:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:27","nodeType":"FunctionDefinition","parameters":{"id":8170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8169,"mutability":"mutable","name":"value","nameLocation":"18259:5:27","nodeType":"VariableDeclaration","scope":8192,"src":"18252:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8168,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:27"},"returnParameters":{"id":8173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8172,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:27","nodeType":"VariableDeclaration","scope":8192,"src":"18289:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8171,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:27"},"scope":8987,"src":"18234:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8217,"nodeType":"Block","src":"18855:150:27","statements":[{"expression":{"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"18865:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"18885:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8201,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:27","typeDescriptions":{}}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8206,"nodeType":"ExpressionStatement","src":"18865:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"18905:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"18919:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8216,"nodeType":"IfStatement","src":"18901:98:27","trueBody":{"id":8215,"nodeType":"Block","src":"18926:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"18982:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"18947:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8214,"nodeType":"RevertStatement","src":"18940:48:27"}]}}]},"documentation":{"id":8193,"nodeType":"StructuredDocumentation","src":"18464:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:27","nodeType":"FunctionDefinition","parameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8195,"mutability":"mutable","name":"value","nameLocation":"18806:5:27","nodeType":"VariableDeclaration","scope":8218,"src":"18799:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8194,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:27"},"returnParameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8198,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:27","nodeType":"VariableDeclaration","scope":8218,"src":"18836:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8197,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:27"},"scope":8987,"src":"18781:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8243,"nodeType":"Block","src":"19402:150:27","statements":[{"expression":{"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"19412:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"19432:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8227,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:27","typeDescriptions":{}}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8232,"nodeType":"ExpressionStatement","src":"19412:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"19452:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"19466:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8242,"nodeType":"IfStatement","src":"19448:98:27","trueBody":{"id":8241,"nodeType":"Block","src":"19473:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"19529:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"19494:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8240,"nodeType":"RevertStatement","src":"19487:48:27"}]}}]},"documentation":{"id":8219,"nodeType":"StructuredDocumentation","src":"19011:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:27","nodeType":"FunctionDefinition","parameters":{"id":8222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8221,"mutability":"mutable","name":"value","nameLocation":"19353:5:27","nodeType":"VariableDeclaration","scope":8244,"src":"19346:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8220,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:27"},"returnParameters":{"id":8225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8224,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:27","nodeType":"VariableDeclaration","scope":8244,"src":"19383:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8223,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:27"},"scope":8987,"src":"19328:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8269,"nodeType":"Block","src":"19949:150:27","statements":[{"expression":{"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"19959:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"19979:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8253,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:27","typeDescriptions":{}}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8258,"nodeType":"ExpressionStatement","src":"19959:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"19999:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"20013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8268,"nodeType":"IfStatement","src":"19995:98:27","trueBody":{"id":8267,"nodeType":"Block","src":"20020:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"20076:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"20041:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8266,"nodeType":"RevertStatement","src":"20034:48:27"}]}}]},"documentation":{"id":8245,"nodeType":"StructuredDocumentation","src":"19558:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:27","nodeType":"FunctionDefinition","parameters":{"id":8248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"value","nameLocation":"19900:5:27","nodeType":"VariableDeclaration","scope":8270,"src":"19893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8246,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:27"},"returnParameters":{"id":8251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8250,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:27","nodeType":"VariableDeclaration","scope":8270,"src":"19930:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8249,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:27"},"scope":8987,"src":"19875:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8295,"nodeType":"Block","src":"20496:150:27","statements":[{"expression":{"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8276,"src":"20506:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"20526:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8279,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:27","typeDescriptions":{}}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8284,"nodeType":"ExpressionStatement","src":"20506:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8276,"src":"20546:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"20560:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8294,"nodeType":"IfStatement","src":"20542:98:27","trueBody":{"id":8293,"nodeType":"Block","src":"20567:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"20623:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"20588:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8292,"nodeType":"RevertStatement","src":"20581:48:27"}]}}]},"documentation":{"id":8271,"nodeType":"StructuredDocumentation","src":"20105:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:27","nodeType":"FunctionDefinition","parameters":{"id":8274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8273,"mutability":"mutable","name":"value","nameLocation":"20447:5:27","nodeType":"VariableDeclaration","scope":8296,"src":"20440:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8272,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:27"},"returnParameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8276,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:27","nodeType":"VariableDeclaration","scope":8296,"src":"20477:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8275,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:27"},"scope":8987,"src":"20422:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8321,"nodeType":"Block","src":"21043:150:27","statements":[{"expression":{"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"21053:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"21073:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8305,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:27","typeDescriptions":{}}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8310,"nodeType":"ExpressionStatement","src":"21053:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"21093:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"21107:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8320,"nodeType":"IfStatement","src":"21089:98:27","trueBody":{"id":8319,"nodeType":"Block","src":"21114:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"21170:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"21135:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8318,"nodeType":"RevertStatement","src":"21128:48:27"}]}}]},"documentation":{"id":8297,"nodeType":"StructuredDocumentation","src":"20652:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:27","nodeType":"FunctionDefinition","parameters":{"id":8300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"value","nameLocation":"20994:5:27","nodeType":"VariableDeclaration","scope":8322,"src":"20987:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8298,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:27"},"returnParameters":{"id":8303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8302,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:27","nodeType":"VariableDeclaration","scope":8322,"src":"21024:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8301,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:27"},"scope":8987,"src":"20969:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8347,"nodeType":"Block","src":"21590:150:27","statements":[{"expression":{"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"21600:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"21620:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8331,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:27","typeDescriptions":{}}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8336,"nodeType":"ExpressionStatement","src":"21600:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"21640:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"21654:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8346,"nodeType":"IfStatement","src":"21636:98:27","trueBody":{"id":8345,"nodeType":"Block","src":"21661:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"21717:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"21682:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8344,"nodeType":"RevertStatement","src":"21675:48:27"}]}}]},"documentation":{"id":8323,"nodeType":"StructuredDocumentation","src":"21199:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:27","nodeType":"FunctionDefinition","parameters":{"id":8326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8325,"mutability":"mutable","name":"value","nameLocation":"21541:5:27","nodeType":"VariableDeclaration","scope":8348,"src":"21534:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8324,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:27"},"returnParameters":{"id":8329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8328,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:27","nodeType":"VariableDeclaration","scope":8348,"src":"21571:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8327,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:27"},"scope":8987,"src":"21516:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8373,"nodeType":"Block","src":"22137:150:27","statements":[{"expression":{"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"22147:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"22167:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8357,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:27","typeDescriptions":{}}},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8362,"nodeType":"ExpressionStatement","src":"22147:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"22187:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"22201:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8372,"nodeType":"IfStatement","src":"22183:98:27","trueBody":{"id":8371,"nodeType":"Block","src":"22208:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"22264:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"22229:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8370,"nodeType":"RevertStatement","src":"22222:48:27"}]}}]},"documentation":{"id":8349,"nodeType":"StructuredDocumentation","src":"21746:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:27","nodeType":"FunctionDefinition","parameters":{"id":8352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8351,"mutability":"mutable","name":"value","nameLocation":"22088:5:27","nodeType":"VariableDeclaration","scope":8374,"src":"22081:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8350,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:27"},"returnParameters":{"id":8355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8354,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:27","nodeType":"VariableDeclaration","scope":8374,"src":"22118:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8353,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:27"},"scope":8987,"src":"22063:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8399,"nodeType":"Block","src":"22684:150:27","statements":[{"expression":{"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"22694:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"22714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8383,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:27","typeDescriptions":{}}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8388,"nodeType":"ExpressionStatement","src":"22694:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"22734:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"22748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8398,"nodeType":"IfStatement","src":"22730:98:27","trueBody":{"id":8397,"nodeType":"Block","src":"22755:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"22811:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"22776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8396,"nodeType":"RevertStatement","src":"22769:48:27"}]}}]},"documentation":{"id":8375,"nodeType":"StructuredDocumentation","src":"22293:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:27","nodeType":"FunctionDefinition","parameters":{"id":8378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8377,"mutability":"mutable","name":"value","nameLocation":"22635:5:27","nodeType":"VariableDeclaration","scope":8400,"src":"22628:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8376,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:27"},"returnParameters":{"id":8381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8380,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:27","nodeType":"VariableDeclaration","scope":8400,"src":"22665:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8379,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:27"},"scope":8987,"src":"22610:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8425,"nodeType":"Block","src":"23231:150:27","statements":[{"expression":{"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"23241:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"23261:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8409,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:27","typeDescriptions":{}}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8414,"nodeType":"ExpressionStatement","src":"23241:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"23281:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"23295:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8424,"nodeType":"IfStatement","src":"23277:98:27","trueBody":{"id":8423,"nodeType":"Block","src":"23302:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"23358:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"23323:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8422,"nodeType":"RevertStatement","src":"23316:48:27"}]}}]},"documentation":{"id":8401,"nodeType":"StructuredDocumentation","src":"22840:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:27","nodeType":"FunctionDefinition","parameters":{"id":8404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8403,"mutability":"mutable","name":"value","nameLocation":"23182:5:27","nodeType":"VariableDeclaration","scope":8426,"src":"23175:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8402,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:27"},"returnParameters":{"id":8407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8406,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:27","nodeType":"VariableDeclaration","scope":8426,"src":"23212:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8405,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:27"},"scope":8987,"src":"23157:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8451,"nodeType":"Block","src":"23778:150:27","statements":[{"expression":{"id":8439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"23788:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"23808:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8435,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:27","typeDescriptions":{}}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8440,"nodeType":"ExpressionStatement","src":"23788:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"23828:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"23842:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8450,"nodeType":"IfStatement","src":"23824:98:27","trueBody":{"id":8449,"nodeType":"Block","src":"23849:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"23905:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"23870:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8448,"nodeType":"RevertStatement","src":"23863:48:27"}]}}]},"documentation":{"id":8427,"nodeType":"StructuredDocumentation","src":"23387:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:27","nodeType":"FunctionDefinition","parameters":{"id":8430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8429,"mutability":"mutable","name":"value","nameLocation":"23729:5:27","nodeType":"VariableDeclaration","scope":8452,"src":"23722:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8428,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:27"},"returnParameters":{"id":8433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8432,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:27","nodeType":"VariableDeclaration","scope":8452,"src":"23759:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8431,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:27"},"scope":8987,"src":"23704:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8477,"nodeType":"Block","src":"24325:150:27","statements":[{"expression":{"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"24335:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"24355:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8461,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:27","typeDescriptions":{}}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8466,"nodeType":"ExpressionStatement","src":"24335:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"24375:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"24389:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8476,"nodeType":"IfStatement","src":"24371:98:27","trueBody":{"id":8475,"nodeType":"Block","src":"24396:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"24452:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"24417:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8474,"nodeType":"RevertStatement","src":"24410:48:27"}]}}]},"documentation":{"id":8453,"nodeType":"StructuredDocumentation","src":"23934:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:27","nodeType":"FunctionDefinition","parameters":{"id":8456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8455,"mutability":"mutable","name":"value","nameLocation":"24276:5:27","nodeType":"VariableDeclaration","scope":8478,"src":"24269:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8454,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:27"},"returnParameters":{"id":8459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8458,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:27","nodeType":"VariableDeclaration","scope":8478,"src":"24306:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8457,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:27"},"scope":8987,"src":"24251:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8503,"nodeType":"Block","src":"24872:150:27","statements":[{"expression":{"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"24882:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"24902:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8487,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:27","typeDescriptions":{}}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8492,"nodeType":"ExpressionStatement","src":"24882:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"24922:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"24936:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8502,"nodeType":"IfStatement","src":"24918:98:27","trueBody":{"id":8501,"nodeType":"Block","src":"24943:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"24999:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"24964:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8500,"nodeType":"RevertStatement","src":"24957:48:27"}]}}]},"documentation":{"id":8479,"nodeType":"StructuredDocumentation","src":"24481:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:27","nodeType":"FunctionDefinition","parameters":{"id":8482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8481,"mutability":"mutable","name":"value","nameLocation":"24823:5:27","nodeType":"VariableDeclaration","scope":8504,"src":"24816:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8480,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:27"},"returnParameters":{"id":8485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:27","nodeType":"VariableDeclaration","scope":8504,"src":"24853:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8483,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:27"},"scope":8987,"src":"24798:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8529,"nodeType":"Block","src":"25419:150:27","statements":[{"expression":{"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"25429:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"25449:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8513,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:27","typeDescriptions":{}}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8518,"nodeType":"ExpressionStatement","src":"25429:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"25469:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"25483:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8528,"nodeType":"IfStatement","src":"25465:98:27","trueBody":{"id":8527,"nodeType":"Block","src":"25490:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"25546:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"25511:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8526,"nodeType":"RevertStatement","src":"25504:48:27"}]}}]},"documentation":{"id":8505,"nodeType":"StructuredDocumentation","src":"25028:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:27","nodeType":"FunctionDefinition","parameters":{"id":8508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8507,"mutability":"mutable","name":"value","nameLocation":"25370:5:27","nodeType":"VariableDeclaration","scope":8530,"src":"25363:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8506,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:27"},"returnParameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:27","nodeType":"VariableDeclaration","scope":8530,"src":"25400:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8509,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:27"},"scope":8987,"src":"25345:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8555,"nodeType":"Block","src":"25966:150:27","statements":[{"expression":{"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8536,"src":"25976:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"25996:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8539,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:27","typeDescriptions":{}}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8544,"nodeType":"ExpressionStatement","src":"25976:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8536,"src":"26016:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"26030:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8554,"nodeType":"IfStatement","src":"26012:98:27","trueBody":{"id":8553,"nodeType":"Block","src":"26037:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"26093:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"26058:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8552,"nodeType":"RevertStatement","src":"26051:48:27"}]}}]},"documentation":{"id":8531,"nodeType":"StructuredDocumentation","src":"25575:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:27","nodeType":"FunctionDefinition","parameters":{"id":8534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8533,"mutability":"mutable","name":"value","nameLocation":"25917:5:27","nodeType":"VariableDeclaration","scope":8556,"src":"25910:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8532,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:27"},"returnParameters":{"id":8537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8536,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:27","nodeType":"VariableDeclaration","scope":8556,"src":"25947:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8535,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:27"},"scope":8987,"src":"25892:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8581,"nodeType":"Block","src":"26513:150:27","statements":[{"expression":{"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"26523:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"26543:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8565,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:27","typeDescriptions":{}}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8570,"nodeType":"ExpressionStatement","src":"26523:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"26563:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"26577:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8580,"nodeType":"IfStatement","src":"26559:98:27","trueBody":{"id":8579,"nodeType":"Block","src":"26584:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"26640:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"26605:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8578,"nodeType":"RevertStatement","src":"26598:48:27"}]}}]},"documentation":{"id":8557,"nodeType":"StructuredDocumentation","src":"26122:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:27","nodeType":"FunctionDefinition","parameters":{"id":8560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8559,"mutability":"mutable","name":"value","nameLocation":"26464:5:27","nodeType":"VariableDeclaration","scope":8582,"src":"26457:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8558,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:27"},"returnParameters":{"id":8563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8562,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:27","nodeType":"VariableDeclaration","scope":8582,"src":"26494:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8561,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:27"},"scope":8987,"src":"26439:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8607,"nodeType":"Block","src":"27060:150:27","statements":[{"expression":{"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"27070:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"27090:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8591,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:27","typeDescriptions":{}}},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8596,"nodeType":"ExpressionStatement","src":"27070:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"27110:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"27124:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8606,"nodeType":"IfStatement","src":"27106:98:27","trueBody":{"id":8605,"nodeType":"Block","src":"27131:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"27187:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"27152:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8604,"nodeType":"RevertStatement","src":"27145:48:27"}]}}]},"documentation":{"id":8583,"nodeType":"StructuredDocumentation","src":"26669:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:27","nodeType":"FunctionDefinition","parameters":{"id":8586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8585,"mutability":"mutable","name":"value","nameLocation":"27011:5:27","nodeType":"VariableDeclaration","scope":8608,"src":"27004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8584,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:27"},"returnParameters":{"id":8589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8588,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:27","nodeType":"VariableDeclaration","scope":8608,"src":"27041:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8587,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:27"},"scope":8987,"src":"26986:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8633,"nodeType":"Block","src":"27607:150:27","statements":[{"expression":{"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"27617:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"27637:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8617,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:27","typeDescriptions":{}}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8622,"nodeType":"ExpressionStatement","src":"27617:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"27657:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"27671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8632,"nodeType":"IfStatement","src":"27653:98:27","trueBody":{"id":8631,"nodeType":"Block","src":"27678:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"27734:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"27699:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8630,"nodeType":"RevertStatement","src":"27692:48:27"}]}}]},"documentation":{"id":8609,"nodeType":"StructuredDocumentation","src":"27216:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:27","nodeType":"FunctionDefinition","parameters":{"id":8612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8611,"mutability":"mutable","name":"value","nameLocation":"27558:5:27","nodeType":"VariableDeclaration","scope":8634,"src":"27551:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8610,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:27"},"returnParameters":{"id":8615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8614,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:27","nodeType":"VariableDeclaration","scope":8634,"src":"27588:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8613,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:27"},"scope":8987,"src":"27533:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8659,"nodeType":"Block","src":"28147:148:27","statements":[{"expression":{"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8640,"src":"28157:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8637,"src":"28176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8643,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:27","typeDescriptions":{}}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8648,"nodeType":"ExpressionStatement","src":"28157:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8640,"src":"28196:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8637,"src":"28210:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8658,"nodeType":"IfStatement","src":"28192:97:27","trueBody":{"id":8657,"nodeType":"Block","src":"28217:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8637,"src":"28272:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"28238:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8656,"nodeType":"RevertStatement","src":"28231:47:27"}]}}]},"documentation":{"id":8635,"nodeType":"StructuredDocumentation","src":"27763:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:27","nodeType":"FunctionDefinition","parameters":{"id":8638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8637,"mutability":"mutable","name":"value","nameLocation":"28099:5:27","nodeType":"VariableDeclaration","scope":8660,"src":"28092:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8636,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:27"},"returnParameters":{"id":8641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8640,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:27","nodeType":"VariableDeclaration","scope":8660,"src":"28129:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8639,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:27"},"scope":8987,"src":"28075:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8685,"nodeType":"Block","src":"28685:148:27","statements":[{"expression":{"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8666,"src":"28695:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"28714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8669,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:27","typeDescriptions":{}}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8674,"nodeType":"ExpressionStatement","src":"28695:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8666,"src":"28734:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"28748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8684,"nodeType":"IfStatement","src":"28730:97:27","trueBody":{"id":8683,"nodeType":"Block","src":"28755:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"28810:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"28776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8682,"nodeType":"RevertStatement","src":"28769:47:27"}]}}]},"documentation":{"id":8661,"nodeType":"StructuredDocumentation","src":"28301:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:27","nodeType":"FunctionDefinition","parameters":{"id":8664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8663,"mutability":"mutable","name":"value","nameLocation":"28637:5:27","nodeType":"VariableDeclaration","scope":8686,"src":"28630:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8662,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:27"},"returnParameters":{"id":8667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8666,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:27","nodeType":"VariableDeclaration","scope":8686,"src":"28667:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8665,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:27"},"scope":8987,"src":"28613:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8711,"nodeType":"Block","src":"29223:148:27","statements":[{"expression":{"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8692,"src":"29233:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"29252:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8695,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:27","typeDescriptions":{}}},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8700,"nodeType":"ExpressionStatement","src":"29233:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8692,"src":"29272:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"29286:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8710,"nodeType":"IfStatement","src":"29268:97:27","trueBody":{"id":8709,"nodeType":"Block","src":"29293:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"29348:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"29314:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8708,"nodeType":"RevertStatement","src":"29307:47:27"}]}}]},"documentation":{"id":8687,"nodeType":"StructuredDocumentation","src":"28839:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:27","nodeType":"FunctionDefinition","parameters":{"id":8690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8689,"mutability":"mutable","name":"value","nameLocation":"29175:5:27","nodeType":"VariableDeclaration","scope":8712,"src":"29168:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8688,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:27"},"returnParameters":{"id":8693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8692,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:27","nodeType":"VariableDeclaration","scope":8712,"src":"29205:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8691,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:27"},"scope":8987,"src":"29151:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8737,"nodeType":"Block","src":"29761:148:27","statements":[{"expression":{"id":8725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"29771:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8715,"src":"29790:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8721,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:27","typeDescriptions":{}}},"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8726,"nodeType":"ExpressionStatement","src":"29771:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"29810:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8715,"src":"29824:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8736,"nodeType":"IfStatement","src":"29806:97:27","trueBody":{"id":8735,"nodeType":"Block","src":"29831:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8715,"src":"29886:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"29852:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8734,"nodeType":"RevertStatement","src":"29845:47:27"}]}}]},"documentation":{"id":8713,"nodeType":"StructuredDocumentation","src":"29377:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:27","nodeType":"FunctionDefinition","parameters":{"id":8716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8715,"mutability":"mutable","name":"value","nameLocation":"29713:5:27","nodeType":"VariableDeclaration","scope":8738,"src":"29706:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8714,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:27"},"returnParameters":{"id":8719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8718,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:27","nodeType":"VariableDeclaration","scope":8738,"src":"29743:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8717,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:27"},"scope":8987,"src":"29689:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8763,"nodeType":"Block","src":"30299:148:27","statements":[{"expression":{"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"30309:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"30328:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8747,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:27","typeDescriptions":{}}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8752,"nodeType":"ExpressionStatement","src":"30309:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"30348:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"30362:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8762,"nodeType":"IfStatement","src":"30344:97:27","trueBody":{"id":8761,"nodeType":"Block","src":"30369:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"30424:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8756,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"30390:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8760,"nodeType":"RevertStatement","src":"30383:47:27"}]}}]},"documentation":{"id":8739,"nodeType":"StructuredDocumentation","src":"29915:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:27","nodeType":"FunctionDefinition","parameters":{"id":8742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8741,"mutability":"mutable","name":"value","nameLocation":"30251:5:27","nodeType":"VariableDeclaration","scope":8764,"src":"30244:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8740,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:27"},"returnParameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:27","nodeType":"VariableDeclaration","scope":8764,"src":"30281:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8743,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:27"},"scope":8987,"src":"30227:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8789,"nodeType":"Block","src":"30837:148:27","statements":[{"expression":{"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"30847:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"30866:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8773,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:27","typeDescriptions":{}}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8778,"nodeType":"ExpressionStatement","src":"30847:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"30886:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"30900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8788,"nodeType":"IfStatement","src":"30882:97:27","trueBody":{"id":8787,"nodeType":"Block","src":"30907:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"30962:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8782,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"30928:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8786,"nodeType":"RevertStatement","src":"30921:47:27"}]}}]},"documentation":{"id":8765,"nodeType":"StructuredDocumentation","src":"30453:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:27","nodeType":"FunctionDefinition","parameters":{"id":8768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8767,"mutability":"mutable","name":"value","nameLocation":"30789:5:27","nodeType":"VariableDeclaration","scope":8790,"src":"30782:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8766,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:27"},"returnParameters":{"id":8771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8770,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:27","nodeType":"VariableDeclaration","scope":8790,"src":"30819:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8769,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:27"},"scope":8987,"src":"30765:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8815,"nodeType":"Block","src":"31375:148:27","statements":[{"expression":{"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"31385:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"31404:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8799,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:27","typeDescriptions":{}}},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8804,"nodeType":"ExpressionStatement","src":"31385:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"31424:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"31438:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8814,"nodeType":"IfStatement","src":"31420:97:27","trueBody":{"id":8813,"nodeType":"Block","src":"31445:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"31500:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8808,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"31466:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8812,"nodeType":"RevertStatement","src":"31459:47:27"}]}}]},"documentation":{"id":8791,"nodeType":"StructuredDocumentation","src":"30991:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8816,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:27","nodeType":"FunctionDefinition","parameters":{"id":8794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8793,"mutability":"mutable","name":"value","nameLocation":"31327:5:27","nodeType":"VariableDeclaration","scope":8816,"src":"31320:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8792,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:27"},"returnParameters":{"id":8797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8796,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:27","nodeType":"VariableDeclaration","scope":8816,"src":"31357:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8795,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:27"},"scope":8987,"src":"31303:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8841,"nodeType":"Block","src":"31913:148:27","statements":[{"expression":{"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"31923:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"31942:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8825,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:27","typeDescriptions":{}}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8830,"nodeType":"ExpressionStatement","src":"31923:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"31962:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"31976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8840,"nodeType":"IfStatement","src":"31958:97:27","trueBody":{"id":8839,"nodeType":"Block","src":"31983:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"32038:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8834,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"32004:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8838,"nodeType":"RevertStatement","src":"31997:47:27"}]}}]},"documentation":{"id":8817,"nodeType":"StructuredDocumentation","src":"31529:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:27","nodeType":"FunctionDefinition","parameters":{"id":8820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8819,"mutability":"mutable","name":"value","nameLocation":"31865:5:27","nodeType":"VariableDeclaration","scope":8842,"src":"31858:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8818,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:27"},"returnParameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8822,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:27","nodeType":"VariableDeclaration","scope":8842,"src":"31895:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8821,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:27"},"scope":8987,"src":"31841:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8867,"nodeType":"Block","src":"32451:148:27","statements":[{"expression":{"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8848,"src":"32461:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8845,"src":"32480:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8851,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:27","typeDescriptions":{}}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8856,"nodeType":"ExpressionStatement","src":"32461:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8848,"src":"32500:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8845,"src":"32514:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8866,"nodeType":"IfStatement","src":"32496:97:27","trueBody":{"id":8865,"nodeType":"Block","src":"32521:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8845,"src":"32576:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8860,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"32542:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8864,"nodeType":"RevertStatement","src":"32535:47:27"}]}}]},"documentation":{"id":8843,"nodeType":"StructuredDocumentation","src":"32067:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8868,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:27","nodeType":"FunctionDefinition","parameters":{"id":8846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8845,"mutability":"mutable","name":"value","nameLocation":"32403:5:27","nodeType":"VariableDeclaration","scope":8868,"src":"32396:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8844,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:27"},"returnParameters":{"id":8849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8848,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:27","nodeType":"VariableDeclaration","scope":8868,"src":"32433:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8847,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:27"},"scope":8987,"src":"32379:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8893,"nodeType":"Block","src":"32989:148:27","statements":[{"expression":{"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"32999:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"33018:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8877,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:27","typeDescriptions":{}}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8882,"nodeType":"ExpressionStatement","src":"32999:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"33038:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"33052:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8892,"nodeType":"IfStatement","src":"33034:97:27","trueBody":{"id":8891,"nodeType":"Block","src":"33059:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"33114:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8886,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"33080:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8890,"nodeType":"RevertStatement","src":"33073:47:27"}]}}]},"documentation":{"id":8869,"nodeType":"StructuredDocumentation","src":"32605:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8894,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:27","nodeType":"FunctionDefinition","parameters":{"id":8872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8871,"mutability":"mutable","name":"value","nameLocation":"32941:5:27","nodeType":"VariableDeclaration","scope":8894,"src":"32934:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8870,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:27"},"returnParameters":{"id":8875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8874,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:27","nodeType":"VariableDeclaration","scope":8894,"src":"32971:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8873,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:27"},"scope":8987,"src":"32917:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8919,"nodeType":"Block","src":"33527:148:27","statements":[{"expression":{"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"33537:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"33556:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8903,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:27","typeDescriptions":{}}},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8908,"nodeType":"ExpressionStatement","src":"33537:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"33576:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"33590:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8918,"nodeType":"IfStatement","src":"33572:97:27","trueBody":{"id":8917,"nodeType":"Block","src":"33597:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"33652:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8912,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"33618:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8916,"nodeType":"RevertStatement","src":"33611:47:27"}]}}]},"documentation":{"id":8895,"nodeType":"StructuredDocumentation","src":"33143:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:27","nodeType":"FunctionDefinition","parameters":{"id":8898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8897,"mutability":"mutable","name":"value","nameLocation":"33479:5:27","nodeType":"VariableDeclaration","scope":8920,"src":"33472:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8896,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:27"},"returnParameters":{"id":8901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8900,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:27","nodeType":"VariableDeclaration","scope":8920,"src":"33509:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8899,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:27"},"scope":8987,"src":"33455:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8945,"nodeType":"Block","src":"34058:146:27","statements":[{"expression":{"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8926,"src":"34068:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"34086:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8929,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:27","typeDescriptions":{}}},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8934,"nodeType":"ExpressionStatement","src":"34068:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8926,"src":"34106:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"34120:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8944,"nodeType":"IfStatement","src":"34102:96:27","trueBody":{"id":8943,"nodeType":"Block","src":"34127:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"34181:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8938,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"34148:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8942,"nodeType":"RevertStatement","src":"34141:46:27"}]}}]},"documentation":{"id":8921,"nodeType":"StructuredDocumentation","src":"33681:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8946,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:27","nodeType":"FunctionDefinition","parameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8923,"mutability":"mutable","name":"value","nameLocation":"34011:5:27","nodeType":"VariableDeclaration","scope":8946,"src":"34004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8922,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:27"},"returnParameters":{"id":8927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8926,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:27","nodeType":"VariableDeclaration","scope":8946,"src":"34041:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8925,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:27"},"scope":8987,"src":"33988:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8975,"nodeType":"Block","src":"34444:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"34557:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8958,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8957,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:27","memberName":"max","nodeType":"MemberAccess","src":"34573:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8955,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:27","typeDescriptions":{}}},"id":8962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8969,"nodeType":"IfStatement","src":"34553:105:27","trueBody":{"id":8968,"nodeType":"Block","src":"34592:66:27","statements":[{"errorCall":{"arguments":[{"id":8965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"34641:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8964,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"34613:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8967,"nodeType":"RevertStatement","src":"34606:41:27"}]}},{"expression":{"arguments":[{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"34681:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8970,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:27","typeDescriptions":{}}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8953,"id":8974,"nodeType":"Return","src":"34667:20:27"}]},"documentation":{"id":8947,"nodeType":"StructuredDocumentation","src":"34210:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:27","nodeType":"FunctionDefinition","parameters":{"id":8950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8949,"mutability":"mutable","name":"value","nameLocation":"34406:5:27","nodeType":"VariableDeclaration","scope":8976,"src":"34398:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8948,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:27"},"returnParameters":{"id":8953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8976,"src":"34436:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8951,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:27"},"scope":8987,"src":"34380:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8985,"nodeType":"Block","src":"34853:87:27","statements":[{"AST":{"nativeSrc":"34888:46:27","nodeType":"YulBlock","src":"34888:46:27","statements":[{"nativeSrc":"34902:22:27","nodeType":"YulAssignment","src":"34902:22:27","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:27","nodeType":"YulIdentifier","src":"34921:1:27"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:27","nodeType":"YulIdentifier","src":"34914:6:27"},"nativeSrc":"34914:9:27","nodeType":"YulFunctionCall","src":"34914:9:27"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:27","nodeType":"YulIdentifier","src":"34907:6:27"},"nativeSrc":"34907:17:27","nodeType":"YulFunctionCall","src":"34907:17:27"},"variableNames":[{"name":"u","nativeSrc":"34902:1:27","nodeType":"YulIdentifier","src":"34902:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8979,"isOffset":false,"isSlot":false,"src":"34921:1:27","valueSize":1},{"declaration":8982,"isOffset":false,"isSlot":false,"src":"34902:1:27","valueSize":1}],"flags":["memory-safe"],"id":8984,"nodeType":"InlineAssembly","src":"34863:71:27"}]},"documentation":{"id":8977,"nodeType":"StructuredDocumentation","src":"34700:90:27","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8986,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:27","nodeType":"FunctionDefinition","parameters":{"id":8980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8979,"mutability":"mutable","name":"b","nameLocation":"34816:1:27","nodeType":"VariableDeclaration","scope":8986,"src":"34811:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8978,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:27"},"returnParameters":{"id":8983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8982,"mutability":"mutable","name":"u","nameLocation":"34850:1:27","nodeType":"VariableDeclaration","scope":8986,"src":"34842:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8981,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:27"},"scope":8987,"src":"34795:145:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8988,"src":"769:34173:27","usedErrors":[7232,7237,7244,7249],"usedEvents":[]}],"src":"192:34751:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8987],"SignedMath":[9131]},"id":9132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8989,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9132,"sourceUnit":8988,"src":"135:40:28","symbolAliases":[{"foreign":{"id":8990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"143:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8992,"nodeType":"StructuredDocumentation","src":"177:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9131,"linearizedBaseContracts":[9131],"name":"SignedMath","nameLocation":"266:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":9021,"nodeType":"Block","src":"746:215:28","statements":[{"id":9020,"nodeType":"UncheckedBlock","src":"756:199:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"894:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"900:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"904:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9013,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8995,"src":"932:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9011,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"916:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8987_$","typeString":"type(library SafeCast)"}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8986,"src":"916:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9009,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:28","typeDescriptions":{}}},"id":9015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9003,"id":9019,"nodeType":"Return","src":"887:57:28"}]}]},"documentation":{"id":8993,"nodeType":"StructuredDocumentation","src":"283:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9022,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:28","nodeType":"FunctionDefinition","parameters":{"id":9000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8995,"mutability":"mutable","name":"condition","nameLocation":"684:9:28","nodeType":"VariableDeclaration","scope":9022,"src":"679:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8994,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8997,"mutability":"mutable","name":"a","nameLocation":"702:1:28","nodeType":"VariableDeclaration","scope":9022,"src":"695:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8996,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8999,"mutability":"mutable","name":"b","nameLocation":"712:1:28","nodeType":"VariableDeclaration","scope":9022,"src":"705:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8998,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:28"},"returnParameters":{"id":9003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9022,"src":"738:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9001,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:28"},"scope":9131,"src":"662:299:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9040,"nodeType":"Block","src":"1102:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"1127:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"1131:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"1134:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"1137:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9032,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"1119:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9031,"id":9039,"nodeType":"Return","src":"1112:27:28"}]},"documentation":{"id":9023,"nodeType":"StructuredDocumentation","src":"967:66:28","text":" @dev Returns the largest of two signed numbers."},"id":9041,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:28","nodeType":"FunctionDefinition","parameters":{"id":9028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"a","nameLocation":"1058:1:28","nodeType":"VariableDeclaration","scope":9041,"src":"1051:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9024,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9027,"mutability":"mutable","name":"b","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":9041,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9026,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:28"},"returnParameters":{"id":9031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9041,"src":"1094:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9029,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:28"},"scope":9131,"src":"1038:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9059,"nodeType":"Block","src":"1288:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"1313:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"1317:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"1320:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"1323:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9051,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"1305:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9050,"id":9058,"nodeType":"Return","src":"1298:27:28"}]},"documentation":{"id":9042,"nodeType":"StructuredDocumentation","src":"1152:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":9060,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:28","nodeType":"FunctionDefinition","parameters":{"id":9047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9044,"mutability":"mutable","name":"a","nameLocation":"1244:1:28","nodeType":"VariableDeclaration","scope":9060,"src":"1237:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9043,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9046,"mutability":"mutable","name":"b","nameLocation":"1254:1:28","nodeType":"VariableDeclaration","scope":9060,"src":"1247:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9045,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:28"},"returnParameters":{"id":9050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9060,"src":"1280:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9048,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:28"},"scope":9131,"src":"1224:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9103,"nodeType":"Block","src":"1537:162:28","statements":[{"assignments":[9071],"declarations":[{"constant":false,"id":9071,"mutability":"mutable","name":"x","nameLocation":"1606:1:28","nodeType":"VariableDeclaration","scope":9103,"src":"1599:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9070,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9084,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1611:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9073,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1615:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1622:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9077,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1626:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9085,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"1651:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9090,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"1671:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:28","typeDescriptions":{}}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9086,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:28","typeDescriptions":{}}},"id":9094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1685:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1689:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9069,"id":9102,"nodeType":"Return","src":"1644:48:28"}]},"documentation":{"id":9061,"nodeType":"StructuredDocumentation","src":"1338:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9104,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:28","nodeType":"FunctionDefinition","parameters":{"id":9066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9063,"mutability":"mutable","name":"a","nameLocation":"1493:1:28","nodeType":"VariableDeclaration","scope":9104,"src":"1486:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9062,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9065,"mutability":"mutable","name":"b","nameLocation":"1503:1:28","nodeType":"VariableDeclaration","scope":9104,"src":"1496:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9064,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:28"},"returnParameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9104,"src":"1529:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9067,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:28"},"scope":9131,"src":"1469:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9129,"nodeType":"Block","src":"1843:767:28","statements":[{"id":9128,"nodeType":"UncheckedBlock","src":"1853:751:28","statements":[{"assignments":[9113],"declarations":[{"constant":false,"id":9113,"mutability":"mutable","name":"mask","nameLocation":"2424:4:28","nodeType":"VariableDeclaration","scope":9128,"src":"2417:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9112,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9117,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9114,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"2431:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9120,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"2576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9121,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"2580:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9124,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"2588:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:28","typeDescriptions":{}}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9111,"id":9127,"nodeType":"Return","src":"2560:33:28"}]}]},"documentation":{"id":9105,"nodeType":"StructuredDocumentation","src":"1705:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9130,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:28","nodeType":"FunctionDefinition","parameters":{"id":9108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9107,"mutability":"mutable","name":"n","nameLocation":"1808:1:28","nodeType":"VariableDeclaration","scope":9130,"src":"1801:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9106,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:28"},"returnParameters":{"id":9111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9130,"src":"1834:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:28"},"scope":9131,"src":"1788:822:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9132,"src":"258:2354:28","usedErrors":[],"usedEvents":[]}],"src":"109:2504:28"},"id":28},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"Arrays":[3385],"EnumerableSet":[9828]},"id":9829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9133,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../Arrays.sol","id":9135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9829,"sourceUnit":3386,"src":"231:37:29","symbolAliases":[{"foreign":{"id":9134,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"239:6:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":9136,"nodeType":"StructuredDocumentation","src":"270:1154:29","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n - Set can be cleared (all elements removed) in O(n).\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":9828,"linearizedBaseContracts":[9828],"name":"EnumerableSet","nameLocation":"1433:13:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":9144,"members":[{"constant":false,"id":9139,"mutability":"mutable","name":"_values","nameLocation":"1957:7:29","nodeType":"VariableDeclaration","scope":9144,"src":"1947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9138,"nodeType":"ArrayTypeName","src":"1947:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9143,"mutability":"mutable","name":"_positions","nameLocation":"2149:10:29","nodeType":"VariableDeclaration","scope":9144,"src":"2115:44:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":9142,"keyName":"value","keyNameLocation":"2131:5:29","keyType":{"id":9140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2123:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2115:33:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1900:3:29","nodeType":"StructDefinition","scope":9828,"src":"1893:273:29","visibility":"public"},{"body":{"id":9185,"nodeType":"Block","src":"2405:337:29","statements":[{"condition":{"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2419:22:29","subExpression":{"arguments":[{"id":9156,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"2430:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":9157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9150,"src":"2435:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9155,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9332,"src":"2420:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9183,"nodeType":"Block","src":"2699:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":9181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2720:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9154,"id":9182,"nodeType":"Return","src":"2713:12:29"}]},"id":9184,"nodeType":"IfStatement","src":"2415:321:29","trueBody":{"id":9180,"nodeType":"Block","src":"2443:250:29","statements":[{"expression":{"arguments":[{"id":9165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9150,"src":"2474:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":9160,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"2457:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2461:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"2457:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:4:29","memberName":"push","nodeType":"MemberAccess","src":"2457:16:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9167,"nodeType":"ExpressionStatement","src":"2457:23:29"},{"expression":{"id":9176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"2615:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"2615:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9172,"indexExpression":{"id":9170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9150,"src":"2630:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2615:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":9173,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"2639:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"2639:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:29","memberName":"length","nodeType":"MemberAccess","src":"2639:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9177,"nodeType":"ExpressionStatement","src":"2615:42:29"},{"expression":{"hexValue":"74727565","id":9178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2678:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9154,"id":9179,"nodeType":"Return","src":"2671:11:29"}]}}]},"documentation":{"id":9145,"nodeType":"StructuredDocumentation","src":"2172:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9186,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2345:4:29","nodeType":"FunctionDefinition","parameters":{"id":9151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"set","nameLocation":"2362:3:29","nodeType":"VariableDeclaration","scope":9186,"src":"2350:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9147,"nodeType":"UserDefinedTypeName","pathNode":{"id":9146,"name":"Set","nameLocations":["2350:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"2350:3:29"},"referencedDeclaration":9144,"src":"2350:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9150,"mutability":"mutable","name":"value","nameLocation":"2375:5:29","nodeType":"VariableDeclaration","scope":9186,"src":"2367:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:32:29"},"returnParameters":{"id":9154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9186,"src":"2399:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9152,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:29"},"scope":9828,"src":"2336:406:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9269,"nodeType":"Block","src":"2982:1296:29","statements":[{"assignments":[9198],"declarations":[{"constant":false,"id":9198,"mutability":"mutable","name":"position","nameLocation":"3094:8:29","nodeType":"VariableDeclaration","scope":9269,"src":"3086:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9203,"initialValue":{"baseExpression":{"expression":{"id":9199,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"3105:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"3105:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9202,"indexExpression":{"id":9201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9192,"src":"3120:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3105:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9204,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"3141:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3141:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9267,"nodeType":"Block","src":"4235:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":9265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4256:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9196,"id":9266,"nodeType":"Return","src":"4249:12:29"}]},"id":9268,"nodeType":"IfStatement","src":"3137:1135:29","trueBody":{"id":9264,"nodeType":"Block","src":"3156:1073:29","statements":[{"assignments":[9208],"declarations":[{"constant":false,"id":9208,"mutability":"mutable","name":"valueIndex","nameLocation":"3516:10:29","nodeType":"VariableDeclaration","scope":9264,"src":"3508:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9209,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"3529:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3529:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:33:29"},{"assignments":[9214],"declarations":[{"constant":false,"id":9214,"mutability":"mutable","name":"lastIndex","nameLocation":"3563:9:29","nodeType":"VariableDeclaration","scope":9264,"src":"3555:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9215,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"3575:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3579:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"3575:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:29","memberName":"length","nodeType":"MemberAccess","src":"3575:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3575:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3555:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9221,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9208,"src":"3616:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9222,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"3630:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3616:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9248,"nodeType":"IfStatement","src":"3612:378:29","trueBody":{"id":9247,"nodeType":"Block","src":"3641:349:29","statements":[{"assignments":[9225],"declarations":[{"constant":false,"id":9225,"mutability":"mutable","name":"lastValue","nameLocation":"3667:9:29","nodeType":"VariableDeclaration","scope":9247,"src":"3659:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3659:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9230,"initialValue":{"baseExpression":{"expression":{"id":9226,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"3679:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"3679:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9229,"indexExpression":{"id":9228,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"3691:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3659:42:29"},{"expression":{"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9231,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"3800:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3804:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"3800:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9235,"indexExpression":{"id":9233,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9208,"src":"3812:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3800:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9236,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"3826:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3800:35:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9238,"nodeType":"ExpressionStatement","src":"3800:35:29"},{"expression":{"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9239,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"3939:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3943:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"3939:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9243,"indexExpression":{"id":9241,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"3954:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3939:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9244,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"3967:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9246,"nodeType":"ExpressionStatement","src":"3939:36:29"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9249,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"4068:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"4068:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:3:29","memberName":"pop","nodeType":"MemberAccess","src":"4068:15:29","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9255,"nodeType":"ExpressionStatement","src":"4068:17:29"},{"expression":{"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4164:28:29","subExpression":{"baseExpression":{"expression":{"id":9256,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"4171:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"4171:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9259,"indexExpression":{"id":9258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9192,"src":"4186:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4171:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9261,"nodeType":"ExpressionStatement","src":"4164:28:29"},{"expression":{"hexValue":"74727565","id":9262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4214:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9196,"id":9263,"nodeType":"Return","src":"4207:11:29"}]}}]},"documentation":{"id":9187,"nodeType":"StructuredDocumentation","src":"2748:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9270,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2919:7:29","nodeType":"FunctionDefinition","parameters":{"id":9193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9190,"mutability":"mutable","name":"set","nameLocation":"2939:3:29","nodeType":"VariableDeclaration","scope":9270,"src":"2927:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9189,"nodeType":"UserDefinedTypeName","pathNode":{"id":9188,"name":"Set","nameLocations":["2927:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"2927:3:29"},"referencedDeclaration":9144,"src":"2927:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9192,"mutability":"mutable","name":"value","nameLocation":"2952:5:29","nodeType":"VariableDeclaration","scope":9270,"src":"2944:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2944:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:32:29"},"returnParameters":{"id":9196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9270,"src":"2976:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9194,"name":"bool","nodeType":"ElementaryTypeName","src":"2976:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2975:6:29"},"scope":9828,"src":"2910:1368:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9312,"nodeType":"Block","src":"4633:196:29","statements":[{"assignments":[9278],"declarations":[{"constant":false,"id":9278,"mutability":"mutable","name":"len","nameLocation":"4651:3:29","nodeType":"VariableDeclaration","scope":9312,"src":"4643:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9277,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9282,"initialValue":{"arguments":[{"id":9280,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"4665:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}],"id":9279,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"4657:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:26:29"},{"body":{"id":9302,"nodeType":"Block","src":"4713:62:29","statements":[{"expression":{"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4727:37:29","subExpression":{"baseExpression":{"expression":{"id":9293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"4734:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"4734:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9299,"indexExpression":{"baseExpression":{"expression":{"id":9295,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"4749:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4753:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"4749:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9298,"indexExpression":{"id":9297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9284,"src":"4761:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:14:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4734:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9301,"nodeType":"ExpressionStatement","src":"4727:37:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9284,"src":"4699:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9288,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"4703:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9303,"initializationExpression":{"assignments":[9284],"declarations":[{"constant":false,"id":9284,"mutability":"mutable","name":"i","nameLocation":"4692:1:29","nodeType":"VariableDeclaration","scope":9303,"src":"4684:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9286,"initialValue":{"hexValue":"30","id":9285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4708:3:29","subExpression":{"id":9290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9284,"src":"4710:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9292,"nodeType":"ExpressionStatement","src":"4708:3:29"},"nodeType":"ForStatement","src":"4679:96:29"},{"expression":{"arguments":[{"expression":{"id":9307,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"4807:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4811:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"4807:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},{"hexValue":"30","id":9309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4820:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":9304,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"4784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$3385_$","typeString":"type(library Arrays)"}},"id":9306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:15:29","memberName":"unsafeSetLength","nodeType":"MemberAccess","referencedDeclaration":3373,"src":"4784:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] storage pointer,uint256)"}},"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9311,"nodeType":"ExpressionStatement","src":"4784:38:29"}]},"documentation":{"id":9271,"nodeType":"StructuredDocumentation","src":"4284:303:29","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9313,"implemented":true,"kind":"function","modifiers":[],"name":"_clear","nameLocation":"4601:6:29","nodeType":"FunctionDefinition","parameters":{"id":9275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9274,"mutability":"mutable","name":"set","nameLocation":"4620:3:29","nodeType":"VariableDeclaration","scope":9313,"src":"4608:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9273,"nodeType":"UserDefinedTypeName","pathNode":{"id":9272,"name":"Set","nameLocations":["4608:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"4608:3:29"},"referencedDeclaration":9144,"src":"4608:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4607:17:29"},"returnParameters":{"id":9276,"nodeType":"ParameterList","parameters":[],"src":"4633:0:29"},"scope":9828,"src":"4592:237:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9331,"nodeType":"Block","src":"4989:50:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":9324,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9317,"src":"5006:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5010:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"5006:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9327,"indexExpression":{"id":9326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9319,"src":"5021:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5031:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5006:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9323,"id":9330,"nodeType":"Return","src":"4999:33:29"}]},"documentation":{"id":9314,"nodeType":"StructuredDocumentation","src":"4835:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":9332,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4919:9:29","nodeType":"FunctionDefinition","parameters":{"id":9320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9317,"mutability":"mutable","name":"set","nameLocation":"4941:3:29","nodeType":"VariableDeclaration","scope":9332,"src":"4929:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9316,"nodeType":"UserDefinedTypeName","pathNode":{"id":9315,"name":"Set","nameLocations":["4929:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"4929:3:29"},"referencedDeclaration":9144,"src":"4929:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9319,"mutability":"mutable","name":"value","nameLocation":"4954:5:29","nodeType":"VariableDeclaration","scope":9332,"src":"4946:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4946:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:32:29"},"returnParameters":{"id":9323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9332,"src":"4983:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9321,"name":"bool","nodeType":"ElementaryTypeName","src":"4983:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4982:6:29"},"scope":9828,"src":"4910:129:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9345,"nodeType":"Block","src":"5185:42:29","statements":[{"expression":{"expression":{"expression":{"id":9341,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9336,"src":"5202:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"5202:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:29","memberName":"length","nodeType":"MemberAccess","src":"5202:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9340,"id":9344,"nodeType":"Return","src":"5195:25:29"}]},"documentation":{"id":9333,"nodeType":"StructuredDocumentation","src":"5045:70:29","text":" @dev Returns the number of values on the set. O(1)."},"id":9346,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"5129:7:29","nodeType":"FunctionDefinition","parameters":{"id":9337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9336,"mutability":"mutable","name":"set","nameLocation":"5149:3:29","nodeType":"VariableDeclaration","scope":9346,"src":"5137:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9335,"nodeType":"UserDefinedTypeName","pathNode":{"id":9334,"name":"Set","nameLocations":["5137:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"5137:3:29"},"referencedDeclaration":9144,"src":"5137:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5136:17:29"},"returnParameters":{"id":9340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9346,"src":"5176:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9338,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:9:29"},"scope":9828,"src":"5120:107:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9362,"nodeType":"Block","src":"5645:42:29","statements":[{"expression":{"baseExpression":{"expression":{"id":9357,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9350,"src":"5662:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"5662:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9360,"indexExpression":{"id":9359,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9352,"src":"5674:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9356,"id":9361,"nodeType":"Return","src":"5655:25:29"}]},"documentation":{"id":9347,"nodeType":"StructuredDocumentation","src":"5233:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9363,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"5578:3:29","nodeType":"FunctionDefinition","parameters":{"id":9353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9350,"mutability":"mutable","name":"set","nameLocation":"5594:3:29","nodeType":"VariableDeclaration","scope":9363,"src":"5582:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9349,"nodeType":"UserDefinedTypeName","pathNode":{"id":9348,"name":"Set","nameLocations":["5582:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"5582:3:29"},"referencedDeclaration":9144,"src":"5582:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9352,"mutability":"mutable","name":"index","nameLocation":"5607:5:29","nodeType":"VariableDeclaration","scope":9363,"src":"5599:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:32:29"},"returnParameters":{"id":9356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9363,"src":"5636:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5636:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5635:9:29"},"scope":9828,"src":"5569:118:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9376,"nodeType":"Block","src":"6301:35:29","statements":[{"expression":{"expression":{"id":9373,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"6318:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6322:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9139,"src":"6318:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":9372,"id":9375,"nodeType":"Return","src":"6311:18:29"}]},"documentation":{"id":9364,"nodeType":"StructuredDocumentation","src":"5693:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9377,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"6236:7:29","nodeType":"FunctionDefinition","parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"set","nameLocation":"6256:3:29","nodeType":"VariableDeclaration","scope":9377,"src":"6244:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9366,"nodeType":"UserDefinedTypeName","pathNode":{"id":9365,"name":"Set","nameLocations":["6244:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"6244:3:29"},"referencedDeclaration":9144,"src":"6244:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"6243:17:29"},"returnParameters":{"id":9372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9377,"src":"6283:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6283:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9370,"nodeType":"ArrayTypeName","src":"6283:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6282:18:29"},"scope":9828,"src":"6227:109:29","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":9381,"members":[{"constant":false,"id":9380,"mutability":"mutable","name":"_inner","nameLocation":"6393:6:29","nodeType":"VariableDeclaration","scope":9381,"src":"6389:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9379,"nodeType":"UserDefinedTypeName","pathNode":{"id":9378,"name":"Set","nameLocations":["6389:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"6389:3:29"},"referencedDeclaration":9144,"src":"6389:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"6368:10:29","nodeType":"StructDefinition","scope":9828,"src":"6361:45:29","visibility":"public"},{"body":{"id":9398,"nodeType":"Block","src":"6652:47:29","statements":[{"expression":{"arguments":[{"expression":{"id":9393,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9385,"src":"6674:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"6674:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9387,"src":"6686:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9392,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"6669:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9391,"id":9397,"nodeType":"Return","src":"6662:30:29"}]},"documentation":{"id":9382,"nodeType":"StructuredDocumentation","src":"6412:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9399,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6585:3:29","nodeType":"FunctionDefinition","parameters":{"id":9388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9385,"mutability":"mutable","name":"set","nameLocation":"6608:3:29","nodeType":"VariableDeclaration","scope":9399,"src":"6589:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9384,"nodeType":"UserDefinedTypeName","pathNode":{"id":9383,"name":"Bytes32Set","nameLocations":["6589:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"6589:10:29"},"referencedDeclaration":9381,"src":"6589:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9387,"mutability":"mutable","name":"value","nameLocation":"6621:5:29","nodeType":"VariableDeclaration","scope":9399,"src":"6613:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6588:39:29"},"returnParameters":{"id":9391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9399,"src":"6646:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9389,"name":"bool","nodeType":"ElementaryTypeName","src":"6646:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6645:6:29"},"scope":9828,"src":"6576:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9416,"nodeType":"Block","src":"6946:50:29","statements":[{"expression":{"arguments":[{"expression":{"id":9411,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"6971:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"6971:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9405,"src":"6983:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9410,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"6963:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9409,"id":9415,"nodeType":"Return","src":"6956:33:29"}]},"documentation":{"id":9400,"nodeType":"StructuredDocumentation","src":"6705:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9417,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6876:6:29","nodeType":"FunctionDefinition","parameters":{"id":9406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9403,"mutability":"mutable","name":"set","nameLocation":"6902:3:29","nodeType":"VariableDeclaration","scope":9417,"src":"6883:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9402,"nodeType":"UserDefinedTypeName","pathNode":{"id":9401,"name":"Bytes32Set","nameLocations":["6883:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"6883:10:29"},"referencedDeclaration":9381,"src":"6883:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9405,"mutability":"mutable","name":"value","nameLocation":"6915:5:29","nodeType":"VariableDeclaration","scope":9417,"src":"6907:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6907:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6882:39:29"},"returnParameters":{"id":9409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9417,"src":"6940:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9407,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:29"},"scope":9828,"src":"6867:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9429,"nodeType":"Block","src":"7358:35:29","statements":[{"expression":{"arguments":[{"expression":{"id":9425,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9421,"src":"7375:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7379:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"7375:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9424,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9313,"src":"7368:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":9427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9428,"nodeType":"ExpressionStatement","src":"7368:18:29"}]},"documentation":{"id":9418,"nodeType":"StructuredDocumentation","src":"7002:303:29","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9430,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"7319:5:29","nodeType":"FunctionDefinition","parameters":{"id":9422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9421,"mutability":"mutable","name":"set","nameLocation":"7344:3:29","nodeType":"VariableDeclaration","scope":9430,"src":"7325:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9420,"nodeType":"UserDefinedTypeName","pathNode":{"id":9419,"name":"Bytes32Set","nameLocations":["7325:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"7325:10:29"},"referencedDeclaration":9381,"src":"7325:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7324:24:29"},"returnParameters":{"id":9423,"nodeType":"ParameterList","parameters":[],"src":"7358:0:29"},"scope":9828,"src":"7310:83:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9447,"nodeType":"Block","src":"7560:52:29","statements":[{"expression":{"arguments":[{"expression":{"id":9442,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9434,"src":"7587:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7591:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"7587:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9436,"src":"7599:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9441,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9332,"src":"7577:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7577:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9440,"id":9446,"nodeType":"Return","src":"7570:35:29"}]},"documentation":{"id":9431,"nodeType":"StructuredDocumentation","src":"7399:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":9448,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7483:8:29","nodeType":"FunctionDefinition","parameters":{"id":9437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9434,"mutability":"mutable","name":"set","nameLocation":"7511:3:29","nodeType":"VariableDeclaration","scope":9448,"src":"7492:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9433,"nodeType":"UserDefinedTypeName","pathNode":{"id":9432,"name":"Bytes32Set","nameLocations":["7492:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"7492:10:29"},"referencedDeclaration":9381,"src":"7492:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9436,"mutability":"mutable","name":"value","nameLocation":"7524:5:29","nodeType":"VariableDeclaration","scope":9448,"src":"7516:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7516:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7491:39:29"},"returnParameters":{"id":9440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9448,"src":"7554:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9438,"name":"bool","nodeType":"ElementaryTypeName","src":"7554:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7553:6:29"},"scope":9828,"src":"7474:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9462,"nodeType":"Block","src":"7765:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":9458,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9452,"src":"7790:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"7790:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9457,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"7782:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7782:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9456,"id":9461,"nodeType":"Return","src":"7775:26:29"}]},"documentation":{"id":9449,"nodeType":"StructuredDocumentation","src":"7618:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":9463,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7702:6:29","nodeType":"FunctionDefinition","parameters":{"id":9453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9452,"mutability":"mutable","name":"set","nameLocation":"7728:3:29","nodeType":"VariableDeclaration","scope":9463,"src":"7709:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9451,"nodeType":"UserDefinedTypeName","pathNode":{"id":9450,"name":"Bytes32Set","nameLocations":["7709:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"7709:10:29"},"referencedDeclaration":9381,"src":"7709:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7708:24:29"},"returnParameters":{"id":9456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9463,"src":"7756:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9454,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:9:29"},"scope":9828,"src":"7693:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9480,"nodeType":"Block","src":"8233:46:29","statements":[{"expression":{"arguments":[{"expression":{"id":9475,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"8254:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8258:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"8254:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9477,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"8266:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9474,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"8250:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9473,"id":9479,"nodeType":"Return","src":"8243:29:29"}]},"documentation":{"id":9464,"nodeType":"StructuredDocumentation","src":"7814:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9481,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8159:2:29","nodeType":"FunctionDefinition","parameters":{"id":9470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9467,"mutability":"mutable","name":"set","nameLocation":"8181:3:29","nodeType":"VariableDeclaration","scope":9481,"src":"8162:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9466,"nodeType":"UserDefinedTypeName","pathNode":{"id":9465,"name":"Bytes32Set","nameLocations":["8162:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"8162:10:29"},"referencedDeclaration":9381,"src":"8162:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9469,"mutability":"mutable","name":"index","nameLocation":"8194:5:29","nodeType":"VariableDeclaration","scope":9481,"src":"8186:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8186:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:39:29"},"returnParameters":{"id":9473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9481,"src":"8224:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8224:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8223:9:29"},"scope":9828,"src":"8150:129:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9510,"nodeType":"Block","src":"8900:192:29","statements":[{"assignments":[9495],"declarations":[{"constant":false,"id":9495,"mutability":"mutable","name":"store","nameLocation":"8927:5:29","nodeType":"VariableDeclaration","scope":9510,"src":"8910:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8910:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9494,"nodeType":"ArrayTypeName","src":"8910:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9500,"initialValue":{"arguments":[{"expression":{"id":9497,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9485,"src":"8943:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9380,"src":"8943:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9496,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"8935:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8910:44:29"},{"assignments":[9505],"declarations":[{"constant":false,"id":9505,"mutability":"mutable","name":"result","nameLocation":"8981:6:29","nodeType":"VariableDeclaration","scope":9510,"src":"8964:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8964:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9504,"nodeType":"ArrayTypeName","src":"8964:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9506,"nodeType":"VariableDeclarationStatement","src":"8964:23:29"},{"AST":{"nativeSrc":"9023:39:29","nodeType":"YulBlock","src":"9023:39:29","statements":[{"nativeSrc":"9037:15:29","nodeType":"YulAssignment","src":"9037:15:29","value":{"name":"store","nativeSrc":"9047:5:29","nodeType":"YulIdentifier","src":"9047:5:29"},"variableNames":[{"name":"result","nativeSrc":"9037:6:29","nodeType":"YulIdentifier","src":"9037:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9505,"isOffset":false,"isSlot":false,"src":"9037:6:29","valueSize":1},{"declaration":9495,"isOffset":false,"isSlot":false,"src":"9047:5:29","valueSize":1}],"flags":["memory-safe"],"id":9507,"nodeType":"InlineAssembly","src":"8998:64:29"},{"expression":{"id":9508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"9079:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":9490,"id":9509,"nodeType":"Return","src":"9072:13:29"}]},"documentation":{"id":9482,"nodeType":"StructuredDocumentation","src":"8285:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9511,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"8828:6:29","nodeType":"FunctionDefinition","parameters":{"id":9486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9485,"mutability":"mutable","name":"set","nameLocation":"8854:3:29","nodeType":"VariableDeclaration","scope":9511,"src":"8835:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9484,"nodeType":"UserDefinedTypeName","pathNode":{"id":9483,"name":"Bytes32Set","nameLocations":["8835:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9381,"src":"8835:10:29"},"referencedDeclaration":9381,"src":"8835:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$9381_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8834:24:29"},"returnParameters":{"id":9490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9511,"src":"8882:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8882:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9488,"nodeType":"ArrayTypeName","src":"8882:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8881:18:29"},"scope":9828,"src":"8819:273:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":9515,"members":[{"constant":false,"id":9514,"mutability":"mutable","name":"_inner","nameLocation":"9149:6:29","nodeType":"VariableDeclaration","scope":9515,"src":"9145:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9513,"nodeType":"UserDefinedTypeName","pathNode":{"id":9512,"name":"Set","nameLocations":["9145:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"9145:3:29"},"referencedDeclaration":9144,"src":"9145:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"9124:10:29","nodeType":"StructDefinition","scope":9828,"src":"9117:45:29","visibility":"public"},{"body":{"id":9541,"nodeType":"Block","src":"9408:74:29","statements":[{"expression":{"arguments":[{"expression":{"id":9527,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"9430:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"9430:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9521,"src":"9466:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9533,"name":"uint160","nodeType":"ElementaryTypeName","src":"9458:7:29","typeDescriptions":{}}},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9450:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9531,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:29","typeDescriptions":{}}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9442:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9442:7:29","typeDescriptions":{}}},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9526,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"9425:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9425:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9525,"id":9540,"nodeType":"Return","src":"9418:57:29"}]},"documentation":{"id":9516,"nodeType":"StructuredDocumentation","src":"9168:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9542,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"9341:3:29","nodeType":"FunctionDefinition","parameters":{"id":9522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"set","nameLocation":"9364:3:29","nodeType":"VariableDeclaration","scope":9542,"src":"9345:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9518,"nodeType":"UserDefinedTypeName","pathNode":{"id":9517,"name":"AddressSet","nameLocations":["9345:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"9345:10:29"},"referencedDeclaration":9515,"src":"9345:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9521,"mutability":"mutable","name":"value","nameLocation":"9377:5:29","nodeType":"VariableDeclaration","scope":9542,"src":"9369:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9520,"name":"address","nodeType":"ElementaryTypeName","src":"9369:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9344:39:29"},"returnParameters":{"id":9525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9542,"src":"9402:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9523,"name":"bool","nodeType":"ElementaryTypeName","src":"9402:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9401:6:29"},"scope":9828,"src":"9332:150:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9568,"nodeType":"Block","src":"9729:77:29","statements":[{"expression":{"arguments":[{"expression":{"id":9554,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"9754:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"9754:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"9790:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9560,"name":"uint160","nodeType":"ElementaryTypeName","src":"9782:7:29","typeDescriptions":{}}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9782:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9774:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9558,"name":"uint256","nodeType":"ElementaryTypeName","src":"9774:7:29","typeDescriptions":{}}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9766:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9766:7:29","typeDescriptions":{}}},"id":9565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9766:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9553,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"9746:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9552,"id":9567,"nodeType":"Return","src":"9739:60:29"}]},"documentation":{"id":9543,"nodeType":"StructuredDocumentation","src":"9488:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9569,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9659:6:29","nodeType":"FunctionDefinition","parameters":{"id":9549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9546,"mutability":"mutable","name":"set","nameLocation":"9685:3:29","nodeType":"VariableDeclaration","scope":9569,"src":"9666:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9545,"nodeType":"UserDefinedTypeName","pathNode":{"id":9544,"name":"AddressSet","nameLocations":["9666:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"9666:10:29"},"referencedDeclaration":9515,"src":"9666:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9548,"mutability":"mutable","name":"value","nameLocation":"9698:5:29","nodeType":"VariableDeclaration","scope":9569,"src":"9690:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9547,"name":"address","nodeType":"ElementaryTypeName","src":"9690:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9665:39:29"},"returnParameters":{"id":9552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9569,"src":"9723:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9550,"name":"bool","nodeType":"ElementaryTypeName","src":"9723:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9722:6:29"},"scope":9828,"src":"9650:156:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9581,"nodeType":"Block","src":"10168:35:29","statements":[{"expression":{"arguments":[{"expression":{"id":9577,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9573,"src":"10185:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"10185:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9576,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9313,"src":"10178:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10178:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9580,"nodeType":"ExpressionStatement","src":"10178:18:29"}]},"documentation":{"id":9570,"nodeType":"StructuredDocumentation","src":"9812:303:29","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9582,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"10129:5:29","nodeType":"FunctionDefinition","parameters":{"id":9574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9573,"mutability":"mutable","name":"set","nameLocation":"10154:3:29","nodeType":"VariableDeclaration","scope":9582,"src":"10135:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9572,"nodeType":"UserDefinedTypeName","pathNode":{"id":9571,"name":"AddressSet","nameLocations":["10135:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"10135:10:29"},"referencedDeclaration":9515,"src":"10135:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10134:24:29"},"returnParameters":{"id":9575,"nodeType":"ParameterList","parameters":[],"src":"10168:0:29"},"scope":9828,"src":"10120:83:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9608,"nodeType":"Block","src":"10370:79:29","statements":[{"expression":{"arguments":[{"expression":{"id":9594,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"10397:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"10397:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"10433:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9600,"name":"uint160","nodeType":"ElementaryTypeName","src":"10425:7:29","typeDescriptions":{}}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10417:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9598,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:29","typeDescriptions":{}}},"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10417:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10409:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10409:7:29","typeDescriptions":{}}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10409:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9593,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9332,"src":"10387:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9592,"id":9607,"nodeType":"Return","src":"10380:62:29"}]},"documentation":{"id":9583,"nodeType":"StructuredDocumentation","src":"10209:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":9609,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10293:8:29","nodeType":"FunctionDefinition","parameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9586,"mutability":"mutable","name":"set","nameLocation":"10321:3:29","nodeType":"VariableDeclaration","scope":9609,"src":"10302:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9585,"nodeType":"UserDefinedTypeName","pathNode":{"id":9584,"name":"AddressSet","nameLocations":["10302:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"10302:10:29"},"referencedDeclaration":9515,"src":"10302:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9588,"mutability":"mutable","name":"value","nameLocation":"10334:5:29","nodeType":"VariableDeclaration","scope":9609,"src":"10326:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9587,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10301:39:29"},"returnParameters":{"id":9592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9609,"src":"10364:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9590,"name":"bool","nodeType":"ElementaryTypeName","src":"10364:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10363:6:29"},"scope":9828,"src":"10284:165:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9623,"nodeType":"Block","src":"10602:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":9619,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"10627:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10631:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"10627:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9618,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"10619:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9617,"id":9622,"nodeType":"Return","src":"10612:26:29"}]},"documentation":{"id":9610,"nodeType":"StructuredDocumentation","src":"10455:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":9624,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10539:6:29","nodeType":"FunctionDefinition","parameters":{"id":9614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9613,"mutability":"mutable","name":"set","nameLocation":"10565:3:29","nodeType":"VariableDeclaration","scope":9624,"src":"10546:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9612,"nodeType":"UserDefinedTypeName","pathNode":{"id":9611,"name":"AddressSet","nameLocations":["10546:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"10546:10:29"},"referencedDeclaration":9515,"src":"10546:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10545:24:29"},"returnParameters":{"id":9617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9624,"src":"10593:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9615,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:9:29"},"scope":9828,"src":"10530:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9650,"nodeType":"Block","src":"11070:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9642,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9628,"src":"11115:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"11115:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9644,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"11127:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9641,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"11111:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11111:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11103:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:29","typeDescriptions":{}}},"id":9646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9637,"name":"uint160","nodeType":"ElementaryTypeName","src":"11095:7:29","typeDescriptions":{}}},"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11087:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9635,"name":"address","nodeType":"ElementaryTypeName","src":"11087:7:29","typeDescriptions":{}}},"id":9648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9634,"id":9649,"nodeType":"Return","src":"11080:56:29"}]},"documentation":{"id":9625,"nodeType":"StructuredDocumentation","src":"10651:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9651,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10996:2:29","nodeType":"FunctionDefinition","parameters":{"id":9631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9628,"mutability":"mutable","name":"set","nameLocation":"11018:3:29","nodeType":"VariableDeclaration","scope":9651,"src":"10999:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9627,"nodeType":"UserDefinedTypeName","pathNode":{"id":9626,"name":"AddressSet","nameLocations":["10999:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"10999:10:29"},"referencedDeclaration":9515,"src":"10999:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9630,"mutability":"mutable","name":"index","nameLocation":"11031:5:29","nodeType":"VariableDeclaration","scope":9651,"src":"11023:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9629,"name":"uint256","nodeType":"ElementaryTypeName","src":"11023:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:39:29"},"returnParameters":{"id":9634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9651,"src":"11061:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9632,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11060:9:29"},"scope":9828,"src":"10987:156:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9680,"nodeType":"Block","src":"11764:192:29","statements":[{"assignments":[9665],"declarations":[{"constant":false,"id":9665,"mutability":"mutable","name":"store","nameLocation":"11791:5:29","nodeType":"VariableDeclaration","scope":9680,"src":"11774:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11774:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9664,"nodeType":"ArrayTypeName","src":"11774:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9670,"initialValue":{"arguments":[{"expression":{"id":9667,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9655,"src":"11807:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9514,"src":"11807:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9666,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"11799:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11774:44:29"},{"assignments":[9675],"declarations":[{"constant":false,"id":9675,"mutability":"mutable","name":"result","nameLocation":"11845:6:29","nodeType":"VariableDeclaration","scope":9680,"src":"11828:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9673,"name":"address","nodeType":"ElementaryTypeName","src":"11828:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9674,"nodeType":"ArrayTypeName","src":"11828:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":9676,"nodeType":"VariableDeclarationStatement","src":"11828:23:29"},{"AST":{"nativeSrc":"11887:39:29","nodeType":"YulBlock","src":"11887:39:29","statements":[{"nativeSrc":"11901:15:29","nodeType":"YulAssignment","src":"11901:15:29","value":{"name":"store","nativeSrc":"11911:5:29","nodeType":"YulIdentifier","src":"11911:5:29"},"variableNames":[{"name":"result","nativeSrc":"11901:6:29","nodeType":"YulIdentifier","src":"11901:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9675,"isOffset":false,"isSlot":false,"src":"11901:6:29","valueSize":1},{"declaration":9665,"isOffset":false,"isSlot":false,"src":"11911:5:29","valueSize":1}],"flags":["memory-safe"],"id":9677,"nodeType":"InlineAssembly","src":"11862:64:29"},{"expression":{"id":9678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"11943:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":9660,"id":9679,"nodeType":"Return","src":"11936:13:29"}]},"documentation":{"id":9652,"nodeType":"StructuredDocumentation","src":"11149:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9681,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11692:6:29","nodeType":"FunctionDefinition","parameters":{"id":9656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9655,"mutability":"mutable","name":"set","nameLocation":"11718:3:29","nodeType":"VariableDeclaration","scope":9681,"src":"11699:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9654,"nodeType":"UserDefinedTypeName","pathNode":{"id":9653,"name":"AddressSet","nameLocations":["11699:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9515,"src":"11699:10:29"},"referencedDeclaration":9515,"src":"11699:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9515_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"11698:24:29"},"returnParameters":{"id":9660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9681,"src":"11746:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9657,"name":"address","nodeType":"ElementaryTypeName","src":"11746:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9658,"nodeType":"ArrayTypeName","src":"11746:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11745:18:29"},"scope":9828,"src":"11683:273:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":9685,"members":[{"constant":false,"id":9684,"mutability":"mutable","name":"_inner","nameLocation":"12007:6:29","nodeType":"VariableDeclaration","scope":9685,"src":"12003:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9683,"nodeType":"UserDefinedTypeName","pathNode":{"id":9682,"name":"Set","nameLocations":["12003:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":9144,"src":"12003:3:29"},"referencedDeclaration":9144,"src":"12003:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"11985:7:29","nodeType":"StructDefinition","scope":9828,"src":"11978:42:29","visibility":"public"},{"body":{"id":9705,"nodeType":"Block","src":"12263:56:29","statements":[{"expression":{"arguments":[{"expression":{"id":9697,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9689,"src":"12285:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12289:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"12285:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9691,"src":"12305:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12297:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12297:7:29","typeDescriptions":{}}},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9696,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"12280:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9695,"id":9704,"nodeType":"Return","src":"12273:39:29"}]},"documentation":{"id":9686,"nodeType":"StructuredDocumentation","src":"12026:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9706,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"12199:3:29","nodeType":"FunctionDefinition","parameters":{"id":9692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9689,"mutability":"mutable","name":"set","nameLocation":"12219:3:29","nodeType":"VariableDeclaration","scope":9706,"src":"12203:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9688,"nodeType":"UserDefinedTypeName","pathNode":{"id":9687,"name":"UintSet","nameLocations":["12203:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"12203:7:29"},"referencedDeclaration":9685,"src":"12203:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9691,"mutability":"mutable","name":"value","nameLocation":"12232:5:29","nodeType":"VariableDeclaration","scope":9706,"src":"12224:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9690,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:36:29"},"returnParameters":{"id":9695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9706,"src":"12257:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9693,"name":"bool","nodeType":"ElementaryTypeName","src":"12257:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12256:6:29"},"scope":9828,"src":"12190:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9726,"nodeType":"Block","src":"12563:59:29","statements":[{"expression":{"arguments":[{"expression":{"id":9718,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9710,"src":"12588:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12592:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"12588:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9712,"src":"12608:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12600:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:29","typeDescriptions":{}}},"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12600:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9717,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"12580:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12580:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9716,"id":9725,"nodeType":"Return","src":"12573:42:29"}]},"documentation":{"id":9707,"nodeType":"StructuredDocumentation","src":"12325:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9727,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12496:6:29","nodeType":"FunctionDefinition","parameters":{"id":9713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9710,"mutability":"mutable","name":"set","nameLocation":"12519:3:29","nodeType":"VariableDeclaration","scope":9727,"src":"12503:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9709,"nodeType":"UserDefinedTypeName","pathNode":{"id":9708,"name":"UintSet","nameLocations":["12503:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"12503:7:29"},"referencedDeclaration":9685,"src":"12503:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9712,"mutability":"mutable","name":"value","nameLocation":"12532:5:29","nodeType":"VariableDeclaration","scope":9727,"src":"12524:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9711,"name":"uint256","nodeType":"ElementaryTypeName","src":"12524:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12502:36:29"},"returnParameters":{"id":9716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9727,"src":"12557:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9714,"name":"bool","nodeType":"ElementaryTypeName","src":"12557:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12556:6:29"},"scope":9828,"src":"12487:135:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9739,"nodeType":"Block","src":"12981:35:29","statements":[{"expression":{"arguments":[{"expression":{"id":9735,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9731,"src":"12998:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13002:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"12998:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9734,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9313,"src":"12991:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9144_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":9737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9738,"nodeType":"ExpressionStatement","src":"12991:18:29"}]},"documentation":{"id":9728,"nodeType":"StructuredDocumentation","src":"12628:303:29","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9740,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"12945:5:29","nodeType":"FunctionDefinition","parameters":{"id":9732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9731,"mutability":"mutable","name":"set","nameLocation":"12967:3:29","nodeType":"VariableDeclaration","scope":9740,"src":"12951:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9730,"nodeType":"UserDefinedTypeName","pathNode":{"id":9729,"name":"UintSet","nameLocations":["12951:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"12951:7:29"},"referencedDeclaration":9685,"src":"12951:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12950:21:29"},"returnParameters":{"id":9733,"nodeType":"ParameterList","parameters":[],"src":"12981:0:29"},"scope":9828,"src":"12936:80:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9760,"nodeType":"Block","src":"13180:61:29","statements":[{"expression":{"arguments":[{"expression":{"id":9752,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9744,"src":"13207:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13211:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"13207:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"13227:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13219:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13219:7:29","typeDescriptions":{}}},"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9751,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9332,"src":"13197:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9750,"id":9759,"nodeType":"Return","src":"13190:44:29"}]},"documentation":{"id":9741,"nodeType":"StructuredDocumentation","src":"13022:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":9761,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13106:8:29","nodeType":"FunctionDefinition","parameters":{"id":9747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9744,"mutability":"mutable","name":"set","nameLocation":"13131:3:29","nodeType":"VariableDeclaration","scope":9761,"src":"13115:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9743,"nodeType":"UserDefinedTypeName","pathNode":{"id":9742,"name":"UintSet","nameLocations":["13115:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"13115:7:29"},"referencedDeclaration":9685,"src":"13115:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9746,"mutability":"mutable","name":"value","nameLocation":"13144:5:29","nodeType":"VariableDeclaration","scope":9761,"src":"13136:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9745,"name":"uint256","nodeType":"ElementaryTypeName","src":"13136:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:36:29"},"returnParameters":{"id":9750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9761,"src":"13174:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9748,"name":"bool","nodeType":"ElementaryTypeName","src":"13174:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13173:6:29"},"scope":9828,"src":"13097:144:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9775,"nodeType":"Block","src":"13391:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":9771,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9765,"src":"13416:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13420:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"13416:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9770,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"13408:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9769,"id":9774,"nodeType":"Return","src":"13401:26:29"}]},"documentation":{"id":9762,"nodeType":"StructuredDocumentation","src":"13247:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":9776,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13331:6:29","nodeType":"FunctionDefinition","parameters":{"id":9766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9765,"mutability":"mutable","name":"set","nameLocation":"13354:3:29","nodeType":"VariableDeclaration","scope":9776,"src":"13338:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9764,"nodeType":"UserDefinedTypeName","pathNode":{"id":9763,"name":"UintSet","nameLocations":["13338:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"13338:7:29"},"referencedDeclaration":9685,"src":"13338:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"13337:21:29"},"returnParameters":{"id":9769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9776,"src":"13382:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9767,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13381:9:29"},"scope":9828,"src":"13322:112:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9796,"nodeType":"Block","src":"13856:55:29","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":9790,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9780,"src":"13885:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13889:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"13885:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9792,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"13897:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9789,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"13881:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13881:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13873:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9787,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:29","typeDescriptions":{}}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13873:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9786,"id":9795,"nodeType":"Return","src":"13866:38:29"}]},"documentation":{"id":9777,"nodeType":"StructuredDocumentation","src":"13440:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9797,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13785:2:29","nodeType":"FunctionDefinition","parameters":{"id":9783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9780,"mutability":"mutable","name":"set","nameLocation":"13804:3:29","nodeType":"VariableDeclaration","scope":9797,"src":"13788:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9779,"nodeType":"UserDefinedTypeName","pathNode":{"id":9778,"name":"UintSet","nameLocations":["13788:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"13788:7:29"},"referencedDeclaration":9685,"src":"13788:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9782,"mutability":"mutable","name":"index","nameLocation":"13817:5:29","nodeType":"VariableDeclaration","scope":9797,"src":"13809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9781,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13787:36:29"},"returnParameters":{"id":9786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9797,"src":"13847:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9784,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13846:9:29"},"scope":9828,"src":"13776:135:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9826,"nodeType":"Block","src":"14529:192:29","statements":[{"assignments":[9811],"declarations":[{"constant":false,"id":9811,"mutability":"mutable","name":"store","nameLocation":"14556:5:29","nodeType":"VariableDeclaration","scope":9826,"src":"14539:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14539:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9810,"nodeType":"ArrayTypeName","src":"14539:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9816,"initialValue":{"arguments":[{"expression":{"id":9813,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9801,"src":"14572:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14576:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9684,"src":"14572:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9144_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9812,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"14564:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9144_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14539:44:29"},{"assignments":[9821],"declarations":[{"constant":false,"id":9821,"mutability":"mutable","name":"result","nameLocation":"14610:6:29","nodeType":"VariableDeclaration","scope":9826,"src":"14593:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9819,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9820,"nodeType":"ArrayTypeName","src":"14593:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":9822,"nodeType":"VariableDeclarationStatement","src":"14593:23:29"},{"AST":{"nativeSrc":"14652:39:29","nodeType":"YulBlock","src":"14652:39:29","statements":[{"nativeSrc":"14666:15:29","nodeType":"YulAssignment","src":"14666:15:29","value":{"name":"store","nativeSrc":"14676:5:29","nodeType":"YulIdentifier","src":"14676:5:29"},"variableNames":[{"name":"result","nativeSrc":"14666:6:29","nodeType":"YulIdentifier","src":"14666:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9821,"isOffset":false,"isSlot":false,"src":"14666:6:29","valueSize":1},{"declaration":9811,"isOffset":false,"isSlot":false,"src":"14676:5:29","valueSize":1}],"flags":["memory-safe"],"id":9823,"nodeType":"InlineAssembly","src":"14627:64:29"},{"expression":{"id":9824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"14708:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9806,"id":9825,"nodeType":"Return","src":"14701:13:29"}]},"documentation":{"id":9798,"nodeType":"StructuredDocumentation","src":"13917:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9827,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"14460:6:29","nodeType":"FunctionDefinition","parameters":{"id":9802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9801,"mutability":"mutable","name":"set","nameLocation":"14483:3:29","nodeType":"VariableDeclaration","scope":9827,"src":"14467:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9800,"nodeType":"UserDefinedTypeName","pathNode":{"id":9799,"name":"UintSet","nameLocations":["14467:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":9685,"src":"14467:7:29"},"referencedDeclaration":9685,"src":"14467:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9685_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"14466:21:29"},"returnParameters":{"id":9806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9827,"src":"14511:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9803,"name":"uint256","nodeType":"ElementaryTypeName","src":"14511:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9804,"nodeType":"ArrayTypeName","src":"14511:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14510:18:29"},"scope":9828,"src":"14451:270:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":9829,"src":"1425:13298:29","usedErrors":[],"usedEvents":[]}],"src":"205:14519:29"},"id":29},"contracts/EHMarketV1.sol":{"ast":{"absolutePath":"contracts/EHMarketV1.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[586],"ECDSA":[5503],"EHMarketV1":[10028],"IERC20":[2017],"MessageHashUtils":[5589],"SafeERC20":[2507]},"id":10029,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9830,"literals":["solidity","0.8",".26"],"nodeType":"PragmaDirective","src":"32:23:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":9833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10029,"sourceUnit":2508,"src":"57:90:30","symbolAliases":[{"foreign":{"id":9831,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"65:6:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":9832,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"73:9:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","id":9835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10029,"sourceUnit":587,"src":"148:144:30","symbolAliases":[{"foreign":{"id":9834,"name":"AccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"156:34:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":9837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10029,"sourceUnit":5504,"src":"293:75:30","symbolAliases":[{"foreign":{"id":9836,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"301:5:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":9839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10029,"sourceUnit":5590,"src":"369:97:30","symbolAliases":[{"foreign":{"id":9838,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"377:16:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9840,"name":"AccessControlEnumerableUpgradeable","nameLocations":["491:34:30"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"491:34:30"},"id":9841,"nodeType":"InheritanceSpecifier","src":"491:34:30"}],"canonicalName":"EHMarketV1","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10028,"linearizedBaseContracts":[10028,586,362,940,5601,1197,1023,900,854],"name":"EHMarketV1","nameLocation":"477:10:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9845,"libraryName":{"id":9842,"name":"SafeERC20","nameLocations":["536:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":2507,"src":"536:9:30"},"nodeType":"UsingForDirective","src":"530:27:30","typeName":{"id":9844,"nodeType":"UserDefinedTypeName","pathNode":{"id":9843,"name":"IERC20","nameLocations":["550:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":2017,"src":"550:6:30"},"referencedDeclaration":2017,"src":"550:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}}},{"global":false,"id":9848,"libraryName":{"id":9846,"name":"ECDSA","nameLocations":["566:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":5503,"src":"566:5:30"},"nodeType":"UsingForDirective","src":"560:24:30","typeName":{"id":9847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"576:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":9851,"libraryName":{"id":9849,"name":"MessageHashUtils","nameLocations":["593:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"593:16:30"},"nodeType":"UsingForDirective","src":"587:35:30","typeName":{"id":9850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"614:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"errorSelector":"ca31867a","id":9853,"name":"UnauthorizedSigner","nameLocation":"632:18:30","nodeType":"ErrorDefinition","parameters":{"id":9852,"nodeType":"ParameterList","parameters":[],"src":"650:2:30"},"src":"626:27:30"},{"anonymous":false,"eventSelector":"752cd0c4fe55d95cbe1325ebc6a35e473a741572f01a076425179f2421841bf8","id":9861,"name":"UserBalanceChanged","nameLocation":"663:18:30","nodeType":"EventDefinition","parameters":{"id":9860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9855,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"698:7:30","nodeType":"VariableDeclaration","scope":9861,"src":"682:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9854,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9857,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"714:6:30","nodeType":"VariableDeclaration","scope":9861,"src":"707:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9856,"name":"int256","nodeType":"ElementaryTypeName","src":"707:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9859,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"730:9:30","nodeType":"VariableDeclaration","scope":9861,"src":"722:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9858,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"681:59:30"},"src":"657:84:30"},{"anonymous":false,"eventSelector":"e46208ae3c8157621e96e03a67b3fc7b61b734022b04cf097b94dd994dd95b43","id":9869,"name":"DelegateUpdated","nameLocation":"750:15:30","nodeType":"EventDefinition","parameters":{"id":9868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9863,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"782:9:30","nodeType":"VariableDeclaration","scope":9869,"src":"766:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9862,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9865,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"809:8:30","nodeType":"VariableDeclaration","scope":9869,"src":"793:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9864,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9867,"indexed":false,"mutability":"mutable","name":"allowance","nameLocation":"827:9:30","nodeType":"VariableDeclaration","scope":9869,"src":"819:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9866,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"765:72:30"},"src":"744:94:30"},{"constant":true,"functionSelector":"b2194ff5","id":9874,"mutability":"constant","name":"MATCHER_ROLE","nameLocation":"866:12:30","nodeType":"VariableDeclaration","scope":10028,"src":"842:64:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"842:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d4154434845525f524f4c45","id":9872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"891:14:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_df91394c13c48ebd5370100f1eb84afe3c6c47a78f9f9f874d5a9ec6afe0ae6b","typeString":"literal_string \"MATCHER_ROLE\""},"value":"MATCHER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df91394c13c48ebd5370100f1eb84afe3c6c47a78f9f9f874d5a9ec6afe0ae6b","typeString":"literal_string \"MATCHER_ROLE\""}],"id":9871,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"881:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"d8dfeb45","id":9876,"mutability":"mutable","name":"collateral","nameLocation":"925:10:30","nodeType":"VariableDeclaration","scope":10028,"src":"910:25:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9875,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":9877,"nodeType":"StructuredDocumentation","src":"940:41:30","text":"@dev Storage gap for future upgrades."},"id":9881,"mutability":"mutable","name":"__gap","nameLocation":"1005:5:30","nodeType":"VariableDeclaration","scope":10028,"src":"984:26:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage","typeString":"uint256[10]"},"typeName":{"baseType":{"id":9878,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9880,"length":{"hexValue":"3130","id":9879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"992:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"984:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage_ptr","typeString":"uint256[10]"}},"visibility":"internal"},{"body":{"id":9887,"nodeType":"Block","src":"1029:33:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9884,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1035:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9886,"nodeType":"ExpressionStatement","src":"1035:22:30"}]},"id":9888,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9882,"nodeType":"ParameterList","parameters":[],"src":"1026:2:30"},"returnParameters":{"id":9883,"nodeType":"ParameterList","parameters":[],"src":"1029:0:30"},"scope":10028,"src":"1015:47:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9931,"nodeType":"Block","src":"1154:226:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9898,"name":"__AccessControlEnumerable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1160:30:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1160:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9900,"nodeType":"ExpressionStatement","src":"1160:32:30"},{"expression":{"arguments":[{"id":9902,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1210:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9903,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1230:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9901,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"1199:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1199:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9906,"nodeType":"ExpressionStatement","src":"1199:44:30"},{"body":{"id":9925,"nodeType":"Block","src":"1293:53:30","statements":[{"expression":{"arguments":[{"id":9919,"name":"MATCHER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"1312:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":9920,"name":"_matchers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"1326:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9922,"indexExpression":{"id":9921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9908,"src":"1336:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1326:12:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9918,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"1301:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9924,"nodeType":"ExpressionStatement","src":"1301:38:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9908,"src":"1266:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9912,"name":"_matchers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"1270:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1280:6:30","memberName":"length","nodeType":"MemberAccess","src":"1270:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1266:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9926,"initializationExpression":{"assignments":[9908],"declarations":[{"constant":false,"id":9908,"mutability":"mutable","name":"i","nameLocation":"1259:1:30","nodeType":"VariableDeclaration","scope":9926,"src":"1254:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9907,"name":"uint","nodeType":"ElementaryTypeName","src":"1254:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9910,"initialValue":{"hexValue":"30","id":9909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1263:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1254:10:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1288:3:30","subExpression":{"id":9915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9908,"src":"1288:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9917,"nodeType":"ExpressionStatement","src":"1288:3:30"},"nodeType":"ForStatement","src":"1249:97:30"},{"expression":{"id":9929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9927,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"1351:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9928,"name":"_collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9893,"src":"1364:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1351:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9930,"nodeType":"ExpressionStatement","src":"1351:24:30"}]},"functionSelector":"462d0b2e","id":9932,"implemented":true,"kind":"function","modifiers":[{"id":9896,"kind":"modifierInvocation","modifierName":{"id":9895,"name":"initializer","nameLocations":["1142:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"1142:11:30"},"nodeType":"ModifierInvocation","src":"1142:11:30"}],"name":"initialize","nameLocation":"1075:10:30","nodeType":"FunctionDefinition","parameters":{"id":9894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9891,"mutability":"mutable","name":"_matchers","nameLocation":"1103:9:30","nodeType":"VariableDeclaration","scope":9932,"src":"1086:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9889,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9890,"nodeType":"ArrayTypeName","src":"1086:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9893,"mutability":"mutable","name":"_collateral","nameLocation":"1122:11:30","nodeType":"VariableDeclaration","scope":9932,"src":"1114:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9892,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:49:30"},"returnParameters":{"id":9897,"nodeType":"ParameterList","parameters":[],"src":"1154:0:30"},"scope":10028,"src":"1066:314:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9961,"nodeType":"Block","src":"1523:135:30","statements":[{"eventCall":{"arguments":[{"id":9940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9934,"src":"1553:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9943,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"1564:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1557:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9941,"name":"int256","nodeType":"ElementaryTypeName","src":"1557:6:30","typeDescriptions":{}}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1557:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"hexValue":"30","id":9945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9939,"name":"UserBalanceChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9861,"src":"1534:18:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$_t_uint256_$returns$__$","typeString":"function (address,int256,uint256)"}},"id":9946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1534:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9947,"nodeType":"EmitStatement","src":"1529:46:30"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9952,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1617:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1617:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9956,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1639:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_EHMarketV1_$10028","typeString":"contract EHMarketV1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EHMarketV1_$10028","typeString":"contract EHMarketV1"}],"id":9955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1631:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9954,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:30","typeDescriptions":{}}},"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"1646:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9949,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"1588:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9948,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1581:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2017_$","typeString":"type(contract IERC20)"}},"id":9950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":9951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1600:16:30","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"1581:35:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2017_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:72:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9960,"nodeType":"ExpressionStatement","src":"1581:72:30"}]},"functionSelector":"8aaa6b92","id":9962,"implemented":true,"kind":"function","modifiers":[],"name":"depositAssetTo","nameLocation":"1473:14:30","nodeType":"FunctionDefinition","parameters":{"id":9937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9934,"mutability":"mutable","name":"to","nameLocation":"1496:2:30","nodeType":"VariableDeclaration","scope":9962,"src":"1488:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9933,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9936,"mutability":"mutable","name":"amount","nameLocation":"1508:6:30","nodeType":"VariableDeclaration","scope":9962,"src":"1500:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1500:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1487:28:30"},"returnParameters":{"id":9938,"nodeType":"ParameterList","parameters":[],"src":"1523:0:30"},"scope":10028,"src":"1464:194:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9973,"nodeType":"Block","src":"1709:47:30","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9968,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1730:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1730:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9970,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9964,"src":"1744:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9967,"name":"depositAssetTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"1715:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9972,"nodeType":"ExpressionStatement","src":"1715:36:30"}]},"functionSelector":"fa2df414","id":9974,"implemented":true,"kind":"function","modifiers":[],"name":"depositAsset","nameLocation":"1671:12:30","nodeType":"FunctionDefinition","parameters":{"id":9965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9964,"mutability":"mutable","name":"amount","nameLocation":"1692:6:30","nodeType":"VariableDeclaration","scope":9974,"src":"1684:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:16:30"},"returnParameters":{"id":9966,"nodeType":"ParameterList","parameters":[],"src":"1709:0:30"},"scope":10028,"src":"1662:94:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10011,"nodeType":"Block","src":"1841:191:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":9985,"name":"MATCHER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"1863:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9986,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1877:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1877:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9984,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1855:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9989,"name":"UnauthorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"1892:18:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":9983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1847:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1847:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9992,"nodeType":"ExpressionStatement","src":"1847:66:30"},{"eventCall":{"arguments":[{"id":9994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"1943:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1949:15:30","subExpression":{"arguments":[{"id":9997,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9978,"src":"1957:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1950:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9995,"name":"int256","nodeType":"ElementaryTypeName","src":"1950:6:30","typeDescriptions":{}}},"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1950:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10000,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9980,"src":"1966:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9993,"name":"UserBalanceChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9861,"src":"1924:18:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$_t_uint256_$returns$__$","typeString":"function (address,int256,uint256)"}},"id":10001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10002,"nodeType":"EmitStatement","src":"1919:57:30"},{"expression":{"arguments":[{"id":10007,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"2014:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10008,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9978,"src":"2020:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10004,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"1989:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10003,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1982:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2017_$","typeString":"type(contract IERC20)"}},"id":10005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2017","typeString":"contract IERC20"}},"id":10006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2001:12:30","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"1982:31:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2017_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2017_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10010,"nodeType":"ExpressionStatement","src":"1982:45:30"}]},"functionSelector":"b1dab948","id":10012,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawAsset","nameLocation":"1769:13:30","nodeType":"FunctionDefinition","parameters":{"id":9981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9976,"mutability":"mutable","name":"from","nameLocation":"1791:4:30","nodeType":"VariableDeclaration","scope":10012,"src":"1783:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9975,"name":"address","nodeType":"ElementaryTypeName","src":"1783:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9978,"mutability":"mutable","name":"amount","nameLocation":"1805:6:30","nodeType":"VariableDeclaration","scope":10012,"src":"1797:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9980,"mutability":"mutable","name":"requestId","nameLocation":"1821:9:30","nodeType":"VariableDeclaration","scope":10012,"src":"1813:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1782:49:30"},"returnParameters":{"id":9982,"nodeType":"ParameterList","parameters":[],"src":"1841:0:30"},"scope":10028,"src":"1760:272:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10026,"nodeType":"Block","src":"2103:66:30","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10020,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2130:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10022,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10014,"src":"2144:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10023,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10016,"src":"2154:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10019,"name":"DelegateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9869,"src":"2114:15:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2114:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10025,"nodeType":"EmitStatement","src":"2109:55:30"}]},"functionSelector":"d6a510d9","id":10027,"implemented":true,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"2045:11:30","nodeType":"FunctionDefinition","parameters":{"id":10017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10014,"mutability":"mutable","name":"delegate","nameLocation":"2065:8:30","nodeType":"VariableDeclaration","scope":10027,"src":"2057:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10013,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10016,"mutability":"mutable","name":"allowance","nameLocation":"2083:9:30","nodeType":"VariableDeclaration","scope":10027,"src":"2075:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2056:37:30"},"returnParameters":{"id":10018,"nodeType":"ParameterList","parameters":[],"src":"2103:0:30"},"scope":10028,"src":"2036:133:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10029,"src":"468:1703:30","usedErrors":[603,606,950,953,2055,9853],"usedEvents":[611,962,971,980,9861,9869]}],"src":"32:2140:30"},"id":30},"contracts/interfaces/IEventHorizonMarket.sol":{"ast":{"absolutePath":"contracts/interfaces/IEventHorizonMarket.sol","exportedSymbols":{"IEventHorizonMarket":[10103]},"id":10104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10030,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IEventHorizonMarket","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":10103,"linearizedBaseContracts":[10103],"name":"IEventHorizonMarket","nameLocation":"68:19:31","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"6a8becc577f23f7bb1c6f235ecca86092deea986273e273969a17fe1a0ee1100","id":10042,"name":"NewFundingRate","nameLocation":"98:14:31","nodeType":"EventDefinition","parameters":{"id":10041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10032,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"134:5:31","nodeType":"VariableDeclaration","scope":10042,"src":"118:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10031,"name":"uint256","nodeType":"ElementaryTypeName","src":"118:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10034,"indexed":false,"mutability":"mutable","name":"frLongPerSecond","nameLocation":"152:15:31","nodeType":"VariableDeclaration","scope":10042,"src":"145:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10033,"name":"int256","nodeType":"ElementaryTypeName","src":"145:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10036,"indexed":false,"mutability":"mutable","name":"frShortPerSecond","nameLocation":"180:16:31","nodeType":"VariableDeclaration","scope":10042,"src":"173:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10035,"name":"int256","nodeType":"ElementaryTypeName","src":"173:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10038,"indexed":false,"mutability":"mutable","name":"longFRStored","nameLocation":"209:12:31","nodeType":"VariableDeclaration","scope":10042,"src":"202:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10037,"name":"int256","nodeType":"ElementaryTypeName","src":"202:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10040,"indexed":false,"mutability":"mutable","name":"shortFRStored","nameLocation":"234:13:31","nodeType":"VariableDeclaration","scope":10042,"src":"227:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10039,"name":"int256","nodeType":"ElementaryTypeName","src":"227:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"112:139:31"},"src":"92:160:31"},{"anonymous":false,"eventSelector":"5d24abc2faf44042a69ad553466c30c1babb67770aaebded138762bfc7ea1ec8","id":10050,"name":"DepositBalanceChanged","nameLocation":"261:21:31","nodeType":"EventDefinition","parameters":{"id":10049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10044,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"299:7:31","nodeType":"VariableDeclaration","scope":10050,"src":"283:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10043,"name":"address","nodeType":"ElementaryTypeName","src":"283:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10046,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"315:6:31","nodeType":"VariableDeclaration","scope":10050,"src":"308:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10045,"name":"int256","nodeType":"ElementaryTypeName","src":"308:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10048,"indexed":false,"mutability":"mutable","name":"finalBalance","nameLocation":"331:12:31","nodeType":"VariableDeclaration","scope":10050,"src":"323:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10047,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:62:31"},"src":"255:90:31"},{"anonymous":false,"eventSelector":"3e37912ec49a7cfc11bee2738c4ed0b9f72bc5d7e84e1fc8967beca2476cdfff","id":10060,"name":"InstrumentUpdate","nameLocation":"354:16:31","nodeType":"EventDefinition","parameters":{"id":10059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10052,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"387:5:31","nodeType":"VariableDeclaration","scope":10060,"src":"371:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10051,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10056,"indexed":false,"mutability":"mutable","name":"ticker","nameLocation":"405:6:31","nodeType":"VariableDeclaration","scope":10060,"src":"394:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string[12]"},"typeName":{"baseType":{"id":10053,"name":"string","nodeType":"ElementaryTypeName","src":"394:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10055,"length":{"hexValue":"3132","id":10054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"401:2:31","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"nodeType":"ArrayTypeName","src":"394:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$12_storage_ptr","typeString":"string[12]"}},"visibility":"internal"},{"constant":false,"id":10058,"indexed":false,"mutability":"mutable","name":"leverage","nameLocation":"421:8:31","nodeType":"VariableDeclaration","scope":10060,"src":"413:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10057,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"370:60:31"},"src":"348:83:31"},{"anonymous":false,"eventSelector":"7fe0e2c1e6082f25d355a28f2300ccca8732c3da333c218dd3aee3628de88b95","id":10064,"name":"InstrumentDeleted","nameLocation":"440:17:31","nodeType":"EventDefinition","parameters":{"id":10063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10062,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"474:5:31","nodeType":"VariableDeclaration","scope":10064,"src":"458:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10061,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"457:23:31"},"src":"434:47:31"},{"anonymous":false,"eventSelector":"34706f24858e1a0beae3aafe2906180662a9b3008595ee8f81a03ab21ab733ca","id":10072,"name":"BasicParamsUpdate","nameLocation":"490:17:31","nodeType":"EventDefinition","parameters":{"id":10071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10066,"indexed":false,"mutability":"mutable","name":"soLevel","nameLocation":"516:7:31","nodeType":"VariableDeclaration","scope":10072,"src":"508:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10065,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10068,"indexed":false,"mutability":"mutable","name":"withdrawMarginLevel","nameLocation":"533:19:31","nodeType":"VariableDeclaration","scope":10072,"src":"525:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10067,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10070,"indexed":false,"mutability":"mutable","name":"liquidationFeePercent","nameLocation":"562:21:31","nodeType":"VariableDeclaration","scope":10072,"src":"554:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10069,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"507:77:31"},"src":"484:101:31"},{"anonymous":false,"eventSelector":"e46208ae3c8157621e96e03a67b3fc7b61b734022b04cf097b94dd994dd95b43","id":10080,"name":"DelegateUpdated","nameLocation":"594:15:31","nodeType":"EventDefinition","parameters":{"id":10079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10074,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"626:9:31","nodeType":"VariableDeclaration","scope":10080,"src":"610:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10073,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10076,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"653:8:31","nodeType":"VariableDeclaration","scope":10080,"src":"637:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10075,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10078,"indexed":false,"mutability":"mutable","name":"allowance","nameLocation":"671:9:31","nodeType":"VariableDeclaration","scope":10080,"src":"663:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10077,"name":"uint256","nodeType":"ElementaryTypeName","src":"663:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:72:31"},"src":"588:94:31"},{"anonymous":false,"eventSelector":"40387435479d34053183bdc4db82c80b565852640d8fdd601d221e6e67de0682","id":10084,"name":"BalancesMerkleRootUpdated","nameLocation":"691:25:31","nodeType":"EventDefinition","parameters":{"id":10083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10082,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"725:10:31","nodeType":"VariableDeclaration","scope":10084,"src":"717:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"717:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"716:20:31"},"src":"685:52:31"},{"errorSelector":"aae06a96","id":10086,"name":"InstrumentDoesNotExist","nameLocation":"747:22:31","nodeType":"ErrorDefinition","parameters":{"id":10085,"nodeType":"ParameterList","parameters":[],"src":"769:2:31"},"src":"741:31:31"},{"errorSelector":"ea10a257","id":10088,"name":"WithdrawMoreThanBalance","nameLocation":"781:23:31","nodeType":"ErrorDefinition","parameters":{"id":10087,"nodeType":"ParameterList","parameters":[],"src":"804:2:31"},"src":"775:32:31"},{"errorSelector":"ca31867a","id":10090,"name":"UnauthorizedSigner","nameLocation":"816:18:31","nodeType":"ErrorDefinition","parameters":{"id":10089,"nodeType":"ParameterList","parameters":[],"src":"834:2:31"},"src":"810:27:31"},{"errorSelector":"8baa579f","id":10092,"name":"InvalidSignature","nameLocation":"846:16:31","nodeType":"ErrorDefinition","parameters":{"id":10091,"nodeType":"ParameterList","parameters":[],"src":"862:2:31"},"src":"840:25:31"},{"errorSelector":"df4cc36d","id":10094,"name":"ExpiredSignature","nameLocation":"874:16:31","nodeType":"ErrorDefinition","parameters":{"id":10093,"nodeType":"ParameterList","parameters":[],"src":"890:2:31"},"src":"868:25:31"},{"errorSelector":"ce0267ae","id":10098,"name":"MatcherIsOperational","nameLocation":"902:20:31","nodeType":"ErrorDefinition","parameters":{"id":10097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10096,"mutability":"mutable","name":"validUntil","nameLocation":"931:10:31","nodeType":"VariableDeclaration","scope":10098,"src":"923:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10095,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"922:20:31"},"src":"896:47:31"},{"errorSelector":"3b8c3cac","id":10102,"name":"InvalidMerkleProof","nameLocation":"952:18:31","nodeType":"ErrorDefinition","parameters":{"id":10101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10100,"mutability":"mutable","name":"leaf","nameLocation":"979:4:31","nodeType":"VariableDeclaration","scope":10102,"src":"971:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"970:14:31"},"src":"946:39:31"}],"scope":10104,"src":"58:929:31","usedErrors":[10086,10088,10090,10092,10094,10098,10102],"usedEvents":[10042,10050,10060,10064,10072,10080,10084]}],"src":"32:956:31"},"id":31},"contracts/mock/MockERC20.sol":{"ast":{"absolutePath":"contracts/mock/MockERC20.sol","exportedSymbols":{"Context":[3447],"ERC20":[1939],"IERC20":[2017],"IERC20Errors":[1329],"IERC20Metadata":[2043],"MockToken":[10144],"Ownable":[1171]},"id":10145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":10106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10145,"sourceUnit":1940,"src":"58:55:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10145,"sourceUnit":1172,"src":"114:52:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10108,"name":"ERC20","nameLocations":["190:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"190:5:32"},"id":10109,"nodeType":"InheritanceSpecifier","src":"190:5:32"},{"baseName":{"id":10110,"name":"Ownable","nameLocations":["197:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1171,"src":"197:7:32"},"id":10111,"nodeType":"InheritanceSpecifier","src":"197:7:32"}],"canonicalName":"MockToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10144,"linearizedBaseContracts":[10144,1171,1939,1329,2043,2017,3447],"name":"MockToken","nameLocation":"177:9:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":10127,"nodeType":"Block","src":"343:2:32","statements":[]},"id":10128,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10120,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"307:4:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10121,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"313:6:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":10122,"kind":"baseConstructorSpecifier","modifierName":{"id":10119,"name":"ERC20","nameLocations":["301:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"301:5:32"},"nodeType":"ModifierInvocation","src":"301:19:32"},{"arguments":[{"id":10124,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"329:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10125,"kind":"baseConstructorSpecifier","modifierName":{"id":10123,"name":"Ownable","nameLocations":["321:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1171,"src":"321:7:32"},"nodeType":"ModifierInvocation","src":"321:21:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10113,"mutability":"mutable","name":"name","nameLocation":"240:4:32","nodeType":"VariableDeclaration","scope":10128,"src":"226:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10112,"name":"string","nodeType":"ElementaryTypeName","src":"226:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10115,"mutability":"mutable","name":"symbol","nameLocation":"264:6:32","nodeType":"VariableDeclaration","scope":10128,"src":"250:20:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10114,"name":"string","nodeType":"ElementaryTypeName","src":"250:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10117,"mutability":"mutable","name":"initialOwner","nameLocation":"284:12:32","nodeType":"VariableDeclaration","scope":10128,"src":"276:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10116,"name":"address","nodeType":"ElementaryTypeName","src":"276:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"220:80:32"},"returnParameters":{"id":10126,"nodeType":"ParameterList","parameters":[],"src":"343:0:32"},"scope":10144,"src":"209:136:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10142,"nodeType":"Block","src":"408:28:32","statements":[{"expression":{"arguments":[{"id":10138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"420:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10132,"src":"424:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10137,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"414:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"414:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10141,"nodeType":"ExpressionStatement","src":"414:17:32"}]},"functionSelector":"40c10f19","id":10143,"implemented":true,"kind":"function","modifiers":[{"id":10135,"kind":"modifierInvocation","modifierName":{"id":10134,"name":"onlyOwner","nameLocations":["398:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"398:9:32"},"nodeType":"ModifierInvocation","src":"398:9:32"}],"name":"mint","nameLocation":"358:4:32","nodeType":"FunctionDefinition","parameters":{"id":10133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10130,"mutability":"mutable","name":"to","nameLocation":"371:2:32","nodeType":"VariableDeclaration","scope":10143,"src":"363:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10129,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10132,"mutability":"mutable","name":"amount","nameLocation":"383:6:32","nodeType":"VariableDeclaration","scope":10143,"src":"375:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10131,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"362:28:32"},"returnParameters":{"id":10136,"nodeType":"ParameterList","parameters":[],"src":"408:0:32"},"scope":10144,"src":"349:87:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10145,"src":"168:270:32","usedErrors":[1037,1042,1299,1304,1309,1318,1323,1328],"usedEvents":[1048,1951,1960]}],"src":"32:407:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xaec38804089a16494f7d45ebbbeab78fe05e5dc4bc2eae1d2af458fe999fb43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04796408e2c4a1051afb23319e9505edb595a3d9c663ff5d6fcfb8e185ab1d93\",\"dweb:/ipfs/Qma8ZTi4kGyqg45SyNibbJSqMF7broiQnJPHhEGLcZyF9U\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1032,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1447,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1453,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1455,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1457,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1459,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203c1d95b5507f663c32bedb8c30b08d3127c4916ea18af213d429fe053d2ce49e64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY SAR SWAP6 0xB5 POP PUSH32 0x663C32BEDB8C30B08D3127C4916EA18AF213D429FE053D2CE49E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"698:9376:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203c1d95b5507f663c32bedb8c30b08d3127c4916ea18af213d429fe053d2ce49e64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY SAR SWAP6 0xB5 POP PUSH32 0x663C32BEDB8C30B08D3127C4916EA18AF213D429FE053D2CE49E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"698:9376:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220688f425f88d3fb8f27a784bbbd0bd84cc96843ffacf36e0b3fd3d6d9bb09459a64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x8F425F88D3FB8F27A7 DUP5 0xBB 0xBD SIGNEXTEND 0xD8 0x4C 0xC9 PUSH9 0x43FFACF36E0B3FD3D6 0xD9 0xBB MULMOD GASLIMIT SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"459:17878:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220688f425f88d3fb8f27a784bbbd0bd84cc96843ffacf36e0b3fd3d6d9bb09459a64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x8F425F88D3FB8F27A7 DUP5 0xBB 0xBD SIGNEXTEND 0xD8 0x4C 0xC9 PUSH9 0x43FFACF36E0B3FD3D6 0xD9 0xBB MULMOD GASLIMIT SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"459:17878:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220266358d2ecca323bab52023baa941a5d36f1b95d7c5fdbdabd6b3fb7b8a6620664736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH4 0x58D2ECCA ORIGIN EXTCODESIZE 0xAB MSTORE MUL EXTCODESIZE 0xAA SWAP5 BYTE TSTORE CALLDATASIZE CALL 0xB9 TSTORE PUSH29 0x5FDBDABD6B3FB7B8A6620664736F6C634300081A003300000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220266358d2ecca323bab52023baa941a5d36f1b95d7c5fdbdabd6b3fb7b8a6620664736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH4 0x58D2ECCA ORIGIN EXTCODESIZE 0xAB MSTORE MUL EXTCODESIZE 0xAA SWAP5 BYTE TSTORE CALLDATASIZE CALL 0xB9 TSTORE PUSH29 0x5FDBDABD6B3FB7B8A6620664736F6C634300081A003300000000000000 ","sourceMap":"224:218:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220eaa39cc1fa646d51e27e00da6cbcde8619812f7b423ed6972fdf850bfd85f25c64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA LOG3 SWAP13 0xC1 STATICCALL PUSH5 0x6D51E27E00 0xDA PUSH13 0xBCDE8619812F7B423ED6972FDF DUP6 SIGNEXTEND REVERT DUP6 CALLCODE TLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"657:1315:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220eaa39cc1fa646d51e27e00da6cbcde8619812f7b423ed6972fdf850bfd85f25c64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA LOG3 SWAP13 0xC1 STATICCALL PUSH5 0x6D51E27E00 0xDA PUSH13 0xBCDE8619812F7B423ED6972FDF DUP6 SIGNEXTEND REVERT DUP6 CALLCODE TLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"657:1315:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220750e227cfbcd02a5eb39a644561d973b34b041a87ae6c239c608e4122ee7ea6964736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xE227CFBCD02A5EB39A644561D973B34B041A87AE6C2 CODECOPY 0xC6 ADDMOD 0xE4 SLT 0x2E 0xE7 0xEA PUSH10 0x64736F6C634300081A00 CALLER ","sourceMap":"1599:3723:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220750e227cfbcd02a5eb39a644561d973b34b041a87ae6c239c608e4122ee7ea6964736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xE227CFBCD02A5EB39A644561D973B34B041A87AE6C2 CODECOPY 0xC6 ADDMOD 0xE4 SLT 0x2E 0xE7 0xEA PUSH10 0x64736F6C634300081A00 CALLER ","sourceMap":"1599:3723:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f01b28f5cc5feb5bd578ddcdd688c9f31b50ae6a0146f76e157a01a233697da464736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHL 0x28 CREATE2 0xCC PUSH0 0xEB JUMPDEST 0xD5 PUSH25 0xDDCDD688C9F31B50AE6A0146F76E157A01A233697DA464736F PUSH13 0x634300081A0033000000000000 ","sourceMap":"1407:2774:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f01b28f5cc5feb5bd578ddcdd688c9f31b50ae6a0146f76e157a01a233697da464736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHL 0x28 CREATE2 0xCC PUSH0 0xEB JUMPDEST 0xD5 PUSH25 0xDDCDD688C9F31B50AE6A0146F76E157A01A233697DA464736F PUSH13 0x634300081A0033000000000000 ","sourceMap":"1407:2774:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207d9b91278a1d9870ca4bad60ca7a90ef19c595e782b110278d47cc2e9928565f64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9B91278A1D9870CA4BAD60CA7A90EF19C595E782B110278D47CC2E992856 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"297:18980:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207d9b91278a1d9870ca4bad60ca7a90ef19c595e782b110278d47cc2e9928565f64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9B91278A1D9870CA4BAD60CA7A90EF19C595E782B110278D47CC2E992856 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"297:18980:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cc7b162702089ed1ebf95823a9b7620331fbae901444e4acdc96aae34208ab8764736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH28 0x162702089ED1EBF95823A9B7620331FBAE901444E4ACDC96AAE34208 0xAB DUP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"344:7470:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cc7b162702089ed1ebf95823a9b7620331fbae901444e4acdc96aae34208ab8764736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH28 0x162702089ED1EBF95823A9B7620331FBAE901444E4ACDC96AAE34208 0xAB DUP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"344:7470:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ad4709eb3d007df26afae733df183057210d28198a17af9216073081bab7da9664736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD SELFBALANCE MULMOD 0xEB RETURNDATASIZE STOP PUSH30 0xF26AFAE733DF183057210D28198A17AF9216073081BAB7DA9664736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ","sourceMap":"521:3729:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ad4709eb3d007df26afae733df183057210d28198a17af9216073081bab7da9664736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD SELFBALANCE MULMOD 0xEB RETURNDATASIZE STOP PUSH30 0xF26AFAE733DF183057210D28198A17AF9216073081BAB7DA9664736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ","sourceMap":"521:3729:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206c6984daf6e51d7e68f068a013e40f4cba38e52205e0f3228beaccf043962cc964736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x6984DAF6E51D7E68F068A013E4 0xF 0x4C 0xBA CODESIZE 0xE5 0x22 SDIV 0xE0 RETURN 0x22 DUP12 0xEA 0xCC CREATE NUMBER SWAP7 0x2C 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"281:31863:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206c6984daf6e51d7e68f068a013e40f4cba38e52205e0f3228beaccf043962cc964736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x6984DAF6E51D7E68F068A013E4 0xF 0x4C 0xBA CODESIZE 0xE5 0x22 SDIV 0xE0 RETURN 0x22 DUP12 0xEA 0xCC CREATE NUMBER SWAP7 0x2C 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"281:31863:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220df0891c185c469eb08afb4445ea29f4c08a4a7bbf61d49e8da22e1cdf71d9f1b64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF ADDMOD SWAP2 0xC1 DUP6 0xC4 PUSH10 0xEB08AFB4445EA29F4C08 LOG4 0xA7 0xBB 0xF6 SAR BLOBHASH 0xE8 0xDA 0x22 0xE1 0xCD 0xF7 SAR SWAP16 SHL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"769:34173:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220df0891c185c469eb08afb4445ea29f4c08a4a7bbf61d49e8da22e1cdf71d9f1b64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF ADDMOD SWAP2 0xC1 DUP6 0xC4 PUSH10 0xEB08AFB4445EA29F4C08 LOG4 0xA7 0xBB 0xF6 SAR BLOBHASH 0xE8 0xDA 0x22 0xE1 0xCD 0xF7 SAR SWAP16 SHL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"769:34173:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206dce96a4a9addce0fdcccbb1f92dd394983241c288dd951fabee9ca6f87d474164736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xCE96A4A9ADDCE0FDCCCBB1F92DD3 SWAP5 SWAP9 ORIGIN COINBASE 0xC2 DUP9 0xDD SWAP6 0x1F 0xAB 0xEE SWAP13 0xA6 0xF8 PUSH30 0x474164736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"258:2354:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206dce96a4a9addce0fdcccbb1f92dd394983241c288dd951fabee9ca6f87d474164736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xCE96A4A9ADDCE0FDCCCBB1F92DD3 SWAP5 SWAP9 ORIGIN COINBASE 0xC2 DUP9 0xDD SWAP6 0x1F 0xAB 0xEE SWAP13 0xA6 0xF8 PUSH30 0x474164736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"258:2354:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a42fc5be4ba05cd2f86b7805adc916012a51aa51ca4a0a026ffdcc1dc781effb64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x2F 0xC5 0xBE 0x4B LOG0 TLOAD 0xD2 0xF8 PUSH12 0x7805ADC916012A51AA51CA4A EXP MUL PUSH16 0xFDCC1DC781EFFB64736F6C634300081A STOP CALLER ","sourceMap":"1425:13298:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a42fc5be4ba05cd2f86b7805adc916012a51aa51ca4a0a026ffdcc1dc781effb64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x2F 0xC5 0xBE 0x4B LOG0 TLOAD 0xD2 0xF8 PUSH12 0x7805ADC916012A51AA51CA4A EXP MUL PUSH16 0xFDCC1DC781EFFB64736F6C634300081A STOP CALLER ","sourceMap":"1425:13298:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. - Set can be cleared (all elements removed) in O(n). ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/EHMarketV1.sol":{"EHMarketV1":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UnauthorizedSigner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"DelegateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"int256","name":"amount","type":"int256"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"UserBalanceChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MATCHER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateral","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositAssetTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_matchers","type":"address[]"},{"internalType":"address","name":"_collateral","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"withdrawAsset","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0xD2 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH1 0xC1 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH1 0x5C JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF1 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 PUSH1 0x4D JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x881 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0x462D0B2E EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x8AAA6B92 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB1DAB948 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xB2194FF5 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD6A510D9 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xD8DFEB45 EQ PUSH2 0xFE JUMPI PUSH4 0xFA2DF414 EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x140 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH32 0xE46208AE3C8157621E96E03A67B3FC7B61B734022B04CF097B94DD994DD95B43 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D PUSH2 0x8EE JUMP JUMPDEST SWAP1 PUSH2 0x1AF PUSH2 0x1AA DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x241 PUSH2 0x904 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x31F JUMPI PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x309 JUMPI PUSH2 0xF7 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH32 0x752CD0C4FE55D95CBE1325EBC6A35E473A741572F01A076425179F2421841BF8 PUSH1 0x40 DUP1 MLOAD DUP5 PUSH1 0x0 SUB DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 PUSH1 0x64 DUP4 PUSH2 0x91A JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6518C33D PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3DC JUMPI POP POP POP DUP2 PUSH2 0x390 SWAP2 SUB DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3BA JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3AC JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x37A JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x427 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x4A3 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH2 0x4D8 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x95D JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF9 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7CE JUMPI DUP2 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x53A PUSH1 0x20 DUP5 ADD DUP6 PUSH2 0x91A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0xF9 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x7AE JUMPI DUP4 PUSH2 0x563 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x79C JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x793 JUMPI JUMPDEST POP PUSH2 0x782 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP4 PUSH2 0x755 JUMPI JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x744 JUMPI PUSH2 0x5F2 CALLER PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x6FE JUMPI JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x627 DUP2 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x634 JUMPI JUMPDEST POP POP ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 DUP3 PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B PUSH2 0x675 SWAP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xE12 JUMP JUMPDEST POP DUP6 DUP1 PUSH2 0x62C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x6A5 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x73E CALLER PUSH32 0x615F0F9E84155BEA8CC509FE18BEFEB1BAF65611E38A6BA60964480FB29DFD44 PUSH2 0xE12 JUMP JUMPDEST POP PUSH2 0x5F7 JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP4 PUSH2 0x5CD JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0x5A3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x59B JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x591 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x553 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x7FD PUSH2 0x8EE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x819 JUMPI PUSH2 0xF7 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xA70 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x849 PUSH2 0x8EE JUMP JUMPDEST SWAP1 PUSH2 0x856 PUSH2 0x1AA DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH2 0x879 PUSH1 0x4 CALLDATALOAD PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xF9 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8C3 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x8DD JUMPI JUMPDEST POP DUP4 PUSH2 0x8BC JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF9 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7CE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x9DC SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x752CD0C4FE55D95CBE1325EBC6A35E473A741572F01A076425179F2421841BF8 SWAP2 LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 PUSH1 0x84 DUP4 PUSH2 0x91A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA10 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA32 DUP3 DUP3 PUSH2 0xC34 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA3D JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xA6C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE12 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xA7A DUP3 DUP3 PUSH2 0xCDD JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA85 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xA6C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xDCF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xDAE JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0xE80 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH2 0xE6B PUSH2 0xE54 DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0xDE4 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x309 JUMPI DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x309 JUMPI DUP2 DUP2 SUB PUSH2 0xF1B JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xEE3 DUP3 DUP3 PUSH2 0xDE4 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF3B PUSH2 0xF2B PUSH2 0xE54 SWAP4 DUP7 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID 0xC1 0xF6 INVALID 0x24 PUSH3 0x1CE81E 0xC5 DUP3 PUSH29 0xAF0253CADB74709B061630E6B55E8237170593200002DD7BC7DEC4DCEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800F0 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205DEF67 OR 0xA5 0xC9 PUSH2 0x9ADE 0x24 0xA5 BLOBHASH 0x2F CHAINID STATICCALL 0xCA 0xB6 0xA9 EXTCODESIZE LT SWAP1 ADD 0x2A DUP8 PUSH6 0xD6797F67482F 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"468:1703:30:-:0;;;;;;;3147:66:2;468:1703:30;;;;;;7894:76:2;;-1:-1:-1;;;;;;;;;;;468:1703:30;;7983:34:2;7979:146;;-1:-1:-1;468:1703:30;;;;;;;;;7979:146:2;-1:-1:-1;;;;;;468:1703:30;-1:-1:-1;;;;;468:1703:30;;;3147:66:2;468:1703:30;;;8085:29:2;;468:1703:30;;8085:29:2;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:2;;-1:-1:-1;7936:23:2;468:1703:30;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2286,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8232":{"entryPoint":2308,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2330,"id":null,"parameterSlots":2,"returnSlots":0},"fun__grantRole":{"entryPoint":3124,"id":315,"parameterSlots":2,"returnSlots":1},"fun__revokeRole":{"entryPoint":2672,"id":585,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":3602,"id":9186,"parameterSlots":2,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":3453,"id":2465,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":2526,"id":129,"parameterSlots":1,"returnSlots":0},"fun_depositAssetTo":{"entryPoint":2397,"id":9962,"parameterSlots":2,"returnSlots":0},"fun_getRoleAdmin":{"entryPoint":2364,"id":171,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":2600,"id":545,"parameterSlots":2,"returnSlots":1},"fun_grantRole_8230":{"entryPoint":2740,"id":315,"parameterSlots":1,"returnSlots":1},"fun_grantRole_8231":{"entryPoint":2918,"id":315,"parameterSlots":1,"returnSlots":1},"fun_remove":{"entryPoint":3720,"id":9270,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":3293,"id":361,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_bytes32_dyn":{"entryPoint":3556,"id":null,"parameterSlots":2,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x881 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0x462D0B2E EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x8AAA6B92 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB1DAB948 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xB2194FF5 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD6A510D9 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xD8DFEB45 EQ PUSH2 0xFE JUMPI PUSH4 0xFA2DF414 EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x140 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH32 0xE46208AE3C8157621E96E03A67B3FC7B61B734022B04CF097B94DD994DD95B43 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D PUSH2 0x8EE JUMP JUMPDEST SWAP1 PUSH2 0x1AF PUSH2 0x1AA DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x241 PUSH2 0x904 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x31F JUMPI PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x309 JUMPI PUSH2 0xF7 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH32 0x752CD0C4FE55D95CBE1325EBC6A35E473A741572F01A076425179F2421841BF8 PUSH1 0x40 DUP1 MLOAD DUP5 PUSH1 0x0 SUB DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 PUSH1 0x64 DUP4 PUSH2 0x91A JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6518C33D PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3DC JUMPI POP POP POP DUP2 PUSH2 0x390 SWAP2 SUB DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3BA JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3AC JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x37A JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x427 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x4A3 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH2 0x4D8 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x95D JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF9 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7CE JUMPI DUP2 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x53A PUSH1 0x20 DUP5 ADD DUP6 PUSH2 0x91A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0xF9 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x7AE JUMPI DUP4 PUSH2 0x563 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x79C JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x793 JUMPI JUMPDEST POP PUSH2 0x782 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP4 PUSH2 0x755 JUMPI JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x744 JUMPI PUSH2 0x5F2 CALLER PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x6FE JUMPI JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x627 DUP2 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x634 JUMPI JUMPDEST POP POP ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 DUP3 PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B PUSH2 0x675 SWAP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xE12 JUMP JUMPDEST POP DUP6 DUP1 PUSH2 0x62C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x6A5 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x73E CALLER PUSH32 0x615F0F9E84155BEA8CC509FE18BEFEB1BAF65611E38A6BA60964480FB29DFD44 PUSH2 0xE12 JUMP JUMPDEST POP PUSH2 0x5F7 JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP4 PUSH2 0x5CD JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0x5A3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x59B JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x591 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x553 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0x7FD PUSH2 0x8EE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x819 JUMPI PUSH2 0xF7 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xA70 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x849 PUSH2 0x8EE JUMP JUMPDEST SWAP1 PUSH2 0x856 PUSH2 0x1AA DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x20 PUSH2 0x879 PUSH1 0x4 CALLDATALOAD PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xF9 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8C3 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x8DD JUMPI JUMPDEST POP DUP4 PUSH2 0x8BC JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF9 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7CE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x9DC SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x752CD0C4FE55D95CBE1325EBC6A35E473A741572F01A076425179F2421841BF8 SWAP2 LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 PUSH1 0x84 DUP4 PUSH2 0x91A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA10 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA32 DUP3 DUP3 PUSH2 0xC34 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA3D JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xA6C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE12 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xA7A DUP3 DUP3 PUSH2 0xCDD JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA85 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xA6C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x80FC495AAAF8D17E3F0F01E98ECF2DE6D37FA891873F4B915AB4B2F9B846A79A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xDF91394C13C48EBD5370100F1EB84AFE3C6C47A78F9F9F874D5A9EC6AFE0AE6B SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xDCF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xDAE JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0xE80 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH2 0xE6B PUSH2 0xE54 DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0xDE4 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x309 JUMPI DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x309 JUMPI DUP2 DUP2 SUB PUSH2 0xF1B JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xEE3 DUP3 DUP3 PUSH2 0xDE4 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF3B PUSH2 0xF2B PUSH2 0xE54 SWAP4 DUP7 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID 0xC1 0xF6 INVALID 0x24 PUSH3 0x1CE81E 0xC5 DUP3 PUSH29 0xAF0253CADB74709B061630E6B55E8237170593200002DD7BC7DEC4DCEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800F0 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205DEF67 OR 0xA5 0xC9 PUSH2 0x9ADE 0x24 0xA5 BLOBHASH 0x2F CHAINID STATICCALL 0xCA 0xB6 0xA9 EXTCODESIZE LT SWAP1 ADD 0x2A DUP8 PUSH6 0xD6797F67482F 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"468:1703:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;1744:6;468:1703;;966:10:3;1744:6:30;:::i;:::-;468:1703;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;966:10:3;;2114:50:30;;468:1703;;2114:50;468:1703;;;;;;;-1:-1:-1;;468:1703:30;;;;5767:26:0;468:1703:30;;;;:::i;:::-;5737:18:0;3202:4;5737:18;;;:::i;:::-;3202:4;:::i;:::-;5767:26;:::i;468:1703:30:-;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;881:25;468:1703;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;:::i;:::-;966:10:3;468:1703:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;468:1703:30;;;;1328:43:15;468:1703:30;;;;;;;;;1924:52;468:1703;;;;;;;;;;;;;;1924:52;468:1703;;;;-1:-1:-1;;;468:1703:30;1328:43:15;;;468:1703:30;1328:43:15;;468:1703:30;;;;;;;;;;;;1328:43:15;;;-1:-1:-1;;;;;468:1703:30;1328:43:15;;468:1703:30;1328:43:15;:::i;:::-;;:::i;468:1703:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;-1:-1:-1;468:1703:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;3901:31:0;468:1703:30;;;;;;-1:-1:-1;468:1703:30;;;;;;-1:-1:-1;468:1703:30;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;5662:18:29;468:1703:30;;;;;5662:18:29;:::i;:::-;468:1703:30;;;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;4301:16:2;468:1703:30;;;;4724:16:2;;:34;;;;468:1703:30;4803:1:2;4788:16;:50;;;;468:1703:30;4853:13:2;:30;;;;468:1703:30;4849:91:2;;;-1:-1:-1;;468:1703:30;;4803:1:2;468:1703:30;-1:-1:-1;;;;;;;;;;;468:1703:30;;4977:67:2;;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;7148:18:2;7144:73;;4193:31:1;966:10:3;4193:31:1;:::i;:::-;4234:71;;468:1703:30;;1288:3;468:1703;;1266:20;;;;;468:1703;;;;;;;;;4803:1:2;;468:1703:30;;;-1:-1:-1;;;;;468:1703:30;4193:31:1;468:1703:30;4193:31:1;:::i;:::-;4234:71;;1288:3:30;;;468:1703;1254:10;;4234:71:1;468:1703:30;;881:25;9425:50:29;468:1703:30;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;9425:50:29;:::i;:::-;;4234:71:1;;;;1266:20:30;;;468:1703;;;;;;;;;;;;;;;5064:101:2;;468:1703:30;5064:101:2;468:1703:30;;-1:-1:-1;;;;;;;;;;;468:1703:30;;-1:-1:-1;;;;;;;;;;;468:1703:30;5140:14:2;468:1703:30;;;4803:1:2;468:1703:30;;5140:14:2;468:1703:30;4234:71:1;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;9425:50:29;966:10:3;468:1703:30;9425:50:29;:::i;:::-;;4234:71:1;;7144:73:2;7189:17;;;468:1703:30;7189:17:2;468:1703:30;;7189:17:2;4977:67;-1:-1:-1;;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;4977:67:2;;;4849:91;4906:23;;;468:1703:30;4906:23:2;468:1703:30;;4906:23:2;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:2;;4724:34;;;-1:-1:-1;4724:34:2;;468:1703:30;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;:::i;:::-;966:10:3;-1:-1:-1;;;;;468:1703:30;;6441:34:0;6437:102;;6549:37;468:1703:30;;;6549:37:0;:::i;6437:102::-;6498:30;;;468:1703:30;6498:30:0;468:1703:30;;6498:30:0;468:1703:30;;;;;;-1:-1:-1;;468:1703:30;;;;5350:25:0;468:1703:30;;;;:::i;:::-;5320:18:0;3202:4;5320:18;;;:::i;3202:4::-;5350:25;:::i;468:1703:30:-;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1803:57:1;;;:97;;;;468:1703:30;;;;;;;1803:97:1;-1:-1:-1;;;3551:47:0;;;-1:-1:-1;3551:87:0;;;;1803:97:1;;;;;3551:87:0;-1:-1:-1;;;1134:40:4;;-1:-1:-1;3551:87:0;;;468:1703:30;;;;-1:-1:-1;;;;;468:1703:30;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;468:1703:30;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;4759:191:0:-;-1:-1:-1;468:1703:30;-1:-1:-1;;;;;;;;;;;468:1703:30;;4919:24:0;468:1703:30;-1:-1:-1;468:1703:30;4919:24:0;468:1703:30;4759:191:0;:::o;1464:194:30:-;468:1703;;;;;;1573:1;468:1703;;;;1745:53:15;;1464:194:30;-1:-1:-1;;;;;468:1703:30;;1534:41;;;1573:1;468:1703;;;-1:-1:-1;;;468:1703:30;1745:53:15;;;966:10:3;1745:53:15;;;468:1703:30;1639:4;468:1703;;;;;;;;;;;;1745:53:15;;;-1:-1:-1;;;;;468:1703:30;1745:53:15;;468:1703:30;1745:53:15;:::i;:::-;1464:194:30:o;4148:103:0:-;-1:-1:-1;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;966:10:3;468:1703:30;;;;;;;;;;4468:23:0;4464:108;;4148:103;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:0;966:10:3;4514:47:0;468:1703:30;;;;-1:-1:-1;4514:47:0;3987:348:1;4193:31;;;;:::i;:::-;4234:71;;;;4314:14;;3987:348;:::o;4234:71::-;-1:-1:-1;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;9425:50:29;;-1:-1:-1;;;;;468:1703:30;;9425:50:29;:::i;:::-;;3987:348:1;:::o;4438:353::-;4645:32;;;;:::i;:::-;4687:74;;;;4770:14;;4438:353;:::o;4687:74::-;-1:-1:-1;468:1703:30;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;9746:53:29;;-1:-1:-1;;;;;468:1703:30;;9746:53:29;:::i;7270:387:0:-;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;966:10:3;;468:1703:30;7532:40:0;468:1703:30;;7532:40:0;7509:4;7586:11;:::o;7432:219::-;7628:12;468:1703:30;7628:12:0;:::o;7270:387::-;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;966:10:3;;468:1703:30;881:25;;7532:40:0;;468:1703:30;7532:40:0;7509:4;7586:11;:::o;7270:387::-;468:1703:30;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;966:10:3;;468:1703:30;;7532:40:0;;468:1703:30;7532:40:0;7509:4;7586:11;:::o;7432:219::-;7628:12;;468:1703:30;7628:12:0;:::o;7894:388::-;468:1703:30;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;468:1703:30;;;;;;;;-1:-1:-1;;;;;468:1703:30;;;;;;;;;;;;;;;-1:-1:-1;;468:1703:30;;;966:10:3;;468:1703:30;;8157:40:0;;468:1703:30;8157:40:0;468:1703:30;8211:11:0;:::o;8370:720:15:-;;-1:-1:-1;8507:421:15;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:15;;8942:15;;-1:-1:-1;;;;;;468:1703:30;;8960:26:15;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:15;;;-1:-1:-1;;;;;468:1703:30;;;;9033:40:15;468:1703:30;;;9033:40:15;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:15;;;;;468:1703:30;;;;;;;;-1:-1:-1;468:1703:30;;-1:-1:-1;468:1703:30;;;-1:-1:-1;468:1703:30;:::o;:::-;;;;;;;;;;;;2336:406:29;5006:14;;;468:1703:30;;;;;;;;;;;5006:26:29;2415:321;468:1703:30;;;;;;;;;;;;;;5006:14:29;468:1703:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5006:14:29;2671:11;:::o;2415:321::-;2713:12;;;468:1703:30;2713:12:29;:::o;2910:1368::-;;3105:14;;;468:1703:30;;;;;;;;;;;3141:13:29;;;3137:1135;3141:13;;;-1:-1:-1;;468:1703:30;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;;;3616:23:29;;;3612:378;;3137:1135;468:1703:30;;;;;;;;;-1:-1:-1;;468:1703:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3105:14:29;4207:11;:::o;468:1703:30:-;;;;;;;;;;;;3612:378:29;468:1703:30;3679:22:29;3800:23;3679:22;;;:::i;:::-;468:1703:30;;;;;;3800:23:29;;;;;:::i;468:1703:30:-;;;;;;;;;;;;3612:378:29;;;;;3137:1135;4249:12;;;;468:1703:30;4249:12:29;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MATCHER_ROLE()":"b2194ff5","collateral()":"d8dfeb45","depositAsset(uint256)":"fa2df414","depositAssetTo(address,uint256)":"8aaa6b92","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address[],address)":"462d0b2e","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setDelegate(address,uint256)":"d6a510d9","supportsInterface(bytes4)":"01ffc9a7","withdrawAsset(address,uint256,uint256)":"b1dab948"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSigner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"DelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"UserBalanceChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATCHER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAssetTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_matchers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"Storage gap for future upgrades.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EHMarketV1.sol\":\"EHMarketV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xaec38804089a16494f7d45ebbbeab78fe05e5dc4bc2eae1d2af458fe999fb43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04796408e2c4a1051afb23319e9505edb595a3d9c663ff5d6fcfb8e185ab1d93\",\"dweb:/ipfs/Qma8ZTi4kGyqg45SyNibbJSqMF7broiQnJPHhEGLcZyF9U\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/EHMarketV1.sol\":{\"keccak256\":\"0x6d9e28be8f4e6f116a08f32c4d2a9e6de3410137543429b3557457c477c01df8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2dd5969ff5a87707f79e5bc0afb572c1b43eb561d9bb62305e4315dc180ec44\",\"dweb:/ipfs/QmUPwnCZJxq4t8tsLoV7CoJcfDCfv9HYpMzKSsfcdnPWzJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9876,"contract":"contracts/EHMarketV1.sol:EHMarketV1","label":"collateral","offset":0,"slot":"0","type":"t_address"},{"astId":9881,"contract":"contracts/EHMarketV1.sol:EHMarketV1","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)10_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)10_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[10]","numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/interfaces/IEventHorizonMarket.sol":{"IEventHorizonMarket":{"abi":[{"inputs":[],"name":"ExpiredSignature","type":"error"},{"inputs":[],"name":"InstrumentDoesNotExist","type":"error"},{"inputs":[{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"validUntil","type":"uint256"}],"name":"MatcherIsOperational","type":"error"},{"inputs":[],"name":"UnauthorizedSigner","type":"error"},{"inputs":[],"name":"WithdrawMoreThanBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"BalancesMerkleRootUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"soLevel","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawMarginLevel","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidationFeePercent","type":"uint256"}],"name":"BasicParamsUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"DelegateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"int256","name":"amount","type":"int256"},{"indexed":false,"internalType":"uint256","name":"finalBalance","type":"uint256"}],"name":"DepositBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"}],"name":"InstrumentDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"string[12]","name":"ticker","type":"string[12]"},{"indexed":false,"internalType":"uint256","name":"leverage","type":"uint256"}],"name":"InstrumentUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"int256","name":"frLongPerSecond","type":"int256"},{"indexed":false,"internalType":"int256","name":"frShortPerSecond","type":"int256"},{"indexed":false,"internalType":"int256","name":"longFRStored","type":"int256"},{"indexed":false,"internalType":"int256","name":"shortFRStored","type":"int256"}],"name":"NewFundingRate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InstrumentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"MatcherIsOperational\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawMoreThanBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"BalancesMerkleRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"soLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawMarginLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationFeePercent\",\"type\":\"uint256\"}],\"name\":\"BasicParamsUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"DelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalBalance\",\"type\":\"uint256\"}],\"name\":\"DepositBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InstrumentDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[12]\",\"name\":\"ticker\",\"type\":\"string[12]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"InstrumentUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"frLongPerSecond\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"frShortPerSecond\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"longFRStored\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"shortFRStored\",\"type\":\"int256\"}],\"name\":\"NewFundingRate\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEventHorizonMarket.sol\":\"IEventHorizonMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IEventHorizonMarket.sol\":{\"keccak256\":\"0x11f5524ecd6cdb43dec0ffd21f225b02f66e5dc684bcc9c0ad0b8da4fee02110\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13c9223e8855798d5d28823650ae0f6f628310227b7fc34bf2d9a208f3bd0a76\",\"dweb:/ipfs/QmcyxLeF7scA3QYzq2UUnECgUsQ7Vuu9vVfsHBzwnw8ZQk\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/mock/MockERC20.sol":{"MockToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":970,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":933,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346103a057610c8d80380380610019816103a5565b9283398101906060818303126103a05780516001600160401b0381116103a057826100459183016103ca565b60208201519092906001600160401b0381116103a0576040916100699184016103ca565b9101516001600160a01b038116908190036103a05782516001600160401b0381116102a957600354600181811c91168015610396575b602082101461028957601f8111610331575b506020601f82116001146102ca57819293946000926102bf575b50508160011b916000199060031b1c1916176003555b81516001600160401b0381116102a957600454600181811c9116801561029f575b602082101461028957601f8111610224575b50602092601f82116001146101bf57928192936000926101b4575b50508160011b916000199060031b1c1916176004555b801561019e57600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361085790816104368239f35b631e4fbdf760e01b600052600060045260246000fd5b01519050388061012f565b601f198216936004600052806000209160005b86811061020c57508360019596106101f3575b505050811b01600455610145565b015160001960f88460031b161c191690553880806101e5565b919260206001819286850151815501940192016101d2565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c8101916020841061027f575b601f0160051c01905b8181106102735750610114565b60008155600101610266565b909150819061025d565b634e487b7160e01b600052602260045260246000fd5b90607f1690610102565b634e487b7160e01b600052604160045260246000fd5b0151905038806100cb565b601f198216906003600052806000209160005b81811061031957509583600195969710610300575b505050811b016003556100e1565b015160001960f88460031b161c191690553880806102f2565b9192602060018192868b0151815501940192016102dd565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061038c575b601f0160051c01905b81811061038057506100b1565b60008155600101610373565b909150819061036a565b90607f169061009f565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102a957604052565b81601f820112156103a0578051906001600160401b0382116102a9576103f9601f8301601f19166020016103a5565b92828452602083830101116103a05760005b82811061042057505060206000918301015290565b8060208092840101518282870101520161040b56fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220d06c2546fc6d759c8699d4a5c71f636a8e5d5725f954f573781610516e67abf764736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3A0 JUMPI PUSH2 0xC8D DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x3A0 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3A0 JUMPI DUP3 PUSH2 0x45 SWAP2 DUP4 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3A0 JUMPI PUSH1 0x40 SWAP2 PUSH2 0x69 SWAP2 DUP5 ADD PUSH2 0x3CA JUMP JUMPDEST SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3A0 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A9 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x396 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x289 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x331 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2CA JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2BF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A9 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x29F JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x289 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x224 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BF JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1B4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH2 0x857 SWAP1 DUP2 PUSH2 0x436 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x20C JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x1F3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x145 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1E5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x273 JUMPI POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x266 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCB JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x319 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x300 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F2 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x38C JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x380 JUMPI POP PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x373 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2A9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3A0 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2A9 JUMPI PUSH2 0x3F9 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3A5 JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3A0 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x420 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x40B JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH13 0x2546FC6D759C8699D4A5C71F63 PUSH11 0x8E5D5725F954F573781610 MLOAD PUSH15 0x67ABF764736F6C634300081A003300 ","sourceMap":"168:270:32:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;168:270:32;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;168:270:32;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;168:270:32;;;;;;;;;;-1:-1:-1;;;;;168:270:32;;;;1648:13:12;168:270:32;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;;;;;1648:13:12;168:270:32;;;;;1648:13:12;168:270:32;;;;-1:-1:-1;;;;;168:270:32;;;;1671:17:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;;;;;1648:13:12;168:270:32;;;;;1671:17:12;168:270:32;;1273:26:6;;1269:95;;3004:6;168:270:32;;-1:-1:-1;;;;;;168:270:32;;;;;;;;;;;-1:-1:-1;;;;;168:270:32;3052:40:6;-1:-1:-1;;3052:40:6;168:270:32;;;;;;;1269:95:6;1322:31;;;-1:-1:-1;1322:31:6;-1:-1:-1;1671:17:12;168:270:32;;-1:-1:-1;1322:31:6;168:270:32;;;;-1:-1:-1;168:270:32;;;;;;;;;;1671:17:12;-1:-1:-1;168:270:32;;-1:-1:-1;168:270:32;;-1:-1:-1;168:270:32;;;;;;;;;;;;;;;;;;;;;1671:17:12;168:270:32;;;;;;;;;;1648:13:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:12;-1:-1:-1;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;-1:-1:-1;168:270:32;;1671:17:12;168:270:32;;-1:-1:-1;168:270:32;;;;;;;;;;;;-1:-1:-1;168:270:32;;1671:17:12;168:270:32;;-1:-1:-1;168:270:32;;;;;-1:-1:-1;168:270:32;;;;;;;;;;1648:13:12;-1:-1:-1;168:270:32;;-1:-1:-1;168:270:32;;-1:-1:-1;168:270:32;;;;;;;;;;;;;;;;;;;;;;;1648:13:12;168:270:32;;;;;;;;;;1648:13:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:12;-1:-1:-1;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;-1:-1:-1;;168:270:32;;;-1:-1:-1;;;;;168:270:32;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;168:270:32;;;;;;;;-1:-1:-1;;168:270:32;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;;;;;-1:-1:-1;168:270:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1821,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3898":{"entryPoint":1843,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1748,"id":null,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":2040,"id":1108,"parameterSlots":0,"returnSlots":0},"fun_transfer":{"entryPoint":1865,"id":1669,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220d06c2546fc6d759c8699d4a5c71f636a8e5d5725f954f573781610516e67abf764736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH13 0x2546FC6D759C8699D4A5C71F63 PUSH11 0x8E5D5725F954F573781610 MLOAD PUSH15 0x67ABF764736F6C634300081A003300 ","sourceMap":"168:270:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;:::i;:::-;1500:62:6;;:::i;:::-;-1:-1:-1;;;;;168:270:32;2627:22:6;;2623:91;;3004:6;168:270:32;;-1:-1:-1;;;;;;168:270:32;;;;;;;-1:-1:-1;;;;;168:270:32;3052:40:6;-1:-1:-1;;3052:40:6;168:270:32;2623:91:6;2672:31;;;168:270:32;2672:31:6;168:270:32;;;;;2672:31:6;168:270:32;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;3440:5:12;168:270:32;;:::i;:::-;;;735:10:18;;3440:5:12;:::i;:::-;168:270:32;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;-1:-1:-1;;168:270:32;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;168:270:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;1710:6:6;168:270:32;;;-1:-1:-1;;;;;168:270:32;;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;1500:62:6;;:::i;:::-;3004:6;168:270:32;;-1:-1:-1;;;;;;168:270:32;;;;;;;-1:-1:-1;;;;;168:270:32;3052:40:6;168:270:32;;3052:40:6;168:270:32;;;;;;;-1:-1:-1;;168:270:32;;;;-1:-1:-1;;;;;168:270:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;:::i;:::-;;;1500:62:6;;;:::i;:::-;-1:-1:-1;;;;;168:270:32;7509:21:12;;7505:91;;6214:21;168:270:32;;;;;;;;;;;;6214:21:12;168:270:32;7064:25:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;7064:25:12;168:270:32;;;;;;;;;;;;;;7505:91:12;7553:32;;;168:270:32;7553:32:12;168:270:32;;;;;7553:32:12;168:270:32;;;;;;-1:-1:-1;;168:270:32;;;;;;;2761:2:12;168:270:32;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;168:270:32;;;;;;;;;;;;;;;735:10:18;168:270:32;;;;;;;;;;;;;;-1:-1:-1;;10561:36:12;;10557:309;;168:270:32;4967:5:12;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:18;9892:21:12;9888:90;;4967:5;168:270:32;;;;;;;;;;;;;;735:10:18;168:270:32;-1:-1:-1;168:270:32;;;;;-1:-1:-1;168:270:32;;;;;10557:309:12;;;9888:90;9936:31;;;168:270:32;9936:31:12;168:270:32;;;;;9936:31:12;9790:89;9836:32;;;168:270:32;9836:32:12;168:270:32;;;;;9836:32:12;10613:130;10668:60;;;;;168:270:32;10668:60:12;735:10:18;168:270:32;;;;;;;;10668:60:12;168:270:32;;;;;;-1:-1:-1;;168:270:32;;;;;2908:12:12;168:270:32;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;;:::i;:::-;;;735:10:18;;9794:19:12;9790:89;;-1:-1:-1;;;;;168:270:32;;9892:21:12;;9888:90;;735:10:18;168:270:32;;;;;;;;;-1:-1:-1;168:270:32;;;;;-1:-1:-1;168:270:32;;;;;;;10066:31:12;168:270:32;735:10:18;10066:31:12;;168:270:32;;;;;;;;;;;;;-1:-1:-1;;168:270:32;;;;;1837:5:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:270:32;;;;;-1:-1:-1;;168:270:32;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;168:270:32;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;168:270:32;;;;;;:::o;5374:300:12:-;-1:-1:-1;;;;;168:270:32;;5457:18:12;;5453:86;;-1:-1:-1;;;;;168:270:32;;5552:16:12;;5548:86;;5473:1;168:270:32;;;;;;;;;;6321:19:12;;;6317:115;;168:270:32;;;;7064:25:12;168:270:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:12;5374:300::o;6317:115::-;6367:50;168:270:32;6367:50:12;;;;;;;;168:270:32;;;;;6367:50:12;5453:86;5498:30;;;5473:1;5498:30;5473:1;5498:30;168:270:32;;5473:1:12;5498:30;1796:162:6;1710:6;168:270:32;-1:-1:-1;;;;;168:270:32;735:10:18;1855:23:6;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:6;735:10:18;1901:40:6;168:270:32;;-1:-1:-1;1901:40:6"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockERC20.sol\":\"MockToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mock/MockERC20.sol\":{\"keccak256\":\"0xeb98bb72e6ee6feb0ee886ea7c93bf663d0d94236365cc16a24b0cbaa80b91ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcf0d94d78c42e5b09d3340c45980c65920e644e4f6ec6e93a0af634f527a8cc\",\"dweb:/ipfs/Qmee1GyKP6HJyWyrC8sNxozMUuFZAvMsyfKPPsMnChXwzF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1447,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1453,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1455,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1457,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1459,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1032,"contract":"contracts/mock/MockERC20.sol:MockToken","label":"_owner","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}